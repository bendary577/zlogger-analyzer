20240806 11:58:52.393 0075 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:58:52.394 0075 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:58:52.394 0075 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0007 - Allocated=10, Used=1
20240806 11:58:52.394 0075 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0007 - SELECT ADM_ScenarioSelection.ScenarioSelection_Id, ADM_ScenarioSelection.EduScenario_Id, ADM_ScenarioSelection.ApplicationForm_Id, ADM_ScenarioSelection.Enrollment_Id, ADM_ScenarioSelection.SelectionStatus, ADM_ScenarioSelection.JoiningDate, ADM_ScenarioSelection.ExitDate, ADM_ScenarioSelection.UserStamp, ADM_ScenarioSelection.TimeStamp, ADM_ScenarioSelection.NoteHistory_Id, ADM_Enrollment.Enrollment_Id, ADM_Enrollment.School_Id, ADM_Enrollment.Student_Id, ADM_Enrollment.Session_Id, ADM_Enrollment.StreamGrade_Id, ADM_Enrollment.Community_Id, ADM_Enrollment.EnrollmentType, ADM_Enrollment.EntryType, ADM_Enrollment.EntryDate, ADM_Enrollment.TransferFromSchool_Id, ADM_Enrollment.TransferToSchool_Id, ADM_Enrollment.ExitType, ADM_Enrollment.ExitReason, ADM_Enrollment.ExitDate, ADM_Enrollment.Note, ADM_Enrollment.IsSpecialNeed, ADM_Enrollment.ExternalId, ADM_Enrollment.UserStamp, ADM_Enrollment.TimeStamp, ADM_Enrollment.RegistrationStatus, ADM_Enrollment.TransferFromEnrollment_Id, ADM_Enrollment.TransferToCommunity_Id, ADM_Enrollment.IsYearActiveEnrollment, ADM_Enrollment.RecomputePassFail, ADM_Enrollment.MandatoryEducation, ADM_Enrollment.IsWaitingList, ADM_Enrollment.CreateTimeStamp, ADM_Enrollment.IsNotOfficialEnrollment, ADM_Enrollment.UserNote, ADM_Enrollment.DeleteType, ADM_Enrollment.IsDeleted, ADM_Enrollment.CreationUser_Id, ADM_Student.Student_Id, ADM_Student.StudentNumber, ADM_Student.CreationDate, ADM_Student.CreationUser_Id, ADM_Student.UserStamp, ADM_Student.TimeStamp, ADM_Student.IsDeleted, ADM_Student.AttributeList_Id, ADM_Student.CitizenshipStatus, ADM_Session.Session_Id, ADM_Session.AcademicYear_Id, ADM_Session.SessionDef_Id, ADM_Session.Title, ADM_Session.Parent_Id, ADM_Session.StartDate, ADM_Session.EndDate, ADM_Session.Position, ADM_Session.UserStamp, ADM_Session.TimeStamp, ADM_AcademicYear.AcademicYear_Id, ADM_AcademicYear.Title, ADM_AcademicYear.IsCurrent, ADM_AcademicYear.Status, ADM_AcademicYear.POSITION, COMM_Person.Person_Id, COMM_Person.Civility, COMM_Person.IDNumber, COMM_Person.FirstName, COMM_Person.SecondName, COMM_Person.ThirdName, COMM_Person.FourthName, COMM_Person.FamilyName, COMM_Person.EnglishFirstName, COMM_Person.EnglishSecondName, COMM_Person.EnglishThirdName, COMM_Person.EnglishFourthName, COMM_Person.EnglishFamilyName, COMM_Person.BirthName, COMM_Person.BirthDate, COMM_Person.BirthCity, COMM_Person.EnglishBirthCity, COMM_Person.BirthCountry, COMM_Person.Nationality, COMM_Person.Gender, COMM_Person.MaritalStatus, COMM_Person.Photo_Id, COMM_Person.Religion, COMM_Person.ReligionSector, COMM_Person.PhoneList_Id, COMM_Person.AddressList_Id, COMM_Person.OtherIdList_Id, COMM_Person.IsDeleted, COMM_Person.ExternalId, COMM_Person.UserStamp, COMM_Person.TimeStamp, COMM_Person.User_Id, COMM_Person.InformationSource, COMM_Person.LastSyncTime, COMM_Person.IsTemporary, COMM_Person.VStartDate, COMM_PhoneList.PhoneList_Id, COMM_Phone.Phone_Id, COMM_Phone.PhoneList_Id, COMM_Phone.Name, COMM_Phone.Value, COMM_Phone.Note, COMM_Phone.IsPrivate, COMM_Phone.IsPrimary, COMM_Phone.ContactType, ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.ScenarioSelection_Id, ADM_SelectionDetails.EduScenarioOptionalGrp_Id, ADM_SelectionDetails.CourseDefCode, ADM_SelectionDetails.NumberOfPeriods, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp, ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, ADM_EduScenarioOptionalGrp.EduScenario_Id, ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, ADM_EduScenarioOptionalGrp.CourseDefCodes, ADM_EduScenarioOptionalGrp.NumberOfPeriods, ADM_EduScenarioOptionalGrp.type, ADM_OptionalCourseGroup.OptionalCourseGroup_Id, ADM_OptionalCourseGroup.Name, ADM_OptionalCourseGroup.MinimumSelectedCourse, ADM_OptionalCourseGroup.MaximumSelectedCourse, ADM_OptionalCourseGroup.IsSelectedByStudent, ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, ADM_EduScenarioStreamGrade.EduScenario_Id, ADM_EduScenarioStreamGrade.EducationType, ADM_EduScenarioStreamGrade.EducationPath_Id, ADM_EduScenarioStreamGrade.EducationFocus, ADM_EduScenarioStreamGrade.StreamGrade, ADM_StreamGrade.StreamGrade_Id, ADM_StreamGrade.Name, ADM_StreamGrade.Title, ADM_StreamGrade.Grade_Id, ADM_Grade.Grade_Id, ADM_Grade.EducationPathDef_Id, ADM_Grade.Name, ADM_Grade.Title, ADM_Grade.Position, ADM_Grade.SchoolLevel, ADM_Grade.MinAge, ADM_Grade.MinSpAge, ADM_Grade.MaxAge, ADM_Grade.MaxSpAge, ADM_Grade.MinAgeMargin, ADM_Grade.MinAgeMarginUnit, ADM_Grade.MaxAgeMargin, ADM_Grade.MaxAgeMarginUnit, ADM_Grade.CapacityGroup, ADM_Grade.MinAgeMargin2, ADM_Grade.MinAgeMarginUnit2, ADM_Grade.MaxAgeMargin2, ADM_Grade.MaxAgeMarginUnit2, ADM_Grade.ExternalId, ADM_Grade.CommunityTitlePrefix, ADM_Grade.AgeReferenceDate, ADM_Grade.VStartDate, ADM_Grade.UserStamp, ADM_Grade.TimeStamp, ADM_CourseDefStreamGrade.CourseDefStreamGrade_Id, ADM_CourseDefStreamGrade.CourseDef_Id, ADM_CourseDefStreamGrade.StreamGrade_Id, ADM_CourseDefStreamGrade.IsOptional, ADM_CourseDefStreamGrade.OptionalCourseGroup_Id, ADM_CourseDef.CourseDef_Id, ADM_CourseDef.EducationPathDef_Id, ADM_CourseDef.SessionDef_Id, ADM_CourseDef.TeachingSubject, ADM_CourseDef.TeachingLanguage, ADM_CourseDef.Title, ADM_CourseDef.NumberOfPeriods, ADM_CourseDef.NumberOfPeriodsPerWeek, ADM_CourseDef.PeriodDuration, ADM_CourseDef.PeriodDurationUnit, ADM_CourseDef.SlotColor, ADM_CourseDef.StudentGender, ADM_CourseDef.IsAcademic, ADM_CourseDef.Code, ADM_CourseDef.Position, ADM_CourseDef.CourseWeight, ADM_CourseDef.PassScore, ADM_CourseDef.OtherTitle, ADM_CourseDef.isTermBasedCourse, ADM_CourseDef.Department, ADM_CourseDef.UserStamp, ADM_CourseDef.TimeStamp, COMM_ApplicationForm.ApplicationForm_Id, COMM_ApplicationForm.ApplicationFormNumber, COMM_ApplicationForm.ApplicationDate, COMM_ApplicationForm.Applicant_Id, COMM_ApplicationForm.Workflow_Id, COMM_ApplicationForm.ApplicationFormType, COMM_ApplicationForm.Note, COMM_ApplicationForm.TimeStamp, COMM_ApplicationForm.UserStamp, REG_StudentRegistration.StudentRegistration_Id, REG_StudentRegistration.ApplicationForm_Id, REG_StudentRegistration.Student_Id, REG_StudentRegistration.AcademicYear_Id, REG_StudentRegistration.EducationPath_Id, REG_StudentRegistration.Enrollment_Id, REG_StudentRegistration.EducationType, REG_StudentRegistration.EducationFocus, REG_StudentRegistration.StreamGrade, REG_StudentRegistration.School_Id, REG_StudentRegistration.IsTransportRequired, REG_StudentRegistration.ExamTime, REG_StudentRegistration.ExamScore, REG_StudentRegistration.InterviewTime, REG_StudentRegistration.DocumentList_Id, REG_StudentRegistration.CitizenshipStatus, REG_StudentRegistration.ParentWorkPlace, REG_StudentRegistration.IsSpecialNeed, REG_StudentRegistration.TimeStamp, REG_StudentRegistration.UserStamp, REG_StudentRegistration.InCatchmentArea, REG_StudentRegistration.ProgramCategory_Id, COMM_Workflow.Workflow_Id, COMM_Workflow.Name, COMM_Workflow.Code, COMM_Workflow.Note, COMM_ApplicationFormState.ApplicationFormState_Id, COMM_ApplicationFormState.WorkflowState_Id, COMM_ApplicationFormState.PrevWorkflowState_Id, COMM_ApplicationFormState.StateStartDate, COMM_ApplicationFormState.StateEndDate, COMM_ApplicationFormState.PerformedByUser_Id, COMM_ApplicationFormState.AttributeList_Id, COMM_ApplicationFormState.ApplicationForm_Id, COMM_ApplicationFormState.IsCurrent, COMM_ApplicationFormState.Note, COMM_ApplicationFormState.TimeStamp, COMM_ApplicationFormState.UserStamp, COMM_WorkflowState.WorkflowState_Id, COMM_WorkflowState.Workflow_Id, COMM_WorkflowState.Name, COMM_WorkflowState.StateCode, COMM_WorkflowState.Note FROM ADM_ScenarioSelection JOIN ADM_Enrollment ON ((ADM_Enrollment.IsDeleted = 0)) AND ((ADM_ScenarioSelection.Enrollment_Id = ADM_Enrollment.Enrollment_Id)) JOIN ADM_Student ON ((ADM_Student.IsDeleted = 0)) AND ((ADM_Enrollment.Student_Id = ADM_Student.Student_Id)) JOIN ADM_Session ON (ADM_Enrollment.Session_Id = ADM_Session.Session_Id) JOIN ADM_AcademicYear ON (ADM_Session.AcademicYear_Id = ADM_AcademicYear.AcademicYear_Id) JOIN COMM_Person ON ((COMM_Person.IsDeleted = 0)) AND ((ADM_Student.Student_Id = COMM_Person.Person_Id)) JOIN COMM_PhoneList ON (COMM_Person.PhoneList_Id = COMM_PhoneList.PhoneList_Id) JOIN COMM_Phone ON (COMM_PhoneList.PhoneList_Id = COMM_Phone.PhoneList_Id) JOIN ADM_EduScenario ON (ADM_ScenarioSelection.EduScenario_Id = ADM_EduScenario.EduScenario_Id) LEFT OUTER JOIN ADM_SelectionDetails ON (ADM_ScenarioSelection.ScenarioSelection_Id = ADM_SelectionDetails.ScenarioSelection_Id) JOIN ADM_EduScenarioOptionalGrp ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioOptionalGrp.EduScenario_Id) JOIN ADM_OptionalCourseGroup ON (ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = ADM_OptionalCourseGroup.OptionalCourseGroup_Id) JOIN ADM_EduScenarioStreamGrade ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioStreamGrade.EduScenario_Id) JOIN ADM_StreamGrade ON (ADM_EduScenarioStreamGrade.StreamGrade = ADM_StreamGrade.Name) JOIN ADM_Grade ON (ADM_StreamGrade.Grade_Id = ADM_Grade.Grade_Id) JOIN ADM_CourseDefStreamGrade ON ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND (ADM_OptionalCourseGroup.OptionalCourseGroup_Id = ADM_CourseDefStreamGrade.OptionalCourseGroup_Id))) JOIN ADM_CourseDef ON (ADM_CourseDefStreamGrade.CourseDef_Id = ADM_CourseDef.CourseDef_Id) LEFT OUTER JOIN COMM_ApplicationForm ON (ADM_ScenarioSelection.ApplicationForm_Id = COMM_ApplicationForm.ApplicationForm_Id) LEFT OUTER JOIN REG_StudentRegistration ON (COMM_ApplicationForm.ApplicationForm_Id = REG_StudentRegistration.ApplicationForm_Id) LEFT OUTER JOIN COMM_Workflow ON (COMM_ApplicationForm.Workflow_Id = COMM_Workflow.Workflow_Id) LEFT OUTER JOIN COMM_ApplicationFormState ON (COMM_ApplicationForm.ApplicationForm_Id = COMM_ApplicationFormState.ApplicationForm_Id) LEFT OUTER JOIN COMM_WorkflowState ON (COMM_ApplicationFormState.WorkflowState_Id = COMM_WorkflowState.WorkflowState_Id) WHERE ((((((ADM_EduScenario.EduScenario_Id = ?) AND (ADM_Enrollment.School_Id IN(?))) AND (ADM_ScenarioSelection.ExitDate IS NULL)) AND (ADM_Enrollment.IsYearActiveEnrollment = ?)) AND ((((COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (COMM_ApplicationFormState.IsCurrent = ?)) AND (COMM_WorkflowState.StateCode <> ?)) OR (COMM_ApplicationForm.ApplicationForm_Id IS NULL))) AND (ADM_SelectionDetails.SelectionDetails_Id IS NULL))
20240806 11:58:52.395 0075 =FUN= [ZQL.PhysicalConnection] Parameters: 622198871, 838, 1, 1, 0
20240806 11:58:52.395 0075 =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:58:53.035 009E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdataserver.SystemSession.heartbeat
20240806 11:58:53.037 009E =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.dbag.DBag.load
20240806 11:58:53.037 009E =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zdeksystem.SYS_Session.Session_Id, zdeksystem.SYS_Session.User_Id, zdeksystem.SYS_Session.UserName, zdeksystem.SYS_Session.Token, zdeksystem.SYS_Session.LastCallTime, zdeksystem.SYS_Session.ManagingServerName, zdeksystem.SYS_Session.ManagingServerPort, zdeksystem.SYS_Session.LastProcessedNotification_Id, zdeksystem.SYS_Session.LastProcessedNotificationTime, zdeksystem.SYS_Session.DataServerClientIP, zdeksystem.SYS_Session.DataServerClientDetails, zdeksystem.SYS_Session.OriginatorClientIP, zdeksystem.SYS_Session.OriginatorClientDetails, zdeksystem.SYS_Session.PermanentSession_Id, zdeksystem.SYS_Session.Locale, zdeksystem.SYS_Session.ValidationToken,zdeksystem.SYS_PermanentSession.PermanentSession_Id, zdeksystem.SYS_PermanentSession.Name, zdeksystem.SYS_PermanentSession.LastAcknowledegedNotif_Id, zdeksystem.SYS_PermanentSession.LastAcknowledgedNotifTime FROM zdeksystem.SYS_Session LEFT OUTER JOIN zdeksystem.SYS_PermanentSession ON zdeksystem.SYS_Session.PermanentSession_Id = zdeksystem.SYS_PermanentSession.PermanentSession_Id WHERE (zdeksystem.SYS_Session.Session_Id = 1901330433);
20240806 11:58:53.037 009E =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:58:53.037 009E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:58:53.037 009E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0012 - Allocated=10, Used=2
20240806 11:58:53.037 009E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0012 - SELECT SYS_Session.Session_Id, SYS_Session.User_Id, SYS_Session.UserName, SYS_Session.Token, SYS_Session.LastCallTime, SYS_Session.ManagingServerName, SYS_Session.ManagingServerPort, SYS_Session.LastProcessedNotification_Id, SYS_Session.LastProcessedNotificationTime, SYS_Session.DataServerClientIP, SYS_Session.DataServerClientDetails, SYS_Session.OriginatorClientIP, SYS_Session.OriginatorClientDetails, SYS_Session.PermanentSession_Id, SYS_Session.Locale, SYS_Session.ValidationToken, SYS_PermanentSession.PermanentSession_Id, SYS_PermanentSession.Name, SYS_PermanentSession.LastAcknowledegedNotif_Id, SYS_PermanentSession.LastAcknowledgedNotifTime FROM SYS_Session LEFT OUTER JOIN SYS_PermanentSession ON (SYS_Session.PermanentSession_Id = SYS_PermanentSession.PermanentSession_Id) WHERE (SYS_Session.Session_Id = ?)
20240806 11:58:53.038 009E =FUN= [ZQL.PhysicalConnection] Parameters: 1901330433
20240806 11:58:53.038 009E =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:58:53.073 009E =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:58:53.073 009E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:58:53.073 009E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0012
20240806 11:58:53.073 009E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.endQuery : 20 columns, 1 rows
20240806 11:58:53.073 009E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0012
20240806 11:58:53.073 009E =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0012
20240806 11:58:53.073 009E =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:58:53.073 009E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 11:58:53.073 009E =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.dbag.DBag.load
20240806 11:58:53.073 009E =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:58:53.073 009E =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0002 - Allocated=10, Used=2
20240806 11:58:53.073 009E =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0002
20240806 11:58:53.116 009E =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 11:58:53.116 009E =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0002
20240806 11:58:53.116 009E =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0002
20240806 11:58:53.116 009E =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:58:53.116 009E =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 11:58:53.116 009E =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 11:58:53.116 009E =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT TOP 5000 zdeksystem.SYS_Notification.Notification_Id, zdeksystem.SYS_Notification.SenderSession_Id, zdeksystem.SYS_Notification.SenderUser_Id, zdeksystem.SYS_Notification.EmissionTime, zdeksystem.SYS_Notification.Subject, zdeksystem.SYS_Notification.Message FROM zdeksystem.SYS_Notification WHERE ((zdeksystem.SYS_Notification.EmissionTime >= '20240806 11:56:18.311') AND (zdeksystem.SYS_Notification.EmissionTime < '20240806 11:57:21.312')) ORDER BY zdeksystem.SYS_Notification.EmissionTime ASC, zdeksystem.SYS_Notification.Notification_Id ASC;
20240806 11:58:53.116 009E =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:58:53.116 009E =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:58:53.116 009E =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0009 - Allocated=10, Used=2
20240806 11:58:53.116 009E =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0009 - SELECT TOP 5000 SYS_Notification.Notification_Id, SYS_Notification.SenderSession_Id, SYS_Notification.SenderUser_Id, SYS_Notification.EmissionTime, SYS_Notification.Subject, SYS_Notification.Message FROM SYS_Notification WHERE ((SYS_Notification.EmissionTime >= ?) AND (SYS_Notification.EmissionTime < ?)) ORDER BY SYS_Notification.EmissionTime ASC, SYS_Notification.Notification_Id ASC
20240806 11:58:53.116 009E =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:56:18.311', '20240806 11:57:21.312'
20240806 11:58:53.116 009E =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:58:53.172 009E =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:58:53.173 009E =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:58:53.173 009E =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0009
20240806 11:58:53.173 009E =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.endQuery : 6 columns, 0 rows
20240806 11:58:53.173 009E =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0009
20240806 11:58:53.173 009E =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0009
20240806 11:58:53.173 009E =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:58:53.173 009E =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 11:58:53.173 009E =FUN= [NotificationCache] null: Cache updated, now from 20240806 11:52:38.712 to 20240806 11:56:21.312
20240806 11:58:53.173 009E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdataserver.SystemSession.heartbeat
20240806 11:58:53.784 0075 =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:58:53.785 0075 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:58:54.949 0075 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0007
20240806 11:58:54.949 0075 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 251 columns, 448 rows
20240806 11:58:54.950 0075 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0007
20240806 11:58:54.950 0075 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0007
20240806 11:58:54.950 0075 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:58:54.950 0075 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:58:54.950 0075 =WRN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: zcare.zdek.dbag.DBag.load took too much time: 2566 ms
20240806 11:58:54.950 0075 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.dbag.DBag.load
20240806 11:58:54.950 0075 =WRN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: zcare.zlms.educationalscenario.enrollment.dataset.ElectiveScenarioStudentListDetailDataSet$Handler.handleContextChange took too much time: 2999 ms
20240806 11:58:54.950 0075 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 <- zcare.zlms.educationalscenario.enrollment.dataset.ElectiveScenarioStudentListDetailDataSet$Handler.handleContextChange
20240806 11:58:54.950 0075 =API= [FunctionCheck] administrator:1901330445: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 11:58:54.951 0075 =API= [CallClient] null: <= DBAG_COPY EduScenarioStudentsDetail0
20240806 11:58:54.952 0075 =FUN= [CallFromClient] 1901330445:6934: InputMessage size 910
20240806 11:58:54.952 0075 =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 10195
20240806 11:58:54.952 0075 =API= [FunctionCheck] administrator:1901330445: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 11:58:55.077 0071 =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=38)
20240806 11:58:55.078 0071 =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:HEARTBEAT
20240806 11:58:55.078 0071 =FUN= [CallFromClient] null: Parameter FILTER_LIST=0:SQL:zmedstructure.STRUCT_SiteType:
29:Hierarchy:
8:dictionary.DIC_DictionaryEntry:
39:
33::
8:common.COMM_WorkflowState:
20:MessageDelivery:
27::
20:ApplicationFormState:
35::
5:lmsregistration.REG_StudentRegistration:
8:admin.ADM_StreamGrade:
30:
19:essionDef:
25::
19:chool:
20:enarioSelection:
18:Grade:
18:Enrollment:
19:ducationPathDef:
35:
21:ScenarioStreamGrade:
41:
29:OptionalGrp:
29::
30:
18:CourseDefStreamGrade:
27::
24::
20:mmunityMember:
27::
1:CRIPT_CACHE_CLEAR_Filter:
20240806 11:58:55.078 0071 =FUN= [CallFromClient] null: Parameter LAST_NOTIFICATION_TIME=20240806 11:56:18.311
20240806 11:58:55.078 0071 =FUN= [CallFromClient] null: Parameter LAST_NOTIFICATION_ID=0
20240806 11:58:55.078 0071 =FUN= [CallFromClient] null: Parameter CurrentCallId=687971057
20240806 11:58:55.078 0071 =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 11:58:55.078 0071 =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 11:58:55.078 0071 =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 11:58:55.078 0071 =API= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 3 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: administrator:1901330445
20240806 11:58:55.078 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:58:55.078 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0011 - Allocated=10, Used=1
20240806 11:58:55.078 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0011
20240806 11:58:55.135 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 11:58:55.135 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0011
20240806 11:58:55.135 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0011
20240806 11:58:55.135 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:58:55.135 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:58:55.136 0071 =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 11:58:55.136 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT TOP 5000 zdeksystem.SYS_Notification.Notification_Id, zdeksystem.SYS_Notification.SenderSession_Id, zdeksystem.SYS_Notification.SenderUser_Id, zdeksystem.SYS_Notification.EmissionTime, zdeksystem.SYS_Notification.Subject, zdeksystem.SYS_Notification.Message FROM zdeksystem.SYS_Notification WHERE ((zdeksystem.SYS_Notification.EmissionTime >= '20240806 11:56:21.312') AND (zdeksystem.SYS_Notification.EmissionTime < '20240806 11:57:23.336')) ORDER BY zdeksystem.SYS_Notification.EmissionTime ASC, zdeksystem.SYS_Notification.Notification_Id ASC;
20240806 11:58:55.136 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:58:55.136 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:58:55.136 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0014 - Allocated=10, Used=1
20240806 11:58:55.136 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0014 - SELECT TOP 5000 SYS_Notification.Notification_Id, SYS_Notification.SenderSession_Id, SYS_Notification.SenderUser_Id, SYS_Notification.EmissionTime, SYS_Notification.Subject, SYS_Notification.Message FROM SYS_Notification WHERE ((SYS_Notification.EmissionTime >= ?) AND (SYS_Notification.EmissionTime < ?)) ORDER BY SYS_Notification.EmissionTime ASC, SYS_Notification.Notification_Id ASC
20240806 11:58:55.136 0071 =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:56:21.312', '20240806 11:57:23.336'
20240806 11:58:55.137 0071 =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:58:55.192 0071 =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:58:55.192 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:58:55.192 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0014
20240806 11:58:55.192 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnection.endQuery : 6 columns, 0 rows
20240806 11:58:55.192 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0014
20240806 11:58:55.192 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0014
20240806 11:58:55.192 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:58:55.193 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:58:55.193 0071 =FUN= [NotificationCache] null: Cache updated, now from 20240806 11:52:38.712 to 20240806 11:56:23.336
20240806 11:58:55.193 0071 =API= [ZDataAccess] ZDataServer: == ServerLoad: 38
20240806 11:58:55.193 0071 =API= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 3 <- zcare.zdataserver.ZDataAccess.getNotifications
20240806 11:58:55.193 0071 =API= [ZDataAccess] ZDataServer: == ServerLoad: 38
20240806 11:58:55.193 0071 =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 11:58:55.193 0071 =FUN= [CallFromClient] 1901330445:6934: InputMessage size 663
20240806 11:58:55.193 0071 =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 130
20240806 11:58:55.193 0071 =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 11:59:13.177 009B =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdataserver.SystemSession.heartbeat
20240806 11:59:13.177 009B =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.dbag.DBag.load
20240806 11:59:13.177 009B =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zdeksystem.SYS_Session.Session_Id, zdeksystem.SYS_Session.User_Id, zdeksystem.SYS_Session.UserName, zdeksystem.SYS_Session.Token, zdeksystem.SYS_Session.LastCallTime, zdeksystem.SYS_Session.ManagingServerName, zdeksystem.SYS_Session.ManagingServerPort, zdeksystem.SYS_Session.LastProcessedNotification_Id, zdeksystem.SYS_Session.LastProcessedNotificationTime, zdeksystem.SYS_Session.DataServerClientIP, zdeksystem.SYS_Session.DataServerClientDetails, zdeksystem.SYS_Session.OriginatorClientIP, zdeksystem.SYS_Session.OriginatorClientDetails, zdeksystem.SYS_Session.PermanentSession_Id, zdeksystem.SYS_Session.Locale, zdeksystem.SYS_Session.ValidationToken,zdeksystem.SYS_PermanentSession.PermanentSession_Id, zdeksystem.SYS_PermanentSession.Name, zdeksystem.SYS_PermanentSession.LastAcknowledegedNotif_Id, zdeksystem.SYS_PermanentSession.LastAcknowledgedNotifTime FROM zdeksystem.SYS_Session LEFT OUTER JOIN zdeksystem.SYS_PermanentSession ON zdeksystem.SYS_Session.PermanentSession_Id = zdeksystem.SYS_PermanentSession.PermanentSession_Id WHERE (zdeksystem.SYS_Session.Session_Id = 1901330433);
20240806 11:59:13.178 009B =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:13.178 009B =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:13.181 009B =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0013 - Allocated=10, Used=1
20240806 11:59:13.181 009B =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0013 - SELECT SYS_Session.Session_Id, SYS_Session.User_Id, SYS_Session.UserName, SYS_Session.Token, SYS_Session.LastCallTime, SYS_Session.ManagingServerName, SYS_Session.ManagingServerPort, SYS_Session.LastProcessedNotification_Id, SYS_Session.LastProcessedNotificationTime, SYS_Session.DataServerClientIP, SYS_Session.DataServerClientDetails, SYS_Session.OriginatorClientIP, SYS_Session.OriginatorClientDetails, SYS_Session.PermanentSession_Id, SYS_Session.Locale, SYS_Session.ValidationToken, SYS_PermanentSession.PermanentSession_Id, SYS_PermanentSession.Name, SYS_PermanentSession.LastAcknowledegedNotif_Id, SYS_PermanentSession.LastAcknowledgedNotifTime FROM SYS_Session LEFT OUTER JOIN SYS_PermanentSession ON (SYS_Session.PermanentSession_Id = SYS_PermanentSession.PermanentSession_Id) WHERE (SYS_Session.Session_Id = ?)
20240806 11:59:13.181 009B =FUN= [ZQL.PhysicalConnection] Parameters: 1901330433
20240806 11:59:13.181 009B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:13.321 009B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:13.322 009B =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:13.322 009B =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0013
20240806 11:59:13.322 009B =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.endQuery : 20 columns, 1 rows
20240806 11:59:13.323 009B =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0013
20240806 11:59:13.323 009B =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0013
20240806 11:59:13.323 009B =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:13.323 009B =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:13.323 009B =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.dbag.DBag.load
20240806 11:59:13.323 009B =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:13.323 009B =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0010 - Allocated=10, Used=1
20240806 11:59:13.323 009B =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0010
20240806 11:59:13.323 008C =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:13.323 008C =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0003 - Allocated=10, Used=2
20240806 11:59:13.324 008C =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0003 - UPDATE SYS_Session SET LastCallTime = '20240806 11:59:13.323' WHERE Session_Id IN ( 1901330433)
20240806 11:59:13.345 009B =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 11:59:13.345 009B =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0010
20240806 11:59:13.345 009B =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0010
20240806 11:59:13.345 009B =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:13.345 009B =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 11:59:13.345 009B =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 11:59:13.346 009B =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT TOP 5000 zdeksystem.SYS_Notification.Notification_Id, zdeksystem.SYS_Notification.SenderSession_Id, zdeksystem.SYS_Notification.SenderUser_Id, zdeksystem.SYS_Notification.EmissionTime, zdeksystem.SYS_Notification.Subject, zdeksystem.SYS_Notification.Message FROM zdeksystem.SYS_Notification WHERE ((zdeksystem.SYS_Notification.EmissionTime >= '20240806 11:56:23.336') AND (zdeksystem.SYS_Notification.EmissionTime < '20240806 11:57:41.527')) ORDER BY zdeksystem.SYS_Notification.EmissionTime ASC, zdeksystem.SYS_Notification.Notification_Id ASC;
20240806 11:59:13.346 009B =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:13.346 009B =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:13.346 009B =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0008 - Allocated=10, Used=2
20240806 11:59:13.346 009B =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0008 - SELECT TOP 5000 SYS_Notification.Notification_Id, SYS_Notification.SenderSession_Id, SYS_Notification.SenderUser_Id, SYS_Notification.EmissionTime, SYS_Notification.Subject, SYS_Notification.Message FROM SYS_Notification WHERE ((SYS_Notification.EmissionTime >= ?) AND (SYS_Notification.EmissionTime < ?)) ORDER BY SYS_Notification.EmissionTime ASC, SYS_Notification.Notification_Id ASC
20240806 11:59:13.346 009B =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:56:23.336', '20240806 11:57:41.527'
20240806 11:59:13.346 009B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:13.390 008C =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 11:59:13.391 008C =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0003
20240806 11:59:13.391 008C =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0003
20240806 11:59:13.391 008C =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:13.391 008C =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 11:59:13.428 009B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:13.429 009B =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:13.429 009B =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0008
20240806 11:59:13.429 009B =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.endQuery : 6 columns, 0 rows
20240806 11:59:13.429 009B =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0008
20240806 11:59:13.429 009B =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0008
20240806 11:59:13.429 009B =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:13.429 009B =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:13.429 009B =FUN= [NotificationCache] null: Cache updated, now from 20240806 11:53:38.712 to 20240806 11:56:41.527
20240806 11:59:13.429 009B =WRN= [FunctionCheck] <App. context>: zcare.zdataserver.SystemSession.heartbeat took too much time: 252 ms
20240806 11:59:13.429 009B =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdataserver.SystemSession.heartbeat
20240806 11:59:13.494 006B =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=38)
20240806 11:59:13.494 006B =API= [CallFromClient] null: => DBAG_COPY EduScenarioStudentsDetail0
20240806 11:59:13.496 006B =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:NO_OP
20240806 11:59:13.496 006B =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 11:59:13.496 006B =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: ELECTIVE_ONLINE_APPLICATION:updatePromotedScenarioSelections
20240806 11:59:13.496 006B =FUN= [CallFromClient] null: Parameter DATA_SET=ELECTIVE_ONLINE_APPLICATION0
20240806 11:59:13.496 006B =FUN= [CallFromClient] null: Parameter dbagName=EduScenarioStudentsDetail0
20240806 11:59:13.496 006B =FUN= [CallFromClient] null: Parameter scenarioSelectionIds=209799051
20240806 11:59:13.496 006B =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 11:59:13.496 006B =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 11:59:13.496 006B =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 11:59:13.538 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:13.538 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0012 - Allocated=10, Used=1
20240806 11:59:13.538 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0012
20240806 11:59:13.631 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=1
20240806 11:59:13.631 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.ZqlParser.parseScript : INSERT INTO zmedcommon.COMM_NoteHistory() VALUES () AS $_COMM_NoteHistory_82;INSERT INTO zlmsadmin.ADM_SelectionDetails(ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods) VALUES (209799051, 622199021, 'GEN.CHM.C.101', 3) AS $_ADM_SelectionDetails_1;INSERT INTO zlmsadmin.ADM_SelectionDetails(ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods) VALUES (209799051, 622199023, 'MART_G12', 1) AS $_ADM_SelectionDetails_65;INSERT INTO zlmsadmin.ADM_SelectionDetails(ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods) VALUES (209799051, 622199021, 'GEN.BIO.M.101-B', 2) AS $_ADM_SelectionDetails_130;INSERT INTO zlmsadmin.ADM_SelectionDetails(ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods) VALUES (209799051, 622199021, 'GEN.BIO.M.101-B', 2) AS $_ADM_SelectionDetails_17;INSERT INTO zlmsadmin.ADM_SelectionDetails(ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods) VALUES (209799051, 622199023, 'MART_G12', 1) AS $_ADM_SelectionDetails_146;INSERT INTO zlmsadmin.ADM_SelectionDetails(ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods) VALUES (209799051, 622199023, 'VART_G12', 1) AS $_ADM_SelectionDetails_33;INSERT INTO zlmsadmin.ADM_SelectionDetails(ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods) VALUES (209799051, 622199023, 'DRM_G12', 1) AS $_ADM_SelectionDetails_98;INSERT INTO zlmsadmin.ADM_SelectionDetails(ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods) VALUES (209799051, 622199021, 'GEN.CHM.C.101', 3) AS $_ADM_SelectionDetails_162;INSERT INTO zlmsadmin.ADM_SelectionDetails(ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods) VALUES (209799051, 622199023, 'DRM_G12', 1) AS $_ADM_SelectionDetails_49;INSERT INTO zlmsadmin.ADM_SelectionDetails(ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods) VALUES (209799051, 622199023, 'VART_G12', 1) AS $_ADM_SelectionDetails_114;UPDATE zlmsadmin.ADM_ScenarioSelection SET EduScenario_Id = 622198871,NoteHistory_Id = $_COMM_NoteHistory_82 WHERE ScenarioSelection_Id = 209799051;
20240806 11:59:13.640 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:13.640 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0012
20240806 11:59:13.641 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=2
20240806 11:59:13.641 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnection.allocateSequenceValues : PDB0012
20240806 11:59:13.641 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_ADM_SELECTIONDETAILS, Need  10 
20240806 11:59:13.641 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Initialize from DB
20240806 11:59:13.641 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:13.642 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0002 - Allocated=10, Used=2
20240806 11:59:13.642 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.initializeSequenceFromDB : PDB0012
20240806 11:59:13.642 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 1
20240806 11:59:13.643 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 2
20240806 11:59:13.643 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 3
20240806 11:59:13.643 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 4
20240806 11:59:13.643 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 5
20240806 11:59:13.643 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 6
20240806 11:59:13.643 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 7
20240806 11:59:13.643 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.query : PDB0002 - SELECT MAX(SelectionDetails_Id) FROM ADM_SelectionDetails WHERE SelectionDetails_Id >= 1901330433 AND SelectionDetails_Id < 1901461505
20240806 11:59:13.643 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:13.673 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:13.674 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.query
20240806 11:59:13.674 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0002
20240806 11:59:13.675 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 1 columns, 1 rows
20240806 11:59:13.675 006B =DBG= [ZQL.PhysicalConnection] initializeSequenceFromDB: Add range $TBL_ADM_SELECTIONDETAILS from 1901330433 to 1901461505
20240806 11:59:13.675 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.initializeSequenceFromDB
20240806 11:59:13.675 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0002
20240806 11:59:13.675 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0002
20240806 11:59:13.675 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:13.675 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 11:59:13.675 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330433 to 1901330453 and keep from 1901330453
20240806 11:59:13.675 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_COMM_NOTEHISTORY, Need  1 
20240806 11:59:13.675 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Initialize from DB
20240806 11:59:13.675 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:13.675 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0009 - Allocated=10, Used=2
20240806 11:59:13.675 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.initializeSequenceFromDB : PDB0012
20240806 11:59:13.675 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 1
20240806 11:59:13.676 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 2
20240806 11:59:13.676 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 3
20240806 11:59:13.676 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 4
20240806 11:59:13.676 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 5
20240806 11:59:13.676 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 6
20240806 11:59:13.676 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 7
20240806 11:59:13.676 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.query : PDB0009 - SELECT MAX(NoteHistory_Id) FROM COMM_NoteHistory WHERE NoteHistory_Id >= 1901330433 AND NoteHistory_Id < 1901461505
20240806 11:59:13.677 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:13.767 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:13.767 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.query
20240806 11:59:13.768 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0009
20240806 11:59:13.768 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 1 columns, 1 rows
20240806 11:59:13.768 006B =DBG= [ZQL.PhysicalConnection] initializeSequenceFromDB: Add range $TBL_COMM_NOTEHISTORY from 1901330433 to 1901461505
20240806 11:59:13.768 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.initializeSequenceFromDB
20240806 11:59:13.768 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0009
20240806 11:59:13.768 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0009
20240806 11:59:13.768 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:13.768 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 11:59:13.768 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330433 to 1901330435 and keep from 1901330435
20240806 11:59:13.768 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnection.allocateSequenceValues
20240806 11:59:13.771 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0012
20240806 11:59:13.771 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_NoteHistory (COMM_NoteHistory.NoteHistory_Id)VALUES (1901330433)
20240806 11:59:13.771 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO ADM_SelectionDetails (ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp)VALUES (209799051, 622199021, 'GEN.CHM.C.101', 3, 1901330433, 1, '20240806 11:59:13.768')
20240806 11:59:13.771 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO ADM_SelectionDetails (ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp)VALUES (209799051, 622199023, 'MART_G12', 1, 1901330435, 1, '20240806 11:59:13.771')
20240806 11:59:13.771 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO ADM_SelectionDetails (ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp)VALUES (209799051, 622199021, 'GEN.BIO.M.101-B', 2, 1901330437, 1, '20240806 11:59:13.771')
20240806 11:59:13.771 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO ADM_SelectionDetails (ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp)VALUES (209799051, 622199021, 'GEN.BIO.M.101-B', 2, 1901330439, 1, '20240806 11:59:13.771')
20240806 11:59:13.771 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO ADM_SelectionDetails (ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp)VALUES (209799051, 622199023, 'MART_G12', 1, 1901330441, 1, '20240806 11:59:13.771')
20240806 11:59:13.771 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO ADM_SelectionDetails (ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp)VALUES (209799051, 622199023, 'VART_G12', 1, 1901330443, 1, '20240806 11:59:13.771')
20240806 11:59:13.772 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO ADM_SelectionDetails (ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp)VALUES (209799051, 622199023, 'DRM_G12', 1, 1901330445, 1, '20240806 11:59:13.771')
20240806 11:59:13.772 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO ADM_SelectionDetails (ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp)VALUES (209799051, 622199021, 'GEN.CHM.C.101', 3, 1901330447, 1, '20240806 11:59:13.771')
20240806 11:59:13.772 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO ADM_SelectionDetails (ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp)VALUES (209799051, 622199023, 'DRM_G12', 1, 1901330449, 1, '20240806 11:59:13.771')
20240806 11:59:13.772 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO ADM_SelectionDetails (ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp)VALUES (209799051, 622199023, 'VART_G12', 1, 1901330451, 1, '20240806 11:59:13.771')
20240806 11:59:13.772 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: =>  UPDATE ADM_ScenarioSelection SET EduScenario_Id = 622198871, NoteHistory_Id = 1901330433, ADM_ScenarioSelection.UserStamp = 1, ADM_ScenarioSelection.TimeStamp = '20240806 11:59:13.771' WHERE (ScenarioSelection_Id = 209799051)
20240806 11:59:13.897 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 11:59:13.897 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0012
20240806 11:59:13.897 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=1
20240806 11:59:13.899 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.ZqlParser.parseScript : INSERT INTO zdeksystem.SYS_Notification(SenderSession_Id, SenderUser_Id, Subject) VALUES (1901330445, 1, 'SQL:zlmsadmin.ADM_ScenarioSelection:U:209799051');
20240806 11:59:13.899 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:13.899 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0012
20240806 11:59:13.899 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=2
20240806 11:59:13.899 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnection.allocateSequenceValues : PDB0012
20240806 11:59:13.899 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_SYS_NOTIFICATION, Need  1 
20240806 11:59:13.899 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Initialize from DB
20240806 11:59:13.900 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:13.900 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0007 - Allocated=10, Used=2
20240806 11:59:13.900 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.initializeSequenceFromDB : PDB0012
20240806 11:59:13.900 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 1
20240806 11:59:13.900 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 2
20240806 11:59:13.900 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 3
20240806 11:59:13.900 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 4
20240806 11:59:13.900 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 5
20240806 11:59:13.900 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 6
20240806 11:59:13.900 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 7
20240806 11:59:13.900 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.query : PDB0007 - SELECT MAX(Notification_Id) FROM SYS_Notification WHERE Notification_Id >= 1901330433 AND Notification_Id < 1901461505
20240806 11:59:13.900 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:13.936 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:13.937 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.query
20240806 11:59:13.937 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0007
20240806 11:59:13.937 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 1 columns, 1 rows
20240806 11:59:13.937 006B =DBG= [ZQL.PhysicalConnection] initializeSequenceFromDB: Add range $TBL_SYS_NOTIFICATION from 1901330433 to 1901461505
20240806 11:59:13.937 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.initializeSequenceFromDB
20240806 11:59:13.937 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0007
20240806 11:59:13.937 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0007
20240806 11:59:13.937 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:13.937 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 11:59:13.938 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330433 to 1901330435 and keep from 1901330435
20240806 11:59:13.938 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnection.allocateSequenceValues
20240806 11:59:13.938 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0012
20240806 11:59:13.938 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO SYS_Notification (SenderSession_Id, SenderUser_Id, Subject, SYS_Notification.Notification_Id)VALUES (1901330445, 1, 'SQL:zlmsadmin.ADM_ScenarioSelection:U:209799051', 1901330433)
20240806 11:59:13.959 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 11:59:13.959 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0012
20240806 11:59:13.959 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=1
20240806 11:59:13.959 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0012
20240806 11:59:13.994 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=0
20240806 11:59:13.994 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0012
20240806 11:59:13.994 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0012
20240806 11:59:13.995 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:13.995 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:14.001 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.dbag.DBag.load
20240806 11:59:14.001 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zmedcommon.COMM_Person.Person_Id, zmedcommon.COMM_Person.Civility, zmedcommon.COMM_Person.IDNumber, zmedcommon.COMM_Person.FirstName, zmedcommon.COMM_Person.SecondName, zmedcommon.COMM_Person.ThirdName, zmedcommon.COMM_Person.FourthName, zmedcommon.COMM_Person.FamilyName, zmedcommon.COMM_Person.EnglishFirstName, zmedcommon.COMM_Person.EnglishSecondName, zmedcommon.COMM_Person.EnglishThirdName, zmedcommon.COMM_Person.EnglishFourthName, zmedcommon.COMM_Person.EnglishFamilyName, zmedcommon.COMM_Person.BirthName, zmedcommon.COMM_Person.BirthDate, zmedcommon.COMM_Person.BirthCity, zmedcommon.COMM_Person.EnglishBirthCity, zmedcommon.COMM_Person.BirthCountry, zmedcommon.COMM_Person.Nationality, zmedcommon.COMM_Person.Gender, zmedcommon.COMM_Person.MaritalStatus, zmedcommon.COMM_Person.Photo_Id, zmedcommon.COMM_Person.Religion, zmedcommon.COMM_Person.ReligionSector, zmedcommon.COMM_Person.PhoneList_Id, zmedcommon.COMM_Person.AddressList_Id, zmedcommon.COMM_Person.OtherIdList_Id, zmedcommon.COMM_Person.IsDeleted, zmedcommon.COMM_Person.ExternalId, zmedcommon.COMM_Person.UserStamp, zmedcommon.COMM_Person.TimeStamp, zmedcommon.COMM_Person.User_Id, zmedcommon.COMM_Person.InformationSource, zmedcommon.COMM_Person.LastSyncTime, zmedcommon.COMM_Person.IsTemporary, zmedcommon.COMM_Person.VStartDate,zdeksystem.SYS_User.User_Id, zdeksystem.SYS_User.UserName, zdeksystem.SYS_User.UserPassword, zdeksystem.SYS_User.LastLoginDate, zdeksystem.SYS_User.LastFailedLoginDate, zdeksystem.SYS_User.PasswordDate, zdeksystem.SYS_User.PasswordExpired, zdeksystem.SYS_User.UserIsEnabled, zdeksystem.SYS_User.NumberOfFailedLogins, zdeksystem.SYS_User.AutoDeclared,zmedcommon.COMM_PhoneList.PhoneList_Id,zmedcommon.COMM_Phone.Phone_Id, zmedcommon.COMM_Phone.PhoneList_Id, zmedcommon.COMM_Phone.Name, zmedcommon.COMM_Phone.Value, zmedcommon.COMM_Phone.Note, zmedcommon.COMM_Phone.IsPrivate, zmedcommon.COMM_Phone.IsPrimary, zmedcommon.COMM_Phone.ContactType FROM zmedcommon.COMM_Person! JOIN zdeksystem.SYS_User ON zmedcommon.COMM_Person.User_Id = zdeksystem.SYS_User.User_Id JOIN zmedcommon.COMM_PhoneList ON zmedcommon.COMM_Person.PhoneList_Id = zmedcommon.COMM_PhoneList.PhoneList_Id JOIN zmedcommon.COMM_Phone ON zmedcommon.COMM_PhoneList.PhoneList_Id = zmedcommon.COMM_Phone.PhoneList_Id WHERE (zmedcommon.COMM_Person.Person_Id = 29326);
20240806 11:59:14.001 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:14.001 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:14.001 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0011 - Allocated=10, Used=1
20240806 11:59:14.001 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0011 - SELECT COMM_Person.Person_Id, COMM_Person.Civility, COMM_Person.IDNumber, COMM_Person.FirstName, COMM_Person.SecondName, COMM_Person.ThirdName, COMM_Person.FourthName, COMM_Person.FamilyName, COMM_Person.EnglishFirstName, COMM_Person.EnglishSecondName, COMM_Person.EnglishThirdName, COMM_Person.EnglishFourthName, COMM_Person.EnglishFamilyName, COMM_Person.BirthName, COMM_Person.BirthDate, COMM_Person.BirthCity, COMM_Person.EnglishBirthCity, COMM_Person.BirthCountry, COMM_Person.Nationality, COMM_Person.Gender, COMM_Person.MaritalStatus, COMM_Person.Photo_Id, COMM_Person.Religion, COMM_Person.ReligionSector, COMM_Person.PhoneList_Id, COMM_Person.AddressList_Id, COMM_Person.OtherIdList_Id, COMM_Person.IsDeleted, COMM_Person.ExternalId, COMM_Person.UserStamp, COMM_Person.TimeStamp, COMM_Person.User_Id, COMM_Person.InformationSource, COMM_Person.LastSyncTime, COMM_Person.IsTemporary, COMM_Person.VStartDate, SYS_User.User_Id, SYS_User.UserName, SYS_User.UserPassword, SYS_User.LastLoginDate, SYS_User.LastFailedLoginDate, SYS_User.PasswordDate, SYS_User.PasswordExpired, SYS_User.UserIsEnabled, SYS_User.NumberOfFailedLogins, SYS_User.AutoDeclared, COMM_PhoneList.PhoneList_Id, COMM_Phone.Phone_Id, COMM_Phone.PhoneList_Id, COMM_Phone.Name, COMM_Phone.Value, COMM_Phone.Note, COMM_Phone.IsPrivate, COMM_Phone.IsPrimary, COMM_Phone.ContactType FROM COMM_Person JOIN SYS_User ON (COMM_Person.User_Id = SYS_User.User_Id) JOIN COMM_PhoneList ON (COMM_Person.PhoneList_Id = COMM_PhoneList.PhoneList_Id) JOIN COMM_Phone ON (COMM_PhoneList.PhoneList_Id = COMM_Phone.PhoneList_Id) WHERE ((COMM_Person.IsDeleted = 0)) AND ((COMM_Person.Person_Id = ?))
20240806 11:59:14.002 006B =FUN= [ZQL.PhysicalConnection] Parameters: 29326
20240806 11:59:14.002 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:14.025 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:14.025 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:14.025 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0011
20240806 11:59:14.025 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.endQuery : 55 columns, 4 rows
20240806 11:59:14.025 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0011
20240806 11:59:14.025 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0011
20240806 11:59:14.025 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:14.025 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:14.025 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.dbag.DBag.load
20240806 11:59:14.032 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.dbag.DBag.load
20240806 11:59:14.032 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.CourseDefCodes, zlmsadmin.ADM_EduScenarioOptionalGrp.NumberOfPeriods, zlmsadmin.ADM_EduScenarioOptionalGrp.type,zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id, zlmsadmin.ADM_OptionalCourseGroup.Name, zlmsadmin.ADM_OptionalCourseGroup.MinimumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.MaximumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.IsSelectedByStudent FROM zlmsadmin.ADM_EduScenario JOIN zlmsadmin.ADM_EduScenarioOptionalGrp ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id JOIN zlmsadmin.ADM_OptionalCourseGroup ON zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id WHERE (zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198871);
20240806 11:59:14.032 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:14.033 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:14.033 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0014 - Allocated=10, Used=1
20240806 11:59:14.033 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0014 - SELECT ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, ADM_EduScenarioOptionalGrp.EduScenario_Id, ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, ADM_EduScenarioOptionalGrp.CourseDefCodes, ADM_EduScenarioOptionalGrp.NumberOfPeriods, ADM_EduScenarioOptionalGrp.type, ADM_OptionalCourseGroup.OptionalCourseGroup_Id, ADM_OptionalCourseGroup.Name, ADM_OptionalCourseGroup.MinimumSelectedCourse, ADM_OptionalCourseGroup.MaximumSelectedCourse, ADM_OptionalCourseGroup.IsSelectedByStudent FROM ADM_EduScenario JOIN ADM_EduScenarioOptionalGrp ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioOptionalGrp.EduScenario_Id) JOIN ADM_OptionalCourseGroup ON (ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = ADM_OptionalCourseGroup.OptionalCourseGroup_Id) WHERE (ADM_EduScenario.EduScenario_Id = ?)
20240806 11:59:14.033 006B =FUN= [ZQL.PhysicalConnection] Parameters: 622198871
20240806 11:59:14.033 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:14.059 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:14.059 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:14.060 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0014
20240806 11:59:14.060 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.endQuery : 19 columns, 2 rows
20240806 11:59:14.060 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0014
20240806 11:59:14.060 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0014
20240806 11:59:14.060 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:14.060 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:14.060 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.dbag.DBag.load
20240806 11:59:14.237 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.dbag.DBag.load
20240806 11:59:14.238 006B =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zmedcommon.COMM_NameGlossary.NameGlossary_Id, zmedcommon.COMM_NameGlossary.Name, zmedcommon.COMM_NameGlossary.Translation, zmedcommon.COMM_NameGlossary.Domain FROM zmedcommon.COMM_NameGlossary WHERE (zmedcommon.COMM_NameGlossary.Domain = 'ADM_CourseDef.Title');
20240806 11:59:14.238 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: system:1901330439
20240806 11:59:14.238 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zmedcommon.COMM_NameGlossary.NameGlossary_Id, zmedcommon.COMM_NameGlossary.Name, zmedcommon.COMM_NameGlossary.Translation, zmedcommon.COMM_NameGlossary.Domain FROM zmedcommon.COMM_NameGlossary WHERE (zmedcommon.COMM_NameGlossary.Domain = 'ADM_CourseDef.Title');
20240806 11:59:14.238 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:14.238 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:14.238 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0013 - Allocated=10, Used=1
20240806 11:59:14.239 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0013 - SELECT COMM_NameGlossary.NameGlossary_Id, COMM_NameGlossary.Name, COMM_NameGlossary.Translation, COMM_NameGlossary.Domain FROM COMM_NameGlossary WHERE (COMM_NameGlossary.Domain = ?)
20240806 11:59:14.239 006B =FUN= [ZQL.PhysicalConnection] Parameters: 'ADM_CourseDef.Title'
20240806 11:59:14.239 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:14.327 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:14.327 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:14.684 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0013
20240806 11:59:14.685 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 4 columns, 5364 rows
20240806 11:59:14.685 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0013
20240806 11:59:14.685 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0013
20240806 11:59:14.685 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:14.685 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:14.685 006B =WRN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: zcare.zdataserver.ZDataAccess.sqlSelect took too much time: 447 ms
20240806 11:59:14.685 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 11:59:14.685 006B =API= [DATAPROXY] sqlSelect:Result: 0: C, 4 cols, 5364 rows
20240806 11:59:14.729 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.dbag.DBag.load
20240806 11:59:14.914 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.dbag.DBag.load
20240806 11:59:14.914 006B =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zmedcommon.COMM_NameGlossary.NameGlossary_Id, zmedcommon.COMM_NameGlossary.Name, zmedcommon.COMM_NameGlossary.Translation, zmedcommon.COMM_NameGlossary.Domain FROM zmedcommon.COMM_NameGlossary WHERE (zmedcommon.COMM_NameGlossary.Domain = 'ADM_OptionalCourseGroup.Name');
20240806 11:59:14.914 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: system:1901330439
20240806 11:59:14.914 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zmedcommon.COMM_NameGlossary.NameGlossary_Id, zmedcommon.COMM_NameGlossary.Name, zmedcommon.COMM_NameGlossary.Translation, zmedcommon.COMM_NameGlossary.Domain FROM zmedcommon.COMM_NameGlossary WHERE (zmedcommon.COMM_NameGlossary.Domain = 'ADM_OptionalCourseGroup.Name');
20240806 11:59:14.916 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:14.916 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:14.916 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0010 - Allocated=10, Used=1
20240806 11:59:14.916 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0010 - SELECT COMM_NameGlossary.NameGlossary_Id, COMM_NameGlossary.Name, COMM_NameGlossary.Translation, COMM_NameGlossary.Domain FROM COMM_NameGlossary WHERE (COMM_NameGlossary.Domain = ?)
20240806 11:59:14.917 006B =FUN= [ZQL.PhysicalConnection] Parameters: 'ADM_OptionalCourseGroup.Name'
20240806 11:59:14.917 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:15.056 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:15.057 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:15.057 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0010
20240806 11:59:15.057 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 4 columns, 12 rows
20240806 11:59:15.058 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0010
20240806 11:59:15.058 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0010
20240806 11:59:15.058 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:15.058 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:15.058 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 11:59:15.058 006B =API= [DATAPROXY] sqlSelect:Result: 0: C, 4 cols, 12 rows
20240806 11:59:15.058 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.dbag.DBag.load
20240806 11:59:15.227 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.dbag.DBag.load
20240806 11:59:15.228 006B =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.CourseDefCodes, zlmsadmin.ADM_EduScenarioOptionalGrp.NumberOfPeriods, zlmsadmin.ADM_EduScenarioOptionalGrp.type,zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id, zlmsadmin.ADM_OptionalCourseGroup.Name, zlmsadmin.ADM_OptionalCourseGroup.MinimumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.MaximumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.IsSelectedByStudent FROM zlmsadmin.ADM_EduScenario JOIN zlmsadmin.ADM_EduScenarioOptionalGrp ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id JOIN zlmsadmin.ADM_OptionalCourseGroup ON zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id WHERE (zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198871);
20240806 11:59:15.228 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: administrator:1901330445
20240806 11:59:15.228 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.CourseDefCodes, zlmsadmin.ADM_EduScenarioOptionalGrp.NumberOfPeriods, zlmsadmin.ADM_EduScenarioOptionalGrp.type,zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id, zlmsadmin.ADM_OptionalCourseGroup.Name, zlmsadmin.ADM_OptionalCourseGroup.MinimumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.MaximumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.IsSelectedByStudent FROM zlmsadmin.ADM_EduScenario JOIN zlmsadmin.ADM_EduScenarioOptionalGrp ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id JOIN zlmsadmin.ADM_OptionalCourseGroup ON zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id WHERE (zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198871);
20240806 11:59:15.233 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:15.234 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:15.240 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0003 - Allocated=10, Used=1
20240806 11:59:15.240 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0003 - SELECT ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, ADM_EduScenarioOptionalGrp.EduScenario_Id, ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, ADM_EduScenarioOptionalGrp.CourseDefCodes, ADM_EduScenarioOptionalGrp.NumberOfPeriods, ADM_EduScenarioOptionalGrp.type, ADM_OptionalCourseGroup.OptionalCourseGroup_Id, ADM_OptionalCourseGroup.Name, ADM_OptionalCourseGroup.MinimumSelectedCourse, ADM_OptionalCourseGroup.MaximumSelectedCourse, ADM_OptionalCourseGroup.IsSelectedByStudent FROM ADM_EduScenario JOIN ADM_EduScenarioOptionalGrp ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioOptionalGrp.EduScenario_Id) JOIN ADM_OptionalCourseGroup ON (ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = ADM_OptionalCourseGroup.OptionalCourseGroup_Id) WHERE (ADM_EduScenario.EduScenario_Id = ?)
20240806 11:59:15.240 006B =FUN= [ZQL.PhysicalConnection] Parameters: 622198871
20240806 11:59:15.240 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:15.357 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:15.357 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:15.357 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0003
20240806 11:59:15.357 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 19 columns, 2 rows
20240806 11:59:15.357 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0003
20240806 11:59:15.357 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0003
20240806 11:59:15.358 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:15.358 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:15.358 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 11:59:15.358 006B =API= [DATAPROXY] sqlSelect:Result: 0: C, 19 cols, 2 rows
20240806 11:59:15.358 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.dbag.DBag.load
20240806 11:59:15.358 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.dbag.DBag.load
20240806 11:59:15.358 006B =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zlmsadmin.ADM_CourseDef.CourseDef_Id, zlmsadmin.ADM_CourseDef.EducationPathDef_Id, zlmsadmin.ADM_CourseDef.SessionDef_Id, zlmsadmin.ADM_CourseDef.TeachingSubject, zlmsadmin.ADM_CourseDef.TeachingLanguage, zlmsadmin.ADM_CourseDef.Title, zlmsadmin.ADM_CourseDef.NumberOfPeriods, zlmsadmin.ADM_CourseDef.NumberOfPeriodsPerWeek, zlmsadmin.ADM_CourseDef.PeriodDuration, zlmsadmin.ADM_CourseDef.PeriodDurationUnit, zlmsadmin.ADM_CourseDef.SlotColor, zlmsadmin.ADM_CourseDef.StudentGender, zlmsadmin.ADM_CourseDef.IsAcademic, zlmsadmin.ADM_CourseDef.Code, zlmsadmin.ADM_CourseDef.Position, zlmsadmin.ADM_CourseDef.CourseWeight, zlmsadmin.ADM_CourseDef.PassScore, zlmsadmin.ADM_CourseDef.OtherTitle, zlmsadmin.ADM_CourseDef.isTermBasedCourse, zlmsadmin.ADM_CourseDef.Department, zlmsadmin.ADM_CourseDef.UserStamp, zlmsadmin.ADM_CourseDef.TimeStamp FROM zlmsadmin.ADM_CourseDef WHERE (zlmsadmin.ADM_CourseDef.CourseDef_Id IN(1199703617, 1199703621, 1199703629, 1199702491, 1199702495, 1199702493, 1199703595, 1199703083, 1199702507, 1199703081, 1199702505, 1199703599, 1199703087, 1199702511, 1199703597, 1199702509, 1199703085, 1199702515, 1199703089, 1199702513, 1199703607, 1199702519, 1199703611, 1199703099, 1199703609, 1199703615, 1199702527, 1199703613));
20240806 11:59:15.358 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: administrator:1901330445
20240806 11:59:15.358 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_CourseDef.CourseDef_Id, zlmsadmin.ADM_CourseDef.EducationPathDef_Id, zlmsadmin.ADM_CourseDef.SessionDef_Id, zlmsadmin.ADM_CourseDef.TeachingSubject, zlmsadmin.ADM_CourseDef.TeachingLanguage, zlmsadmin.ADM_CourseDef.Title, zlmsadmin.ADM_CourseDef.NumberOfPeriods, zlmsadmin.ADM_CourseDef.NumberOfPeriodsPerWeek, zlmsadmin.ADM_CourseDef.PeriodDuration, zlmsadmin.ADM_CourseDef.PeriodDurationUnit, zlmsadmin.ADM_CourseDef.SlotColor, zlmsadmin.ADM_CourseDef.StudentGender, zlmsadmin.ADM_CourseDef.IsAcademic, zlmsadmin.ADM_CourseDef.Code, zlmsadmin.ADM_CourseDef.Position, zlmsadmin.ADM_CourseDef.CourseWeight, zlmsadmin.ADM_CourseDef.PassScore, zlmsadmin.ADM_CourseDef.OtherTitle, zlmsadmin.ADM_CourseDef.isTermBasedCourse, zlmsadmin.ADM_CourseDef.Department, zlmsadmin.ADM_CourseDef.UserStamp, zlmsadmin.ADM_CourseDef.TimeStamp FROM zlmsadmin.ADM_CourseDef WHERE (zlmsadmin.ADM_CourseDef.CourseDef_Id IN(1199703617, 1199703621, 1199703629, 1199702491, 1199702495, 1199702493, 1199703595, 1199703083, 1199702507, 1199703081, 1199702505, 1199703599, 1199703087, 1199702511, 1199703597, 1199702509, 1199703085, 1199702515, 1199703089, 1199702513, 1199703607, 1199702519, 1199703611, 1199703099, 1199703609, 1199703615, 1199702527, 1199703613));
20240806 11:59:15.359 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:15.359 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:15.359 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0008 - Allocated=10, Used=1
20240806 11:59:15.359 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0008 - SELECT ADM_CourseDef.CourseDef_Id, ADM_CourseDef.EducationPathDef_Id, ADM_CourseDef.SessionDef_Id, ADM_CourseDef.TeachingSubject, ADM_CourseDef.TeachingLanguage, ADM_CourseDef.Title, ADM_CourseDef.NumberOfPeriods, ADM_CourseDef.NumberOfPeriodsPerWeek, ADM_CourseDef.PeriodDuration, ADM_CourseDef.PeriodDurationUnit, ADM_CourseDef.SlotColor, ADM_CourseDef.StudentGender, ADM_CourseDef.IsAcademic, ADM_CourseDef.Code, ADM_CourseDef.Position, ADM_CourseDef.CourseWeight, ADM_CourseDef.PassScore, ADM_CourseDef.OtherTitle, ADM_CourseDef.isTermBasedCourse, ADM_CourseDef.Department, ADM_CourseDef.UserStamp, ADM_CourseDef.TimeStamp FROM ADM_CourseDef WHERE (ADM_CourseDef.CourseDef_Id IN(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?))
20240806 11:59:15.359 006B =FUN= [ZQL.PhysicalConnection] Parameters: 1199703617, 1199703621, 1199703629, 1199702491, 1199702495, 1199702493, 1199703595, 1199703083, 1199702507, 1199703081, 1199702505, 1199703599, 1199703087, 1199702511, 1199703597, 1199702509, 1199703085, 1199702515, 1199703089, 1199702513, 1199703607, 1199702519, 1199703611, 1199703099, 1199703609, 1199703615, 1199702527, 1199703613
20240806 11:59:15.359 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:15.432 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:15.432 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:15.432 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0008
20240806 11:59:15.432 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 22 columns, 28 rows
20240806 11:59:15.432 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0008
20240806 11:59:15.432 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0008
20240806 11:59:15.433 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:15.433 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:15.433 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 11:59:15.433 006B =API= [DATAPROXY] sqlSelect:Result: 0: C, 22 cols, 28 rows
20240806 11:59:15.434 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.dbag.DBag.load
20240806 11:59:15.447 006B =API= [DATAPROXY] DSCall: -> Call blobCreate
20240806 11:59:16.013 006B =API= [DATAPROXY] DSCall: <- Call blobCreate
20240806 11:59:16.022 006B =API= [DATAPROXY] DSCall: -> Call blobPutNextPart
20240806 11:59:16.997 006B =API= [DATAPROXY] DSCall: <- Call blobPutNextPart
20240806 11:59:17.047 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.dbag.DBag.load
20240806 11:59:17.047 006B =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zmedcommon.COMM_MessageDelivery.MessageDelivery_Id, zmedcommon.COMM_MessageDelivery.Message_Id, zmedcommon.COMM_MessageDelivery.DestinationUser_Id, zmedcommon.COMM_MessageDelivery.ContactType, zmedcommon.COMM_MessageDelivery.DeliveryAddress, zmedcommon.COMM_MessageDelivery.Status, zmedcommon.COMM_MessageDelivery.StatusTimestamp, zmedcommon.COMM_MessageDelivery.DeliverySource, zmedcommon.COMM_MessageDelivery.MarkAsRead FROM zmedcommon.COMM_MessageDelivery WHERE ((zmedcommon.COMM_MessageDelivery.Message_Id = -178) AND (zmedcommon.COMM_MessageDelivery.DestinationUser_Id = 34075));
20240806 11:59:17.047 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: administrator:1901330445
20240806 11:59:17.047 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zmedcommon.COMM_MessageDelivery.MessageDelivery_Id, zmedcommon.COMM_MessageDelivery.Message_Id, zmedcommon.COMM_MessageDelivery.DestinationUser_Id, zmedcommon.COMM_MessageDelivery.ContactType, zmedcommon.COMM_MessageDelivery.DeliveryAddress, zmedcommon.COMM_MessageDelivery.Status, zmedcommon.COMM_MessageDelivery.StatusTimestamp, zmedcommon.COMM_MessageDelivery.DeliverySource, zmedcommon.COMM_MessageDelivery.MarkAsRead FROM zmedcommon.COMM_MessageDelivery WHERE ((zmedcommon.COMM_MessageDelivery.Message_Id = -178) AND (zmedcommon.COMM_MessageDelivery.DestinationUser_Id = 34075));
20240806 11:59:17.048 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:17.048 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:17.048 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0002 - Allocated=10, Used=1
20240806 11:59:17.048 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0002 - SELECT COMM_MessageDelivery.MessageDelivery_Id, COMM_MessageDelivery.Message_Id, COMM_MessageDelivery.DestinationUser_Id, COMM_MessageDelivery.ContactType, COMM_MessageDelivery.DeliveryAddress, COMM_MessageDelivery.Status, COMM_MessageDelivery.StatusTimestamp, COMM_MessageDelivery.DeliverySource, COMM_MessageDelivery.MarkAsRead FROM COMM_MessageDelivery WHERE ((COMM_MessageDelivery.Message_Id = ?) AND (COMM_MessageDelivery.DestinationUser_Id = ?))
20240806 11:59:17.048 006B =FUN= [ZQL.PhysicalConnection] Parameters: -178, 34075
20240806 11:59:17.048 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:17.150 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:17.152 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:17.152 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0002
20240806 11:59:17.152 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 9 columns, 0 rows
20240806 11:59:17.152 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0002
20240806 11:59:17.152 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0002
20240806 11:59:17.152 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:17.154 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:17.154 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 11:59:17.154 006B =API= [DATAPROXY] sqlSelect:Result: 0: C, 9 cols, 0 rows
20240806 11:59:17.154 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.dbag.DBag.load
20240806 11:59:17.158 006B =WRN= [Exception] 1901330445:6934 [1]-updatePromotedScenarioSelections: Exception zcare.zdek.ZException: Can't find email for user  Rashid Khalid Mohammad Saleh Alshehhi is thrown
20240806 11:59:17.158 006B =INF= [EmailMessageHandler_Logger] EmailMessageHandler.EmailMessageHandler: Send Email (Dear  &nbsp;Rashid Khalid Mohammad Saleh Alshehhi,<br><b>Your elective application with the following details has been modified and approved by school,<br><br>new selection is <br></b><br><b>Scenario Name :</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Group Name</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Name</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Chemistry - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Music Arts</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Visual Arts</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Drama</td></tr></table><br><b>old selection was<br></b><br><b>Scenario Name :</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Group Name</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Name</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Chemistry - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Music Arts</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Visual Arts</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Drama</td></tr></table><br><br>Thanks <hr> <br>عزيزي &nbsp;راشد خالد محمد صالح الشحى,<br><b>تم تحديث طلبك بالمواد الاتية<br><br>الاختيار الجديد<br></b><br><b>: اسم السيناريو</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المجموعة</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المادة</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الكيمياء - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون الموسيقية</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون البصرية</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>المسرح</td></tr></table><br><b>الاختيار القديم<br></b><br><b>: اسم السيناريو</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المجموعة</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المادة</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الكيمياء - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون الموسيقية</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون البصرية</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>المسرح</td></tr></table><br><br>شكرا) to (test@test.com)
20240806 11:59:17.666 006B =WRN= [Exception] 1901330445:6934 [1]-updatePromotedScenarioSelections: Exception zcare.zdek.ZException: Error sending emailCould not connect to SMTP host: smtp-mail.outlook.com, port: 587 is thrown
20240806 11:59:17.678 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdataserver.ZDataAccess.sqlBeginTrans : Ticket: administrator:1901330445
20240806 11:59:17.678 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:17.678 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0009 - Allocated=10, Used=1
20240806 11:59:17.678 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0009
20240806 11:59:17.733 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=1
20240806 11:59:17.733 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdataserver.ZDataAccess.sqlBeginTrans
20240806 11:59:17.755 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdataserver.ZDataAccess.sqlExecute : Ticket: administrator:1901330445
20240806 11:59:17.756 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.ZqlParser.parseScript : INSERT INTO zmedcommon.COMM_Message(Sender_Id, SenderName, SenderCode, MessageType, CreationDateTime, Importance, Subject, Status) VALUES (NULL, N'Notification', N'NOTIF', 0, '20240806 11:59:14.105', 0, N'Elective Application', 2) AS $_COMM_Message_178;INSERT INTO zmedcommon.COMM_MessageDelivery(Message_Id, DestinationUser_Id, ContactType, Status, StatusTimestamp, DeliverySource, MarkAsRead) VALUES ($_COMM_Message_178, 34075, 100, 1, '20240806 11:59:17.157', 'zmedcommon.COMM_Person:29326', 0) AS $_COMM_MessageDelivery_210;INSERT INTO zmedcommon.COMM_MessageDelivery(Message_Id, DestinationUser_Id, ContactType, Status, StatusTimestamp, DeliverySource, MarkAsRead) VALUES ($_COMM_Message_178, 34075, 4, 1, '20240806 11:59:17.158', 'zmedcommon.COMM_Person:29326', 0) AS $_COMM_MessageDelivery_226;INSERT INTO zmedcommon.COMM_MessageDelivery(Message_Id, DestinationUser_Id, ContactType, DeliveryAddress, Status, StatusTimestamp, DeliverySource, MarkAsRead) VALUES ($_COMM_Message_178, 34075, 4, N'test@test.com', 1, '20240806 11:59:17.158', 'zmedcommon.COMM_Person:29326', 0) AS $_COMM_MessageDelivery_242;INSERT INTO zmedcommon.COMM_MessageContent(Message_Id, Blob_Id, ContentType, Rank) VALUES ($_COMM_Message_178, 1033371649, 1, 1) AS $_COMM_MessageContent_194;
20240806 11:59:17.756 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:17.756 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0009
20240806 11:59:17.757 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=2
20240806 11:59:17.757 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.allocateSequenceValues : PDB0009
20240806 11:59:17.757 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_COMM_MESSAGEDELIVERY, Need  3 
20240806 11:59:17.757 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Initialize from DB
20240806 11:59:17.757 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:17.757 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0007 - Allocated=10, Used=2
20240806 11:59:17.758 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.initializeSequenceFromDB : PDB0009
20240806 11:59:17.758 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 1
20240806 11:59:17.758 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 2
20240806 11:59:17.758 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 3
20240806 11:59:17.758 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 4
20240806 11:59:17.758 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 5
20240806 11:59:17.758 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 6
20240806 11:59:17.758 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 7
20240806 11:59:17.758 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.query : PDB0007 - SELECT MAX(MessageDelivery_Id) FROM COMM_MessageDelivery WHERE MessageDelivery_Id >= 1901330433 AND MessageDelivery_Id < 1901461505
20240806 11:59:17.758 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:17.953 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:17.954 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.query
20240806 11:59:17.957 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0007
20240806 11:59:17.958 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.endQuery : 1 columns, 1 rows
20240806 11:59:17.958 006B =DBG= [ZQL.PhysicalConnection] initializeSequenceFromDB: Add range $TBL_COMM_MESSAGEDELIVERY from 1901330433 to 1901461505
20240806 11:59:17.958 006B =WRN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: zcare.zdek.zql.PhysicalConnection.initializeSequenceFromDB took too much time: 201 ms
20240806 11:59:17.958 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.initializeSequenceFromDB
20240806 11:59:17.958 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0007
20240806 11:59:17.959 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0007
20240806 11:59:17.959 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:17.959 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 11:59:17.959 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330433 to 1901330439 and keep from 1901330439
20240806 11:59:17.959 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_COMM_MESSAGE, Need  1 
20240806 11:59:17.959 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Initialize from DB
20240806 11:59:17.959 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:17.959 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0012 - Allocated=10, Used=2
20240806 11:59:17.960 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.initializeSequenceFromDB : PDB0009
20240806 11:59:17.960 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 1
20240806 11:59:17.960 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 2
20240806 11:59:17.960 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 3
20240806 11:59:17.960 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 4
20240806 11:59:17.960 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 5
20240806 11:59:17.960 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 6
20240806 11:59:17.969 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 7
20240806 11:59:17.970 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.query : PDB0012 - SELECT MAX(Message_Id) FROM COMM_Message WHERE Message_Id >= 1901330433 AND Message_Id < 1901461505
20240806 11:59:17.970 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:18.021 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:18.023 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.query
20240806 11:59:18.023 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0012
20240806 11:59:18.024 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.endQuery : 1 columns, 1 rows
20240806 11:59:18.024 006B =DBG= [ZQL.PhysicalConnection] initializeSequenceFromDB: Add range $TBL_COMM_MESSAGE from 1901330433 to 1901461505
20240806 11:59:18.024 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.initializeSequenceFromDB
20240806 11:59:18.024 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0012
20240806 11:59:18.024 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0012
20240806 11:59:18.026 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:18.026 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 11:59:18.026 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330433 to 1901330435 and keep from 1901330435
20240806 11:59:18.026 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_COMM_MESSAGECONTENT, Need  1 
20240806 11:59:18.026 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Initialize from DB
20240806 11:59:18.026 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:18.026 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0011 - Allocated=10, Used=2
20240806 11:59:18.026 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.initializeSequenceFromDB : PDB0009
20240806 11:59:18.026 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 1
20240806 11:59:18.026 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 2
20240806 11:59:18.027 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 3
20240806 11:59:18.027 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 4
20240806 11:59:18.027 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 5
20240806 11:59:18.027 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 6
20240806 11:59:18.027 006B =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 7
20240806 11:59:18.028 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.query : PDB0011 - SELECT MAX(MessageContent_Id) FROM COMM_MessageContent WHERE MessageContent_Id >= 1901330433 AND MessageContent_Id < 1901461505
20240806 11:59:18.028 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:18.068 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:18.069 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.query
20240806 11:59:18.069 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0011
20240806 11:59:18.069 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.endQuery : 1 columns, 1 rows
20240806 11:59:18.070 006B =DBG= [ZQL.PhysicalConnection] initializeSequenceFromDB: Add range $TBL_COMM_MESSAGECONTENT from 1901330433 to 1901461505
20240806 11:59:18.070 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.initializeSequenceFromDB
20240806 11:59:18.070 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0011
20240806 11:59:18.086 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0011
20240806 11:59:18.086 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:18.086 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 11:59:18.086 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330433 to 1901330435 and keep from 1901330435
20240806 11:59:18.087 006B =WRN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: zcare.zdek.zql.PhysicalConnection.allocateSequenceValues took too much time: 330 ms
20240806 11:59:18.087 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.allocateSequenceValues
20240806 11:59:18.087 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0009
20240806 11:59:18.087 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_Message (Sender_Id, SenderName, SenderCode, MessageType, CreationDateTime, Importance, Subject, Status, COMM_Message.Message_Id)VALUES (NULL, N'Notification', N'NOTIF', 0, '20240806 11:59:14.105', 0, N'Elective Application', 2, 1901330433)
20240806 11:59:18.087 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_MessageDelivery (Message_Id, DestinationUser_Id, ContactType, Status, StatusTimestamp, DeliverySource, MarkAsRead, COMM_MessageDelivery.MessageDelivery_Id)VALUES (1901330433, 34075, 100, 1, '20240806 11:59:17.157', 'zmedcommon.COMM_Person:29326', 0, 1901330433)
20240806 11:59:18.087 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_MessageDelivery (Message_Id, DestinationUser_Id, ContactType, Status, StatusTimestamp, DeliverySource, MarkAsRead, COMM_MessageDelivery.MessageDelivery_Id)VALUES (1901330433, 34075, 4, 1, '20240806 11:59:17.158', 'zmedcommon.COMM_Person:29326', 0, 1901330435)
20240806 11:59:18.087 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_MessageDelivery (Message_Id, DestinationUser_Id, ContactType, DeliveryAddress, Status, StatusTimestamp, DeliverySource, MarkAsRead, COMM_MessageDelivery.MessageDelivery_Id)VALUES (1901330433, 34075, 4, N'test@test.com', 1, '20240806 11:59:17.158', 'zmedcommon.COMM_Person:29326', 0, 1901330437)
20240806 11:59:18.088 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_MessageContent (Message_Id, Blob_Id, ContentType, Rank, COMM_MessageContent.MessageContent_Id)VALUES (1901330433, 1033371649, 1, 1, 1901330433)
20240806 11:59:18.197 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 11:59:18.197 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0009
20240806 11:59:18.197 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=1
20240806 11:59:18.203 006B =WRN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: zcare.zdataserver.ZDataAccess.sqlExecute took too much time: 448 ms
20240806 11:59:18.203 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdataserver.ZDataAccess.sqlExecute
20240806 11:59:18.204 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdataserver.ZDataAccess.sqlCommit : Ticket: administrator:1901330445
20240806 11:59:18.204 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.ZqlParser.parseScript : INSERT INTO zdeksystem.SYS_Notification(SenderSession_Id, SenderUser_Id, Subject) VALUES (1901330445, 1, 'SQL:zmedcommon.COMM_Message:I:1901330433');
20240806 11:59:18.205 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:18.205 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0009
20240806 11:59:18.206 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=2
20240806 11:59:18.206 009C =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:18.206 009C =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0014 - Allocated=10, Used=2
20240806 11:59:18.206 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.allocateSequenceValues : PDB0009
20240806 11:59:18.206 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_SYS_NOTIFICATION, Need  1 
20240806 11:59:18.206 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330435 to 1901330437 and keep from 1901330437
20240806 11:59:18.206 009C =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0014 - UPDATE SYS_Session SET LastCallTime = '20240806 11:59:18.204' WHERE Session_Id IN ( 1901330445)
20240806 11:59:18.206 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.allocateSequenceValues
20240806 11:59:18.206 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0009
20240806 11:59:18.206 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO SYS_Notification (SenderSession_Id, SenderUser_Id, Subject, SYS_Notification.Notification_Id)VALUES (1901330445, 1, 'SQL:zmedcommon.COMM_Message:I:1901330433', 1901330435)
20240806 11:59:18.234 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 11:59:18.234 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0009
20240806 11:59:18.234 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=1
20240806 11:59:18.234 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0009
20240806 11:59:18.259 009C =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 11:59:18.260 009C =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0014
20240806 11:59:18.260 009C =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0014
20240806 11:59:18.260 009C =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:18.260 009C =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 11:59:18.403 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=0
20240806 11:59:18.403 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0009
20240806 11:59:18.403 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0009
20240806 11:59:18.403 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:18.403 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:18.403 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdataserver.ZDataAccess.sqlCommit
20240806 11:59:18.404 006B =WRN= [Exception] 1901330445:6934 [1]-updatePromotedScenarioSelections: Exception zcare.zdek.ZException: Can't find email for user  Rashid Khalid Mohammad Saleh Alshehhi , Error sending emailCould not connect to SMTP host: smtp-mail.outlook.com, port: 587 is thrown
20240806 11:59:18.411 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.dbag.DBag.load
20240806 11:59:18.413 006B =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zlmsadmin.ADM_StudentLink.StudentLink_Id, zlmsadmin.ADM_StudentLink.StudentLinkType, zlmsadmin.ADM_StudentLink.StudentLinkSubType, zlmsadmin.ADM_StudentLink.Student_Id, zlmsadmin.ADM_StudentLink.LinkPerson_Id, zlmsadmin.ADM_StudentLink.Position, zlmsadmin.ADM_StudentLink.IsMain, zlmsadmin.ADM_StudentLink.Note, zlmsadmin.ADM_StudentLink.UserStamp, zlmsadmin.ADM_StudentLink.TimeStamp,zmedcommon.COMM_Person.Person_Id, zmedcommon.COMM_Person.Civility, zmedcommon.COMM_Person.IDNumber, zmedcommon.COMM_Person.FirstName, zmedcommon.COMM_Person.SecondName, zmedcommon.COMM_Person.ThirdName, zmedcommon.COMM_Person.FourthName, zmedcommon.COMM_Person.FamilyName, zmedcommon.COMM_Person.EnglishFirstName, zmedcommon.COMM_Person.EnglishSecondName, zmedcommon.COMM_Person.EnglishThirdName, zmedcommon.COMM_Person.EnglishFourthName, zmedcommon.COMM_Person.EnglishFamilyName, zmedcommon.COMM_Person.BirthName, zmedcommon.COMM_Person.BirthDate, zmedcommon.COMM_Person.BirthCity, zmedcommon.COMM_Person.EnglishBirthCity, zmedcommon.COMM_Person.BirthCountry, zmedcommon.COMM_Person.Nationality, zmedcommon.COMM_Person.Gender, zmedcommon.COMM_Person.MaritalStatus, zmedcommon.COMM_Person.Photo_Id, zmedcommon.COMM_Person.Religion, zmedcommon.COMM_Person.ReligionSector, zmedcommon.COMM_Person.PhoneList_Id, zmedcommon.COMM_Person.AddressList_Id, zmedcommon.COMM_Person.OtherIdList_Id, zmedcommon.COMM_Person.IsDeleted, zmedcommon.COMM_Person.ExternalId, zmedcommon.COMM_Person.UserStamp, zmedcommon.COMM_Person.TimeStamp, zmedcommon.COMM_Person.User_Id, zmedcommon.COMM_Person.InformationSource, zmedcommon.COMM_Person.LastSyncTime, zmedcommon.COMM_Person.IsTemporary, zmedcommon.COMM_Person.VStartDate,zdeksystem.SYS_User.User_Id, zdeksystem.SYS_User.UserName, zdeksystem.SYS_User.UserPassword, zdeksystem.SYS_User.LastLoginDate, zdeksystem.SYS_User.LastFailedLoginDate, zdeksystem.SYS_User.PasswordDate, zdeksystem.SYS_User.PasswordExpired, zdeksystem.SYS_User.UserIsEnabled, zdeksystem.SYS_User.NumberOfFailedLogins, zdeksystem.SYS_User.AutoDeclared,zmedcommon.COMM_PhoneList.PhoneList_Id,zmedcommon.COMM_Phone.Phone_Id, zmedcommon.COMM_Phone.PhoneList_Id, zmedcommon.COMM_Phone.Name, zmedcommon.COMM_Phone.Value, zmedcommon.COMM_Phone.Note, zmedcommon.COMM_Phone.IsPrivate, zmedcommon.COMM_Phone.IsPrimary, zmedcommon.COMM_Phone.ContactType FROM zlmsadmin.ADM_StudentLink JOIN zmedcommon.COMM_Person! ON zlmsadmin.ADM_StudentLink.LinkPerson_Id = zmedcommon.COMM_Person.Person_Id LEFT OUTER JOIN zdeksystem.SYS_User ON zmedcommon.COMM_Person.User_Id = zdeksystem.SYS_User.User_Id LEFT OUTER JOIN zmedcommon.COMM_PhoneList ON zmedcommon.COMM_Person.PhoneList_Id = zmedcommon.COMM_PhoneList.PhoneList_Id LEFT OUTER JOIN zmedcommon.COMM_Phone ON zmedcommon.COMM_PhoneList.PhoneList_Id = zmedcommon.COMM_Phone.PhoneList_Id WHERE ((zlmsadmin.ADM_StudentLink.Student_Id = 29326) AND (zlmsadmin.ADM_StudentLink.IsMain = 1) AND ((zlmsadmin.ADM_StudentLink.StudentLinkSubType = 1) OR (zlmsadmin.ADM_StudentLink.StudentLinkSubType = 2)));
20240806 11:59:18.413 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: administrator:1901330445
20240806 11:59:18.413 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_StudentLink.StudentLink_Id, zlmsadmin.ADM_StudentLink.StudentLinkType, zlmsadmin.ADM_StudentLink.StudentLinkSubType, zlmsadmin.ADM_StudentLink.Student_Id, zlmsadmin.ADM_StudentLink.LinkPerson_Id, zlmsadmin.ADM_StudentLink.Position, zlmsadmin.ADM_StudentLink.IsMain, zlmsadmin.ADM_StudentLink.Note, zlmsadmin.ADM_StudentLink.UserStamp, zlmsadmin.ADM_StudentLink.TimeStamp,zmedcommon.COMM_Person.Person_Id, zmedcommon.COMM_Person.Civility, zmedcommon.COMM_Person.IDNumber, zmedcommon.COMM_Person.FirstName, zmedcommon.COMM_Person.SecondName, zmedcommon.COMM_Person.ThirdName, zmedcommon.COMM_Person.FourthName, zmedcommon.COMM_Person.FamilyName, zmedcommon.COMM_Person.EnglishFirstName, zmedcommon.COMM_Person.EnglishSecondName, zmedcommon.COMM_Person.EnglishThirdName, zmedcommon.COMM_Person.EnglishFourthName, zmedcommon.COMM_Person.EnglishFamilyName, zmedcommon.COMM_Person.BirthName, zmedcommon.COMM_Person.BirthDate, zmedcommon.COMM_Person.BirthCity, zmedcommon.COMM_Person.EnglishBirthCity, zmedcommon.COMM_Person.BirthCountry, zmedcommon.COMM_Person.Nationality, zmedcommon.COMM_Person.Gender, zmedcommon.COMM_Person.MaritalStatus, zmedcommon.COMM_Person.Photo_Id, zmedcommon.COMM_Person.Religion, zmedcommon.COMM_Person.ReligionSector, zmedcommon.COMM_Person.PhoneList_Id, zmedcommon.COMM_Person.AddressList_Id, zmedcommon.COMM_Person.OtherIdList_Id, zmedcommon.COMM_Person.IsDeleted, zmedcommon.COMM_Person.ExternalId, zmedcommon.COMM_Person.UserStamp, zmedcommon.COMM_Person.TimeStamp, zmedcommon.COMM_Person.User_Id, zmedcommon.COMM_Person.InformationSource, zmedcommon.COMM_Person.LastSyncTime, zmedcommon.COMM_Person.IsTemporary, zmedcommon.COMM_Person.VStartDate,zdeksystem.SYS_User.User_Id, zdeksystem.SYS_User.UserName, zdeksystem.SYS_User.UserPassword, zdeksystem.SYS_User.LastLoginDate, zdeksystem.SYS_User.LastFailedLoginDate, zdeksystem.SYS_User.PasswordDate, zdeksystem.SYS_User.PasswordExpired, zdeksystem.SYS_User.UserIsEnabled, zdeksystem.SYS_User.NumberOfFailedLogins, zdeksystem.SYS_User.AutoDeclared,zmedcommon.COMM_PhoneList.PhoneList_Id,zmedcommon.COMM_Phone.Phone_Id, zmedcommon.COMM_Phone.PhoneList_Id, zmedcommon.COMM_Phone.Name, zmedcommon.COMM_Phone.Value, zmedcommon.COMM_Phone.Note, zmedcommon.COMM_Phone.IsPrivate, zmedcommon.COMM_Phone.IsPrimary, zmedcommon.COMM_Phone.ContactType FROM zlmsadmin.ADM_StudentLink JOIN zmedcommon.COMM_Person! ON zlmsadmin.ADM_StudentLink.LinkPerson_Id = zmedcommon.COMM_Person.Person_Id LEFT OUTER JOIN zdeksystem.SYS_User ON zmedcommon.COMM_Person.User_Id = zdeksystem.SYS_User.User_Id LEFT OUTER JOIN zmedcommon.COMM_PhoneList ON zmedcommon.COMM_Person.PhoneList_Id = zmedcommon.COMM_PhoneList.PhoneList_Id LEFT OUTER JOIN zmedcommon.COMM_Phone ON zmedcommon.COMM_PhoneList.PhoneList_Id = zmedcommon.COMM_Phone.PhoneList_Id WHERE ((zlmsadmin.ADM_StudentLink.Student_Id = 29326) AND (zlmsadmin.ADM_StudentLink.IsMain = 1) AND ((zlmsadmin.ADM_StudentLink.StudentLinkSubType = 1) OR (zlmsadmin.ADM_StudentLink.StudentLinkSubType = 2)));
20240806 11:59:18.414 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:18.414 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:18.414 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0013 - Allocated=10, Used=1
20240806 11:59:18.415 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0013 - SELECT ADM_StudentLink.StudentLink_Id, ADM_StudentLink.StudentLinkType, ADM_StudentLink.StudentLinkSubType, ADM_StudentLink.Student_Id, ADM_StudentLink.LinkPerson_Id, ADM_StudentLink.Position, ADM_StudentLink.IsMain, ADM_StudentLink.Note, ADM_StudentLink.UserStamp, ADM_StudentLink.TimeStamp, COMM_Person.Person_Id, COMM_Person.Civility, COMM_Person.IDNumber, COMM_Person.FirstName, COMM_Person.SecondName, COMM_Person.ThirdName, COMM_Person.FourthName, COMM_Person.FamilyName, COMM_Person.EnglishFirstName, COMM_Person.EnglishSecondName, COMM_Person.EnglishThirdName, COMM_Person.EnglishFourthName, COMM_Person.EnglishFamilyName, COMM_Person.BirthName, COMM_Person.BirthDate, COMM_Person.BirthCity, COMM_Person.EnglishBirthCity, COMM_Person.BirthCountry, COMM_Person.Nationality, COMM_Person.Gender, COMM_Person.MaritalStatus, COMM_Person.Photo_Id, COMM_Person.Religion, COMM_Person.ReligionSector, COMM_Person.PhoneList_Id, COMM_Person.AddressList_Id, COMM_Person.OtherIdList_Id, COMM_Person.IsDeleted, COMM_Person.ExternalId, COMM_Person.UserStamp, COMM_Person.TimeStamp, COMM_Person.User_Id, COMM_Person.InformationSource, COMM_Person.LastSyncTime, COMM_Person.IsTemporary, COMM_Person.VStartDate, SYS_User.User_Id, SYS_User.UserName, SYS_User.UserPassword, SYS_User.LastLoginDate, SYS_User.LastFailedLoginDate, SYS_User.PasswordDate, SYS_User.PasswordExpired, SYS_User.UserIsEnabled, SYS_User.NumberOfFailedLogins, SYS_User.AutoDeclared, COMM_PhoneList.PhoneList_Id, COMM_Phone.Phone_Id, COMM_Phone.PhoneList_Id, COMM_Phone.Name, COMM_Phone.Value, COMM_Phone.Note, COMM_Phone.IsPrivate, COMM_Phone.IsPrimary, COMM_Phone.ContactType FROM ADM_StudentLink JOIN COMM_Person ON ((COMM_Person.IsDeleted = 0)) AND ((ADM_StudentLink.LinkPerson_Id = COMM_Person.Person_Id)) LEFT OUTER JOIN SYS_User ON (COMM_Person.User_Id = SYS_User.User_Id) LEFT OUTER JOIN COMM_PhoneList ON (COMM_Person.PhoneList_Id = COMM_PhoneList.PhoneList_Id) LEFT OUTER JOIN COMM_Phone ON (COMM_PhoneList.PhoneList_Id = COMM_Phone.PhoneList_Id) WHERE (((ADM_StudentLink.Student_Id = ?) AND (ADM_StudentLink.IsMain = ?)) AND ((ADM_StudentLink.StudentLinkSubType = ?) OR (ADM_StudentLink.StudentLinkSubType = ?)))
20240806 11:59:18.415 006B =FUN= [ZQL.PhysicalConnection] Parameters: 29326, 1, 1, 2
20240806 11:59:18.415 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:18.662 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:18.663 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:18.663 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0013
20240806 11:59:18.664 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 65 columns, 5 rows
20240806 11:59:18.664 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0013
20240806 11:59:18.664 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0013
20240806 11:59:18.665 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:18.665 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:18.665 006B =WRN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: zcare.zdataserver.ZDataAccess.sqlSelect took too much time: 252 ms
20240806 11:59:18.665 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 11:59:18.665 006B =API= [DATAPROXY] sqlSelect:Result: 0: C, 65 cols, 5 rows
20240806 11:59:18.673 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.dbag.DBag.load
20240806 11:59:19.003 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.dbag.DBag.load
20240806 11:59:19.003 006B =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.CourseDefCodes, zlmsadmin.ADM_EduScenarioOptionalGrp.NumberOfPeriods, zlmsadmin.ADM_EduScenarioOptionalGrp.type,zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id, zlmsadmin.ADM_OptionalCourseGroup.Name, zlmsadmin.ADM_OptionalCourseGroup.MinimumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.MaximumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.IsSelectedByStudent FROM zlmsadmin.ADM_EduScenario JOIN zlmsadmin.ADM_EduScenarioOptionalGrp ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id JOIN zlmsadmin.ADM_OptionalCourseGroup ON zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id WHERE (zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198871);
20240806 11:59:19.003 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: administrator:1901330445
20240806 11:59:19.003 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.CourseDefCodes, zlmsadmin.ADM_EduScenarioOptionalGrp.NumberOfPeriods, zlmsadmin.ADM_EduScenarioOptionalGrp.type,zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id, zlmsadmin.ADM_OptionalCourseGroup.Name, zlmsadmin.ADM_OptionalCourseGroup.MinimumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.MaximumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.IsSelectedByStudent FROM zlmsadmin.ADM_EduScenario JOIN zlmsadmin.ADM_EduScenarioOptionalGrp ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id JOIN zlmsadmin.ADM_OptionalCourseGroup ON zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id WHERE (zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198871);
20240806 11:59:19.003 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:19.003 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:19.003 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0010 - Allocated=10, Used=1
20240806 11:59:19.004 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0010 - SELECT ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, ADM_EduScenarioOptionalGrp.EduScenario_Id, ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, ADM_EduScenarioOptionalGrp.CourseDefCodes, ADM_EduScenarioOptionalGrp.NumberOfPeriods, ADM_EduScenarioOptionalGrp.type, ADM_OptionalCourseGroup.OptionalCourseGroup_Id, ADM_OptionalCourseGroup.Name, ADM_OptionalCourseGroup.MinimumSelectedCourse, ADM_OptionalCourseGroup.MaximumSelectedCourse, ADM_OptionalCourseGroup.IsSelectedByStudent FROM ADM_EduScenario JOIN ADM_EduScenarioOptionalGrp ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioOptionalGrp.EduScenario_Id) JOIN ADM_OptionalCourseGroup ON (ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = ADM_OptionalCourseGroup.OptionalCourseGroup_Id) WHERE (ADM_EduScenario.EduScenario_Id = ?)
20240806 11:59:19.004 006B =FUN= [ZQL.PhysicalConnection] Parameters: 622198871
20240806 11:59:19.004 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:19.124 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:19.126 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:19.126 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0010
20240806 11:59:19.126 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 19 columns, 2 rows
20240806 11:59:19.126 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0010
20240806 11:59:19.127 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0010
20240806 11:59:19.127 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:19.127 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:19.127 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 11:59:19.127 006B =API= [DATAPROXY] sqlSelect:Result: 0: C, 19 cols, 2 rows
20240806 11:59:19.128 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.dbag.DBag.load
20240806 11:59:19.128 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.dbag.DBag.load
20240806 11:59:19.128 006B =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zlmsadmin.ADM_CourseDef.CourseDef_Id, zlmsadmin.ADM_CourseDef.EducationPathDef_Id, zlmsadmin.ADM_CourseDef.SessionDef_Id, zlmsadmin.ADM_CourseDef.TeachingSubject, zlmsadmin.ADM_CourseDef.TeachingLanguage, zlmsadmin.ADM_CourseDef.Title, zlmsadmin.ADM_CourseDef.NumberOfPeriods, zlmsadmin.ADM_CourseDef.NumberOfPeriodsPerWeek, zlmsadmin.ADM_CourseDef.PeriodDuration, zlmsadmin.ADM_CourseDef.PeriodDurationUnit, zlmsadmin.ADM_CourseDef.SlotColor, zlmsadmin.ADM_CourseDef.StudentGender, zlmsadmin.ADM_CourseDef.IsAcademic, zlmsadmin.ADM_CourseDef.Code, zlmsadmin.ADM_CourseDef.Position, zlmsadmin.ADM_CourseDef.CourseWeight, zlmsadmin.ADM_CourseDef.PassScore, zlmsadmin.ADM_CourseDef.OtherTitle, zlmsadmin.ADM_CourseDef.isTermBasedCourse, zlmsadmin.ADM_CourseDef.Department, zlmsadmin.ADM_CourseDef.UserStamp, zlmsadmin.ADM_CourseDef.TimeStamp FROM zlmsadmin.ADM_CourseDef WHERE (zlmsadmin.ADM_CourseDef.CourseDef_Id IN(1199703617, 1199703621, 1199703629, 1199702491, 1199702495, 1199702493, 1199703595, 1199703083, 1199702507, 1199703081, 1199702505, 1199703599, 1199703087, 1199702511, 1199703597, 1199702509, 1199703085, 1199702515, 1199703089, 1199702513, 1199703607, 1199702519, 1199703611, 1199703099, 1199703609, 1199703615, 1199702527, 1199703613));
20240806 11:59:19.128 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: administrator:1901330445
20240806 11:59:19.128 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_CourseDef.CourseDef_Id, zlmsadmin.ADM_CourseDef.EducationPathDef_Id, zlmsadmin.ADM_CourseDef.SessionDef_Id, zlmsadmin.ADM_CourseDef.TeachingSubject, zlmsadmin.ADM_CourseDef.TeachingLanguage, zlmsadmin.ADM_CourseDef.Title, zlmsadmin.ADM_CourseDef.NumberOfPeriods, zlmsadmin.ADM_CourseDef.NumberOfPeriodsPerWeek, zlmsadmin.ADM_CourseDef.PeriodDuration, zlmsadmin.ADM_CourseDef.PeriodDurationUnit, zlmsadmin.ADM_CourseDef.SlotColor, zlmsadmin.ADM_CourseDef.StudentGender, zlmsadmin.ADM_CourseDef.IsAcademic, zlmsadmin.ADM_CourseDef.Code, zlmsadmin.ADM_CourseDef.Position, zlmsadmin.ADM_CourseDef.CourseWeight, zlmsadmin.ADM_CourseDef.PassScore, zlmsadmin.ADM_CourseDef.OtherTitle, zlmsadmin.ADM_CourseDef.isTermBasedCourse, zlmsadmin.ADM_CourseDef.Department, zlmsadmin.ADM_CourseDef.UserStamp, zlmsadmin.ADM_CourseDef.TimeStamp FROM zlmsadmin.ADM_CourseDef WHERE (zlmsadmin.ADM_CourseDef.CourseDef_Id IN(1199703617, 1199703621, 1199703629, 1199702491, 1199702495, 1199702493, 1199703595, 1199703083, 1199702507, 1199703081, 1199702505, 1199703599, 1199703087, 1199702511, 1199703597, 1199702509, 1199703085, 1199702515, 1199703089, 1199702513, 1199703607, 1199702519, 1199703611, 1199703099, 1199703609, 1199703615, 1199702527, 1199703613));
20240806 11:59:19.129 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:19.129 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:19.129 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0003 - Allocated=10, Used=1
20240806 11:59:19.129 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0003 - SELECT ADM_CourseDef.CourseDef_Id, ADM_CourseDef.EducationPathDef_Id, ADM_CourseDef.SessionDef_Id, ADM_CourseDef.TeachingSubject, ADM_CourseDef.TeachingLanguage, ADM_CourseDef.Title, ADM_CourseDef.NumberOfPeriods, ADM_CourseDef.NumberOfPeriodsPerWeek, ADM_CourseDef.PeriodDuration, ADM_CourseDef.PeriodDurationUnit, ADM_CourseDef.SlotColor, ADM_CourseDef.StudentGender, ADM_CourseDef.IsAcademic, ADM_CourseDef.Code, ADM_CourseDef.Position, ADM_CourseDef.CourseWeight, ADM_CourseDef.PassScore, ADM_CourseDef.OtherTitle, ADM_CourseDef.isTermBasedCourse, ADM_CourseDef.Department, ADM_CourseDef.UserStamp, ADM_CourseDef.TimeStamp FROM ADM_CourseDef WHERE (ADM_CourseDef.CourseDef_Id IN(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?))
20240806 11:59:19.129 006B =FUN= [ZQL.PhysicalConnection] Parameters: 1199703617, 1199703621, 1199703629, 1199702491, 1199702495, 1199702493, 1199703595, 1199703083, 1199702507, 1199703081, 1199702505, 1199703599, 1199703087, 1199702511, 1199703597, 1199702509, 1199703085, 1199702515, 1199703089, 1199702513, 1199703607, 1199702519, 1199703611, 1199703099, 1199703609, 1199703615, 1199702527, 1199703613
20240806 11:59:19.130 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:19.196 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:19.197 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:19.197 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0003
20240806 11:59:19.197 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 22 columns, 28 rows
20240806 11:59:19.197 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0003
20240806 11:59:19.197 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0003
20240806 11:59:19.197 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:19.198 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:19.198 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 11:59:19.198 006B =API= [DATAPROXY] sqlSelect:Result: 0: C, 22 cols, 28 rows
20240806 11:59:19.201 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.dbag.DBag.load
20240806 11:59:19.201 006B =API= [DATAPROXY] DSCall: -> Call blobCreate
20240806 11:59:19.539 006B =API= [DATAPROXY] DSCall: <- Call blobCreate
20240806 11:59:19.539 006B =API= [DATAPROXY] DSCall: -> Call blobPutNextPart
20240806 11:59:19.934 006B =API= [DATAPROXY] DSCall: <- Call blobPutNextPart
20240806 11:59:19.935 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.dbag.DBag.load
20240806 11:59:19.935 006B =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zmedcommon.COMM_MessageDelivery.MessageDelivery_Id, zmedcommon.COMM_MessageDelivery.Message_Id, zmedcommon.COMM_MessageDelivery.DestinationUser_Id, zmedcommon.COMM_MessageDelivery.ContactType, zmedcommon.COMM_MessageDelivery.DeliveryAddress, zmedcommon.COMM_MessageDelivery.Status, zmedcommon.COMM_MessageDelivery.StatusTimestamp, zmedcommon.COMM_MessageDelivery.DeliverySource, zmedcommon.COMM_MessageDelivery.MarkAsRead FROM zmedcommon.COMM_MessageDelivery WHERE ((zmedcommon.COMM_MessageDelivery.Message_Id = -258) AND (zmedcommon.COMM_MessageDelivery.DestinationUser_Id = 30452));
20240806 11:59:19.935 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: administrator:1901330445
20240806 11:59:19.935 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zmedcommon.COMM_MessageDelivery.MessageDelivery_Id, zmedcommon.COMM_MessageDelivery.Message_Id, zmedcommon.COMM_MessageDelivery.DestinationUser_Id, zmedcommon.COMM_MessageDelivery.ContactType, zmedcommon.COMM_MessageDelivery.DeliveryAddress, zmedcommon.COMM_MessageDelivery.Status, zmedcommon.COMM_MessageDelivery.StatusTimestamp, zmedcommon.COMM_MessageDelivery.DeliverySource, zmedcommon.COMM_MessageDelivery.MarkAsRead FROM zmedcommon.COMM_MessageDelivery WHERE ((zmedcommon.COMM_MessageDelivery.Message_Id = -258) AND (zmedcommon.COMM_MessageDelivery.DestinationUser_Id = 30452));
20240806 11:59:19.936 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:19.936 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:19.936 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0008 - Allocated=10, Used=1
20240806 11:59:19.936 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0008 - SELECT COMM_MessageDelivery.MessageDelivery_Id, COMM_MessageDelivery.Message_Id, COMM_MessageDelivery.DestinationUser_Id, COMM_MessageDelivery.ContactType, COMM_MessageDelivery.DeliveryAddress, COMM_MessageDelivery.Status, COMM_MessageDelivery.StatusTimestamp, COMM_MessageDelivery.DeliverySource, COMM_MessageDelivery.MarkAsRead FROM COMM_MessageDelivery WHERE ((COMM_MessageDelivery.Message_Id = ?) AND (COMM_MessageDelivery.DestinationUser_Id = ?))
20240806 11:59:19.936 006B =FUN= [ZQL.PhysicalConnection] Parameters: -258, 30452
20240806 11:59:19.936 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:19.979 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:19.979 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:19.980 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0008
20240806 11:59:19.980 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 9 columns, 0 rows
20240806 11:59:19.980 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0008
20240806 11:59:19.980 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0008
20240806 11:59:19.981 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:19.981 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:19.981 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 11:59:19.981 006B =API= [DATAPROXY] sqlSelect:Result: 0: C, 9 cols, 0 rows
20240806 11:59:19.981 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.dbag.DBag.load
20240806 11:59:19.982 006B =INF= [EmailMessageHandler_Logger] EmailMessageHandler.EmailMessageHandler: Send Email (Dear  &nbsp;KHALID MOHAMAD SALEH AHMAD ALSHEHHI,<br>this is to inform you, that student &nbsp;Rashid Khalid Mohammad Saleh Alshehhi<br><b>'s elective application with the following details has been modified and approved by the school, as following<br><br>new selection is <br></b><br><b>Scenario Name :</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Group Name</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Name</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Chemistry - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Music Arts</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Visual Arts</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Drama</td></tr></table><br><b>old selection was<br></b><br><b>Scenario Name :</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Group Name</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Name</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Chemistry - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Music Arts</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Visual Arts</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Drama</td></tr></table><br><br>Thanks <hr> <br>عزيزي &nbsp;خالد محمد صالح احمد الشحي,<br>هذا لإبلاغك ان الطالب&nbsp;راشد خالد محمد صالح الشحى<br><b>تم تعديل طلبك وقبوله بالمواد الاتية<br><br>الاختيار الجديد<br></b><br><b>: اسم السيناريو</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المجموعة</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المادة</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الكيمياء - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون الموسيقية</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون البصرية</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>المسرح</td></tr></table><br><b>الاختيار القديم<br></b><br><b>: اسم السيناريو</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المجموعة</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المادة</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الكيمياء - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون الموسيقية</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون البصرية</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>المسرح</td></tr></table><br><br>شكرا) to (test@test.com)
20240806 11:59:20.223 006B =WRN= [Exception] 1901330445:6934 [1]-updatePromotedScenarioSelections: Exception zcare.zdek.ZException: Error sending emailCould not connect to SMTP host: smtp-mail.outlook.com, port: 587 is thrown
20240806 11:59:20.223 006B =INF= [EmailMessageHandler_Logger] EmailMessageHandler.EmailMessageHandler: Send Email (Dear  &nbsp;KHALID MOHAMAD SALEH AHMAD ALSHEHHI,<br>this is to inform you, that student &nbsp;Rashid Khalid Mohammad Saleh Alshehhi<br><b>'s elective application with the following details has been modified and approved by the school, as following<br><br>new selection is <br></b><br><b>Scenario Name :</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Group Name</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Name</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Chemistry - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Music Arts</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Visual Arts</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Drama</td></tr></table><br><b>old selection was<br></b><br><b>Scenario Name :</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Group Name</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Name</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Chemistry - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Music Arts</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Visual Arts</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Drama</td></tr></table><br><br>Thanks <hr> <br>عزيزي &nbsp;خالد محمد صالح احمد الشحي,<br>هذا لإبلاغك ان الطالب&nbsp;راشد خالد محمد صالح الشحى<br><b>تم تعديل طلبك وقبوله بالمواد الاتية<br><br>الاختيار الجديد<br></b><br><b>: اسم السيناريو</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المجموعة</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المادة</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الكيمياء - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون الموسيقية</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون البصرية</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>المسرح</td></tr></table><br><b>الاختيار القديم<br></b><br><b>: اسم السيناريو</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المجموعة</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المادة</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الكيمياء - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون الموسيقية</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون البصرية</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>المسرح</td></tr></table><br><br>شكرا) to (test@test.com)
20240806 11:59:20.317 006B =WRN= [Exception] 1901330445:6934 [1]-updatePromotedScenarioSelections: Exception zcare.zdek.ZException: Error sending emailCould not connect to SMTP host: smtp-mail.outlook.com, port: 587 is thrown
20240806 11:59:20.321 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdataserver.ZDataAccess.sqlBeginTrans : Ticket: administrator:1901330445
20240806 11:59:20.321 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:20.321 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0002 - Allocated=10, Used=1
20240806 11:59:20.321 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0002
20240806 11:59:20.343 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=1
20240806 11:59:20.344 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdataserver.ZDataAccess.sqlBeginTrans
20240806 11:59:20.345 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdataserver.ZDataAccess.sqlExecute : Ticket: administrator:1901330445
20240806 11:59:20.345 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.ZqlParser.parseScript : INSERT INTO zmedcommon.COMM_Message(Sender_Id, SenderName, SenderCode, MessageType, CreationDateTime, Importance, Subject, Status) VALUES (NULL, N'Notification', N'NOTIF', 0, '20240806 11:59:18.682', 0, N'Elective Application', 2) AS $_COMM_Message_258;INSERT INTO zmedcommon.COMM_MessageDelivery(Message_Id, DestinationUser_Id, ContactType, Status, StatusTimestamp, DeliverySource, MarkAsRead) VALUES ($_COMM_Message_258, 30452, 100, 1, '20240806 11:59:19.982', 'zmedcommon.COMM_Person:169987', 0) AS $_COMM_MessageDelivery_290;INSERT INTO zmedcommon.COMM_MessageDelivery(Message_Id, DestinationUser_Id, ContactType, DeliveryAddress, Status, StatusTimestamp, DeliverySource, MarkAsRead) VALUES ($_COMM_Message_258, 30452, 4, N'test@test.com', 1, '20240806 11:59:19.982', 'zmedcommon.COMM_Person:169987', 0) AS $_COMM_MessageDelivery_306;INSERT INTO zmedcommon.COMM_MessageDelivery(Message_Id, DestinationUser_Id, ContactType, DeliveryAddress, Status, StatusTimestamp, DeliverySource, MarkAsRead) VALUES ($_COMM_Message_258, 30452, 4, N'test@test.com', 1, '20240806 11:59:20.223', 'zmedcommon.COMM_Person:169987', 0) AS $_COMM_MessageDelivery_322;INSERT INTO zmedcommon.COMM_MessageContent(Message_Id, Blob_Id, ContentType, Rank) VALUES ($_COMM_Message_258, 1033371651, 1, 1) AS $_COMM_MessageContent_274;
20240806 11:59:20.346 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:20.347 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0002
20240806 11:59:20.347 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=2
20240806 11:59:20.347 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.allocateSequenceValues : PDB0002
20240806 11:59:20.347 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_COMM_MESSAGEDELIVERY, Need  3 
20240806 11:59:20.348 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330439 to 1901330445 and keep from 1901330445
20240806 11:59:20.348 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_COMM_MESSAGE, Need  1 
20240806 11:59:20.348 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330435 to 1901330437 and keep from 1901330437
20240806 11:59:20.348 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_COMM_MESSAGECONTENT, Need  1 
20240806 11:59:20.348 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330435 to 1901330437 and keep from 1901330437
20240806 11:59:20.348 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.allocateSequenceValues
20240806 11:59:20.349 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0002
20240806 11:59:20.349 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_Message (Sender_Id, SenderName, SenderCode, MessageType, CreationDateTime, Importance, Subject, Status, COMM_Message.Message_Id)VALUES (NULL, N'Notification', N'NOTIF', 0, '20240806 11:59:18.682', 0, N'Elective Application', 2, 1901330435)
20240806 11:59:20.349 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_MessageDelivery (Message_Id, DestinationUser_Id, ContactType, Status, StatusTimestamp, DeliverySource, MarkAsRead, COMM_MessageDelivery.MessageDelivery_Id)VALUES (1901330435, 30452, 100, 1, '20240806 11:59:19.982', 'zmedcommon.COMM_Person:169987', 0, 1901330439)
20240806 11:59:20.350 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_MessageDelivery (Message_Id, DestinationUser_Id, ContactType, DeliveryAddress, Status, StatusTimestamp, DeliverySource, MarkAsRead, COMM_MessageDelivery.MessageDelivery_Id)VALUES (1901330435, 30452, 4, N'test@test.com', 1, '20240806 11:59:19.982', 'zmedcommon.COMM_Person:169987', 0, 1901330441)
20240806 11:59:20.350 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_MessageDelivery (Message_Id, DestinationUser_Id, ContactType, DeliveryAddress, Status, StatusTimestamp, DeliverySource, MarkAsRead, COMM_MessageDelivery.MessageDelivery_Id)VALUES (1901330435, 30452, 4, N'test@test.com', 1, '20240806 11:59:20.223', 'zmedcommon.COMM_Person:169987', 0, 1901330443)
20240806 11:59:20.367 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_MessageContent (Message_Id, Blob_Id, ContentType, Rank, COMM_MessageContent.MessageContent_Id)VALUES (1901330435, 1033371651, 1, 1, 1901330435)
20240806 11:59:20.473 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 11:59:20.473 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0002
20240806 11:59:20.473 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=1
20240806 11:59:20.473 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdataserver.ZDataAccess.sqlExecute
20240806 11:59:20.473 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdataserver.ZDataAccess.sqlCommit : Ticket: administrator:1901330445
20240806 11:59:20.473 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.ZqlParser.parseScript : INSERT INTO zdeksystem.SYS_Notification(SenderSession_Id, SenderUser_Id, Subject) VALUES (1901330445, 1, 'SQL:zmedcommon.COMM_Message:I:1901330435');
20240806 11:59:20.473 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:20.475 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0002
20240806 11:59:20.475 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=2
20240806 11:59:20.475 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.allocateSequenceValues : PDB0002
20240806 11:59:20.475 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_SYS_NOTIFICATION, Need  1 
20240806 11:59:20.475 006B =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330437 to 1901330439 and keep from 1901330439
20240806 11:59:20.475 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.allocateSequenceValues
20240806 11:59:20.475 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0002
20240806 11:59:20.475 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO SYS_Notification (SenderSession_Id, SenderUser_Id, Subject, SYS_Notification.Notification_Id)VALUES (1901330445, 1, 'SQL:zmedcommon.COMM_Message:I:1901330435', 1901330437)
20240806 11:59:20.546 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 11:59:20.547 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0002
20240806 11:59:20.547 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=1
20240806 11:59:20.547 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0002
20240806 11:59:20.651 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=0
20240806 11:59:20.652 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0002
20240806 11:59:20.652 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0002
20240806 11:59:20.652 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:20.652 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:20.652 006B =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdataserver.ZDataAccess.sqlCommit
20240806 11:59:20.653 006B =WRN= [Exception] 1901330445:6934 [1]-updatePromotedScenarioSelections: Exception zcare.zdek.ZException: Error sending emailCould not connect to SMTP host: smtp-mail.outlook.com, port: 587 , Error sending emailCould not connect to SMTP host: smtp-mail.outlook.com, port: 587 is thrown
20240806 11:59:20.678 006B =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 11:59:20.679 006B =API= [CallClient] null: <= DBAG_UPDATE EduScenarioStudentsDetail0
20240806 11:59:20.681 006B =WRN= [CallClient] null: The output dbag is too big: DBAG_UPDATE:EduScenarioStudentsDetail0 = 3363384
20240806 11:59:20.681 006B =FUN= [CallFromClient] 1901330445:6934: InputMessage size 10171
20240806 11:59:20.681 006B =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 3363456
20240806 11:59:20.681 006B =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 11:59:22.077 006E =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=38)
20240806 11:59:22.077 006E =API= [FunctionCheck] <App. context>: 2 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: system:1901330435
20240806 11:59:22.078 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:22.078 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0007 - Allocated=10, Used=1
20240806 11:59:22.078 006E =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0007
20240806 11:59:22.078 0095 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:22.078 0095 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0012 - Allocated=10, Used=2
20240806 11:59:22.078 0095 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0012 - UPDATE SYS_Session SET LastCallTime = '20240806 11:59:22.077' WHERE Session_Id IN ( 1901330435)
20240806 11:59:22.102 006E =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 11:59:22.103 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0007
20240806 11:59:22.103 006E =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0007
20240806 11:59:22.103 006E =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:22.103 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 11:59:22.103 006E =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 11:59:22.103 006E =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT TOP 5000 zdeksystem.SYS_Notification.Notification_Id, zdeksystem.SYS_Notification.SenderSession_Id, zdeksystem.SYS_Notification.SenderUser_Id, zdeksystem.SYS_Notification.EmissionTime, zdeksystem.SYS_Notification.Subject, zdeksystem.SYS_Notification.Message FROM zdeksystem.SYS_Notification WHERE ((zdeksystem.SYS_Notification.EmissionTime >= '20240806 11:56:41.527') AND (zdeksystem.SYS_Notification.EmissionTime < '20240806 11:57:50.289')) ORDER BY zdeksystem.SYS_Notification.EmissionTime ASC, zdeksystem.SYS_Notification.Notification_Id ASC;
20240806 11:59:22.104 006E =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:22.104 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:22.104 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0011 - Allocated=10, Used=2
20240806 11:59:22.104 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0011 - SELECT TOP 5000 SYS_Notification.Notification_Id, SYS_Notification.SenderSession_Id, SYS_Notification.SenderUser_Id, SYS_Notification.EmissionTime, SYS_Notification.Subject, SYS_Notification.Message FROM SYS_Notification WHERE ((SYS_Notification.EmissionTime >= ?) AND (SYS_Notification.EmissionTime < ?)) ORDER BY SYS_Notification.EmissionTime ASC, SYS_Notification.Notification_Id ASC
20240806 11:59:22.104 006E =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:56:41.527', '20240806 11:57:50.289'
20240806 11:59:22.104 006E =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:22.132 0095 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 11:59:22.132 0095 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0012
20240806 11:59:22.132 0095 =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0012
20240806 11:59:22.132 0095 =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:22.132 0095 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 11:59:22.184 006E =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:22.184 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:22.185 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0011
20240806 11:59:22.185 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.endQuery : 6 columns, 9 rows
20240806 11:59:22.185 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0011
20240806 11:59:22.185 006E =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0011
20240806 11:59:22.185 006E =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:22.185 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:22.185 006E =FUN= [NotificationCache] null: Cache updated, now from 20240806 11:53:38.712 to 20240806 11:57:48.721
20240806 11:59:22.186 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:22.186 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0014 - Allocated=10, Used=1
20240806 11:59:22.186 006E =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getCpuLoadFromDb
20240806 11:59:22.211 006E =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getCpuLoadFromDb
20240806 11:59:22.211 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0014
20240806 11:59:22.211 006E =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0014
20240806 11:59:22.212 006E =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:22.212 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:22.212 006E =API= [ZDataAccess] ZDataServer: == ServerLoad: 38
20240806 11:59:22.212 006E =API= [FunctionCheck] <App. context>: 2 <- zcare.zdataserver.ZDataAccess.getNotifications
20240806 11:59:22.212 006E =API= [ZDataAccess] ZDataServer: == ServerLoad: 38
20240806 11:59:22.220 006E =API= [FunctionCheck] <App. context>: 2 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: system:1901330437
20240806 11:59:22.220 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:22.220 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0009 - Allocated=10, Used=1
20240806 11:59:22.220 006E =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0009
20240806 11:59:22.258 006E =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 11:59:22.258 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0009
20240806 11:59:22.258 006E =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0009
20240806 11:59:22.258 006E =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:22.258 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:22.258 006E =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 11:59:22.258 006E =API= [ZDataAccess] ZDataServer: == ServerLoad: 38
20240806 11:59:22.258 006E =API= [FunctionCheck] <App. context>: 2 <- zcare.zdataserver.ZDataAccess.getNotifications
20240806 11:59:22.259 006E =API= [ZDataAccess] ZDataServer: == ServerLoad: 38
20240806 11:59:22.260 006E =API= [FunctionCheck] <App. context>: 2 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: system:1901330439
20240806 11:59:22.260 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:22.260 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0013 - Allocated=10, Used=1
20240806 11:59:22.260 006E =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0013
20240806 11:59:22.288 006E =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 11:59:22.321 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0013
20240806 11:59:22.346 006E =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0013
20240806 11:59:22.346 006E =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:22.346 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:22.346 006E =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 11:59:22.623 006E =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT TOP 5000 zdeksystem.SYS_Notification.Notification_Id, zdeksystem.SYS_Notification.SenderSession_Id, zdeksystem.SYS_Notification.SenderUser_Id, zdeksystem.SYS_Notification.EmissionTime, zdeksystem.SYS_Notification.Subject, zdeksystem.SYS_Notification.Message FROM zdeksystem.SYS_Notification WHERE ((zdeksystem.SYS_Notification.EmissionTime >= '20240806 11:57:48.721') AND (zdeksystem.SYS_Notification.EmissionTime < '20240806 11:57:50.795')) ORDER BY zdeksystem.SYS_Notification.EmissionTime ASC, zdeksystem.SYS_Notification.Notification_Id ASC;
20240806 11:59:22.623 006E =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:22.623 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:22.623 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0010 - Allocated=10, Used=1
20240806 11:59:22.623 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0010 - SELECT TOP 5000 SYS_Notification.Notification_Id, SYS_Notification.SenderSession_Id, SYS_Notification.SenderUser_Id, SYS_Notification.EmissionTime, SYS_Notification.Subject, SYS_Notification.Message FROM SYS_Notification WHERE ((SYS_Notification.EmissionTime >= ?) AND (SYS_Notification.EmissionTime < ?)) ORDER BY SYS_Notification.EmissionTime ASC, SYS_Notification.Notification_Id ASC
20240806 11:59:22.623 006E =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:57:48.721', '20240806 11:57:50.795'
20240806 11:59:22.623 006E =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:22.844 006E =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:22.844 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:22.844 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0010
20240806 11:59:22.844 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.endQuery : 6 columns, 0 rows
20240806 11:59:22.844 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0010
20240806 11:59:22.845 006E =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0010
20240806 11:59:22.845 006E =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:22.845 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:22.845 006E =FUN= [NotificationCache] null: Cache updated, now from 20240806 11:53:38.712 to 20240806 11:57:48.721
20240806 11:59:22.845 006E =API= [ZDataAccess] ZDataServer: == ServerLoad: 38
20240806 11:59:22.845 006E =WRN= [FunctionCheck] <App. context>: zcare.zdataserver.ZDataAccess.getNotifications took too much time: 585 ms
20240806 11:59:22.845 006E =API= [FunctionCheck] <App. context>: 2 <- zcare.zdataserver.ZDataAccess.getNotifications
20240806 11:59:22.845 006E =API= [ZDataAccess] ZDataServer: == ServerLoad: 38
20240806 11:59:22.846 006E =API= [FunctionCheck] <App. context>: 2 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: system:1901330441
20240806 11:59:22.846 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:22.846 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0003 - Allocated=10, Used=1
20240806 11:59:22.846 006E =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0003
20240806 11:59:22.882 006E =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 11:59:22.882 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0003
20240806 11:59:22.882 006E =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0003
20240806 11:59:22.882 006E =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:22.883 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:22.883 006E =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 11:59:23.126 006E =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT TOP 5000 zdeksystem.SYS_Notification.Notification_Id, zdeksystem.SYS_Notification.SenderSession_Id, zdeksystem.SYS_Notification.SenderUser_Id, zdeksystem.SYS_Notification.EmissionTime, zdeksystem.SYS_Notification.Subject, zdeksystem.SYS_Notification.Message FROM zdeksystem.SYS_Notification WHERE ((zdeksystem.SYS_Notification.EmissionTime >= '20240806 11:57:48.721') AND (zdeksystem.SYS_Notification.EmissionTime < '20240806 11:57:51.297')) ORDER BY zdeksystem.SYS_Notification.EmissionTime ASC, zdeksystem.SYS_Notification.Notification_Id ASC;
20240806 11:59:23.170 006E =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:23.170 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:23.170 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0008 - Allocated=10, Used=1
20240806 11:59:23.170 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0008 - SELECT TOP 5000 SYS_Notification.Notification_Id, SYS_Notification.SenderSession_Id, SYS_Notification.SenderUser_Id, SYS_Notification.EmissionTime, SYS_Notification.Subject, SYS_Notification.Message FROM SYS_Notification WHERE ((SYS_Notification.EmissionTime >= ?) AND (SYS_Notification.EmissionTime < ?)) ORDER BY SYS_Notification.EmissionTime ASC, SYS_Notification.Notification_Id ASC
20240806 11:59:23.170 006E =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:57:48.721', '20240806 11:57:51.297'
20240806 11:59:23.170 006E =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:23.220 006E =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:23.220 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:23.220 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0008
20240806 11:59:23.220 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.endQuery : 6 columns, 0 rows
20240806 11:59:23.220 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0008
20240806 11:59:23.220 006E =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0008
20240806 11:59:23.220 006E =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:23.220 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:23.220 006E =FUN= [NotificationCache] null: Cache updated, now from 20240806 11:53:38.712 to 20240806 11:57:48.721
20240806 11:59:23.221 006E =API= [ZDataAccess] ZDataServer: == ServerLoad: 38
20240806 11:59:23.221 006E =WRN= [FunctionCheck] <App. context>: zcare.zdataserver.ZDataAccess.getNotifications took too much time: 375 ms
20240806 11:59:23.221 006E =API= [FunctionCheck] <App. context>: 2 <- zcare.zdataserver.ZDataAccess.getNotifications
20240806 11:59:23.221 006E =API= [ZDataAccess] ZDataServer: == ServerLoad: 38
20240806 11:59:23.221 006E =API= [FunctionCheck] <App. context>: 2 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: system:1901330443
20240806 11:59:23.221 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:23.221 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0002 - Allocated=10, Used=1
20240806 11:59:23.221 006E =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0002
20240806 11:59:23.253 006E =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 11:59:23.254 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0002
20240806 11:59:23.254 006E =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0002
20240806 11:59:23.254 006E =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:23.254 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:23.254 006E =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 11:59:23.255 006E =API= [ZDataAccess] ZDataServer: == ServerLoad: 38
20240806 11:59:23.255 006E =API= [FunctionCheck] <App. context>: 2 <- zcare.zdataserver.ZDataAccess.getNotifications
20240806 11:59:23.255 006E =API= [ZDataAccess] ZDataServer: == ServerLoad: 38
20240806 11:59:23.256 006E =API= [CallFromClient] null: => DBAG_COPY DIALOG_MANAGER_DATA
20240806 11:59:23.256 006E =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:CONTEXT_CHANGES
20240806 11:59:23.256 006E =FUN= [CallFromClient] null: Parameter FROM_CTX=D_EduScenarioStudentsDetail0
20240806 11:59:23.256 006E =FUN= [CallFromClient] null: Parameter DATA_SET=EduScenarioStudentsDetail0
20240806 11:59:23.256 006E =FUN= [CallFromClient] null: Parameter HANDLER_NAME=EDU_SCENARIO_STUDENTS_DETAIL
20240806 11:59:23.256 006E =FUN= [CallFromClient] null: Parameter P1=-2466|3|1|EDU_SCENARIO_ID|622198871
20240806 11:59:23.256 006E =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 11:59:23.256 006E =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 11:59:23.256 006E =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 11:59:23.256 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 -> zcare.zlms.educationalscenario.enrollment.dataset.ElectiveScenarioStudentListDetailDataSet$Handler.handleContextChange
20240806 11:59:23.259 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.dbag.DBag.load
20240806 11:59:23.259 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id, zlmsadmin.ADM_ScenarioSelection.EduScenario_Id, zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id, zlmsadmin.ADM_ScenarioSelection.Enrollment_Id, zlmsadmin.ADM_ScenarioSelection.SelectionStatus, zlmsadmin.ADM_ScenarioSelection.JoiningDate, zlmsadmin.ADM_ScenarioSelection.ExitDate, zlmsadmin.ADM_ScenarioSelection.UserStamp, zlmsadmin.ADM_ScenarioSelection.TimeStamp, zlmsadmin.ADM_ScenarioSelection.NoteHistory_Id,zlmsadmin.ADM_SelectionDetails.SelectionDetails_Id, zlmsadmin.ADM_SelectionDetails.ScenarioSelection_Id, zlmsadmin.ADM_SelectionDetails.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_SelectionDetails.CourseDefCode, zlmsadmin.ADM_SelectionDetails.NumberOfPeriods, zlmsadmin.ADM_SelectionDetails.UserStamp, zlmsadmin.ADM_SelectionDetails.TimeStamp,zlmsadmin.ADM_Enrollment.Enrollment_Id, zlmsadmin.ADM_Enrollment.School_Id, zlmsadmin.ADM_Enrollment.Student_Id, zlmsadmin.ADM_Enrollment.Session_Id, zlmsadmin.ADM_Enrollment.StreamGrade_Id, zlmsadmin.ADM_Enrollment.Community_Id, zlmsadmin.ADM_Enrollment.EnrollmentType, zlmsadmin.ADM_Enrollment.EntryType, zlmsadmin.ADM_Enrollment.EntryDate, zlmsadmin.ADM_Enrollment.TransferFromSchool_Id, zlmsadmin.ADM_Enrollment.TransferToSchool_Id, zlmsadmin.ADM_Enrollment.ExitType, zlmsadmin.ADM_Enrollment.ExitReason, zlmsadmin.ADM_Enrollment.ExitDate, zlmsadmin.ADM_Enrollment.Note, zlmsadmin.ADM_Enrollment.IsSpecialNeed, zlmsadmin.ADM_Enrollment.ExternalId, zlmsadmin.ADM_Enrollment.UserStamp, zlmsadmin.ADM_Enrollment.TimeStamp, zlmsadmin.ADM_Enrollment.RegistrationStatus, zlmsadmin.ADM_Enrollment.TransferFromEnrollment_Id, zlmsadmin.ADM_Enrollment.TransferToCommunity_Id, zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment, zlmsadmin.ADM_Enrollment.RecomputePassFail, zlmsadmin.ADM_Enrollment.MandatoryEducation, zlmsadmin.ADM_Enrollment.IsWaitingList, zlmsadmin.ADM_Enrollment.CreateTimeStamp, zlmsadmin.ADM_Enrollment.IsNotOfficialEnrollment, zlmsadmin.ADM_Enrollment.UserNote, zlmsadmin.ADM_Enrollment.DeleteType, zlmsadmin.ADM_Enrollment.IsDeleted, zlmsadmin.ADM_Enrollment.CreationUser_Id,zmedcommon.COMM_ApplicationForm.ApplicationForm_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormNumber, zmedcommon.COMM_ApplicationForm.ApplicationDate, zmedcommon.COMM_ApplicationForm.Applicant_Id, zmedcommon.COMM_ApplicationForm.Workflow_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormType, zmedcommon.COMM_ApplicationForm.Note, zmedcommon.COMM_ApplicationForm.TimeStamp, zmedcommon.COMM_ApplicationForm.UserStamp,zlmsregistration.REG_StudentRegistration.StudentRegistration_Id, zlmsregistration.REG_StudentRegistration.ApplicationForm_Id, zlmsregistration.REG_StudentRegistration.Student_Id, zlmsregistration.REG_StudentRegistration.AcademicYear_Id, zlmsregistration.REG_StudentRegistration.EducationPath_Id, zlmsregistration.REG_StudentRegistration.Enrollment_Id, zlmsregistration.REG_StudentRegistration.EducationType, zlmsregistration.REG_StudentRegistration.EducationFocus, zlmsregistration.REG_StudentRegistration.StreamGrade, zlmsregistration.REG_StudentRegistration.School_Id, zlmsregistration.REG_StudentRegistration.IsTransportRequired, zlmsregistration.REG_StudentRegistration.ExamTime, zlmsregistration.REG_StudentRegistration.ExamScore, zlmsregistration.REG_StudentRegistration.InterviewTime, zlmsregistration.REG_StudentRegistration.DocumentList_Id, zlmsregistration.REG_StudentRegistration.CitizenshipStatus, zlmsregistration.REG_StudentRegistration.ParentWorkPlace, zlmsregistration.REG_StudentRegistration.IsSpecialNeed, zlmsregistration.REG_StudentRegistration.TimeStamp, zlmsregistration.REG_StudentRegistration.UserStamp, zlmsregistration.REG_StudentRegistration.InCatchmentArea, zlmsregistration.REG_StudentRegistration.ProgramCategory_Id,zmedcommon.COMM_Workflow.Workflow_Id, zmedcommon.COMM_Workflow.Name, zmedcommon.COMM_Workflow.Code, zmedcommon.COMM_Workflow.Note,zmedcommon.COMM_ApplicationFormState.ApplicationFormState_Id, zmedcommon.COMM_ApplicationFormState.WorkflowState_Id, zmedcommon.COMM_ApplicationFormState.PrevWorkflowState_Id, zmedcommon.COMM_ApplicationFormState.StateStartDate, zmedcommon.COMM_ApplicationFormState.StateEndDate, zmedcommon.COMM_ApplicationFormState.PerformedByUser_Id, zmedcommon.COMM_ApplicationFormState.AttributeList_Id, zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id, zmedcommon.COMM_ApplicationFormState.IsCurrent, zmedcommon.COMM_ApplicationFormState.Note, zmedcommon.COMM_ApplicationFormState.TimeStamp, zmedcommon.COMM_ApplicationFormState.UserStamp,zmedcommon.COMM_WorkflowState.WorkflowState_Id, zmedcommon.COMM_WorkflowState.Workflow_Id, zmedcommon.COMM_WorkflowState.Name, zmedcommon.COMM_WorkflowState.StateCode, zmedcommon.COMM_WorkflowState.Note,zlmsadmin.ADM_Student.Student_Id, zlmsadmin.ADM_Student.StudentNumber, zlmsadmin.ADM_Student.CreationDate, zlmsadmin.ADM_Student.CreationUser_Id, zlmsadmin.ADM_Student.UserStamp, zlmsadmin.ADM_Student.TimeStamp, zlmsadmin.ADM_Student.IsDeleted, zlmsadmin.ADM_Student.AttributeList_Id, zlmsadmin.ADM_Student.CitizenshipStatus,zmedcommon.COMM_Person.Person_Id, zmedcommon.COMM_Person.Civility, zmedcommon.COMM_Person.IDNumber, zmedcommon.COMM_Person.FirstName, zmedcommon.COMM_Person.SecondName, zmedcommon.COMM_Person.ThirdName, zmedcommon.COMM_Person.FourthName, zmedcommon.COMM_Person.FamilyName, zmedcommon.COMM_Person.EnglishFirstName, zmedcommon.COMM_Person.EnglishSecondName, zmedcommon.COMM_Person.EnglishThirdName, zmedcommon.COMM_Person.EnglishFourthName, zmedcommon.COMM_Person.EnglishFamilyName, zmedcommon.COMM_Person.BirthName, zmedcommon.COMM_Person.BirthDate, zmedcommon.COMM_Person.BirthCity, zmedcommon.COMM_Person.EnglishBirthCity, zmedcommon.COMM_Person.BirthCountry, zmedcommon.COMM_Person.Nationality, zmedcommon.COMM_Person.Gender, zmedcommon.COMM_Person.MaritalStatus, zmedcommon.COMM_Person.Photo_Id, zmedcommon.COMM_Person.Religion, zmedcommon.COMM_Person.ReligionSector, zmedcommon.COMM_Person.PhoneList_Id, zmedcommon.COMM_Person.AddressList_Id, zmedcommon.COMM_Person.OtherIdList_Id, zmedcommon.COMM_Person.IsDeleted, zmedcommon.COMM_Person.ExternalId, zmedcommon.COMM_Person.UserStamp, zmedcommon.COMM_Person.TimeStamp, zmedcommon.COMM_Person.User_Id, zmedcommon.COMM_Person.InformationSource, zmedcommon.COMM_Person.LastSyncTime, zmedcommon.COMM_Person.IsTemporary, zmedcommon.COMM_Person.VStartDate,zmedcommon.COMM_PhoneList.PhoneList_Id,zmedcommon.COMM_Phone.Phone_Id, zmedcommon.COMM_Phone.PhoneList_Id, zmedcommon.COMM_Phone.Name, zmedcommon.COMM_Phone.Value, zmedcommon.COMM_Phone.Note, zmedcommon.COMM_Phone.IsPrivate, zmedcommon.COMM_Phone.IsPrimary, zmedcommon.COMM_Phone.ContactType,zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.CourseDefCodes, zlmsadmin.ADM_EduScenarioOptionalGrp.NumberOfPeriods, zlmsadmin.ADM_EduScenarioOptionalGrp.type,zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id, zlmsadmin.ADM_OptionalCourseGroup.Name, zlmsadmin.ADM_OptionalCourseGroup.MinimumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.MaximumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.IsSelectedByStudent,zlmsadmin.ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationType, zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus, zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade,zlmsadmin.ADM_StreamGrade.StreamGrade_Id, zlmsadmin.ADM_StreamGrade.Name, zlmsadmin.ADM_StreamGrade.Title, zlmsadmin.ADM_StreamGrade.Grade_Id,zlmsadmin.ADM_Grade.Grade_Id, zlmsadmin.ADM_Grade.EducationPathDef_Id, zlmsadmin.ADM_Grade.Name, zlmsadmin.ADM_Grade.Title, zlmsadmin.ADM_Grade.Position, zlmsadmin.ADM_Grade.SchoolLevel, zlmsadmin.ADM_Grade.MinAge, zlmsadmin.ADM_Grade.MinSpAge, zlmsadmin.ADM_Grade.MaxAge, zlmsadmin.ADM_Grade.MaxSpAge, zlmsadmin.ADM_Grade.MinAgeMargin, zlmsadmin.ADM_Grade.MinAgeMarginUnit, zlmsadmin.ADM_Grade.MaxAgeMargin, zlmsadmin.ADM_Grade.MaxAgeMarginUnit, zlmsadmin.ADM_Grade.CapacityGroup, zlmsadmin.ADM_Grade.MinAgeMargin2, zlmsadmin.ADM_Grade.MinAgeMarginUnit2, zlmsadmin.ADM_Grade.MaxAgeMargin2, zlmsadmin.ADM_Grade.MaxAgeMarginUnit2, zlmsadmin.ADM_Grade.ExternalId, zlmsadmin.ADM_Grade.CommunityTitlePrefix, zlmsadmin.ADM_Grade.AgeReferenceDate, zlmsadmin.ADM_Grade.VStartDate, zlmsadmin.ADM_Grade.UserStamp, zlmsadmin.ADM_Grade.TimeStamp,zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id, zlmsadmin.ADM_EducationPathDef.EducationPath_Id, zlmsadmin.ADM_EducationPathDef.StartDate, zlmsadmin.ADM_EducationPathDef.EndDate, zlmsadmin.ADM_EducationPathDef.IsActive, zlmsadmin.ADM_EducationPathDef.EducationType, zlmsadmin.ADM_EducationPathDef.EducationFocus,zlmsadmin.ADM_SessionDef.SessionDef_Id, zlmsadmin.ADM_SessionDef.EducationPathDef_Id, zlmsadmin.ADM_SessionDef.Title, zlmsadmin.ADM_SessionDef.SessionType, zlmsadmin.ADM_SessionDef.Duration, zlmsadmin.ADM_SessionDef.DurationUnit, zlmsadmin.ADM_SessionDef.Parent_Id, zlmsadmin.ADM_SessionDef.Position,zlmsadmin.ADM_Session.Session_Id, zlmsadmin.ADM_Session.AcademicYear_Id, zlmsadmin.ADM_Session.SessionDef_Id, zlmsadmin.ADM_Session.Title, zlmsadmin.ADM_Session.Parent_Id, zlmsadmin.ADM_Session.StartDate, zlmsadmin.ADM_Session.EndDate, zlmsadmin.ADM_Session.Position, zlmsadmin.ADM_Session.UserStamp, zlmsadmin.ADM_Session.TimeStamp,zlmsadmin.ADM_CourseDefStreamGrade.CourseDefStreamGrade_Id, zlmsadmin.ADM_CourseDefStreamGrade.CourseDef_Id, zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id, zlmsadmin.ADM_CourseDefStreamGrade.IsOptional, zlmsadmin.ADM_CourseDefStreamGrade.OptionalCourseGroup_Id,zlmsadmin.ADM_CourseDef.CourseDef_Id, zlmsadmin.ADM_CourseDef.EducationPathDef_Id, zlmsadmin.ADM_CourseDef.SessionDef_Id, zlmsadmin.ADM_CourseDef.TeachingSubject, zlmsadmin.ADM_CourseDef.TeachingLanguage, zlmsadmin.ADM_CourseDef.Title, zlmsadmin.ADM_CourseDef.NumberOfPeriods, zlmsadmin.ADM_CourseDef.NumberOfPeriodsPerWeek, zlmsadmin.ADM_CourseDef.PeriodDuration, zlmsadmin.ADM_CourseDef.PeriodDurationUnit, zlmsadmin.ADM_CourseDef.SlotColor, zlmsadmin.ADM_CourseDef.StudentGender, zlmsadmin.ADM_CourseDef.IsAcademic, zlmsadmin.ADM_CourseDef.Code, zlmsadmin.ADM_CourseDef.Position, zlmsadmin.ADM_CourseDef.CourseWeight, zlmsadmin.ADM_CourseDef.PassScore, zlmsadmin.ADM_CourseDef.OtherTitle, zlmsadmin.ADM_CourseDef.isTermBasedCourse, zlmsadmin.ADM_CourseDef.Department, zlmsadmin.ADM_CourseDef.UserStamp, zlmsadmin.ADM_CourseDef.TimeStamp,zlmsadmin.ADM_AcademicYear.AcademicYear_Id, zlmsadmin.ADM_AcademicYear.Title, zlmsadmin.ADM_AcademicYear.IsCurrent, zlmsadmin.ADM_AcademicYear.Status, zlmsadmin.ADM_AcademicYear.POSITION,zmedcommon.COMM_NoteHistory.NoteHistory_Id,zmedcommon.COMM_Note.Note_Id, zmedcommon.COMM_Note.NoteHistory_Id, zmedcommon.COMM_Note.Text, zmedcommon.COMM_Note.User_Id, zmedcommon.COMM_Note.NoteDate, zmedcommon.COMM_Note.Status, zmedcommon.COMM_Note.UserStamp, zmedcommon.COMM_Note.TimeStamp FROM zlmsadmin.ADM_ScenarioSelection JOIN zlmsadmin.ADM_SelectionDetails ON zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id = zlmsadmin.ADM_SelectionDetails.ScenarioSelection_Id JOIN zlmsadmin.ADM_Enrollment! ON zlmsadmin.ADM_ScenarioSelection.Enrollment_Id = zlmsadmin.ADM_Enrollment.Enrollment_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationForm ON zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id = zmedcommon.COMM_ApplicationForm.ApplicationForm_Id LEFT OUTER JOIN zlmsregistration.REG_StudentRegistration ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zlmsregistration.REG_StudentRegistration.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_Workflow ON zmedcommon.COMM_ApplicationForm.Workflow_Id = zmedcommon.COMM_Workflow.Workflow_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationFormState ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_WorkflowState ON zmedcommon.COMM_ApplicationFormState.WorkflowState_Id = zmedcommon.COMM_WorkflowState.WorkflowState_Id JOIN zlmsadmin.ADM_Student! ON zlmsadmin.ADM_Enrollment.Student_Id = zlmsadmin.ADM_Student.Student_Id JOIN zmedcommon.COMM_Person! ON (zlmsadmin.ADM_Student.Student_Id = zmedcommon.COMM_Person.Person_Id) JOIN zmedcommon.COMM_PhoneList ON zmedcommon.COMM_Person.PhoneList_Id = zmedcommon.COMM_PhoneList.PhoneList_Id JOIN zmedcommon.COMM_Phone ON zmedcommon.COMM_PhoneList.PhoneList_Id = zmedcommon.COMM_Phone.PhoneList_Id JOIN zlmsadmin.ADM_EduScenario ON zlmsadmin.ADM_ScenarioSelection.EduScenario_Id = zlmsadmin.ADM_EduScenario.EduScenario_Id JOIN zlmsadmin.ADM_EduScenarioOptionalGrp ON zlmsadmin.ADM_SelectionDetails.EduScenarioOptionalGrp_Id = zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id JOIN zlmsadmin.ADM_OptionalCourseGroup ON zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id JOIN zlmsadmin.ADM_EduScenarioStreamGrade ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id JOIN zlmsadmin.ADM_StreamGrade ON (zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade = zlmsadmin.ADM_StreamGrade.Name) JOIN zlmsadmin.ADM_Grade ON zlmsadmin.ADM_StreamGrade.Grade_Id = zlmsadmin.ADM_Grade.Grade_Id JOIN zlmsadmin.ADM_EducationPathDef ON ((zlmsadmin.ADM_EducationPathDef.EducationPath_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus = zlmsadmin.ADM_EducationPathDef.EducationFocus) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationType = zlmsadmin.ADM_EducationPathDef.EducationType)) JOIN zlmsadmin.ADM_SessionDef ON zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id = zlmsadmin.ADM_SessionDef.EducationPathDef_Id JOIN zlmsadmin.ADM_Session ON zlmsadmin.ADM_SessionDef.SessionDef_Id = zlmsadmin.ADM_Session.SessionDef_Id AND (((zlmsadmin.ADM_Session.AcademicYear_Id = zlmsadmin.ADM_EduScenario.AcademicYear_Id) AND (zlmsadmin.ADM_Grade.EducationPathDef_Id = zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id) AND (zlmsadmin.ADM_Session.Parent_Id IS NULL))) JOIN zlmsadmin.ADM_CourseDefStreamGrade ON zlmsadmin.ADM_StreamGrade.StreamGrade_Id = zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id AND (((zlmsadmin.ADM_StreamGrade.StreamGrade_Id = zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id) AND (zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id = zlmsadmin.ADM_CourseDefStreamGrade.OptionalCourseGroup_Id))) JOIN zlmsadmin.ADM_CourseDef ON zlmsadmin.ADM_CourseDefStreamGrade.CourseDef_Id = zlmsadmin.ADM_CourseDef.CourseDef_Id JOIN zlmsadmin.ADM_AcademicYear ON zlmsadmin.ADM_EduScenario.AcademicYear_Id = zlmsadmin.ADM_AcademicYear.AcademicYear_Id LEFT OUTER JOIN zmedcommon.COMM_NoteHistory ON zlmsadmin.ADM_ScenarioSelection.NoteHistory_Id = zmedcommon.COMM_NoteHistory.NoteHistory_Id LEFT OUTER JOIN zmedcommon.COMM_Note ON zmedcommon.COMM_NoteHistory.NoteHistory_Id = zmedcommon.COMM_Note.NoteHistory_Id WHERE ((((zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198871) AND (zlmsadmin.ADM_Enrollment.School_Id IN(838))) AND (zlmsadmin.ADM_ScenarioSelection.ExitDate IS NULL) AND (zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment = 1)) AND (((zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (zmedcommon.COMM_ApplicationFormState.IsCurrent = 1) AND (zmedcommon.COMM_WorkflowState.StateCode <> 0)) OR (zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NULL)));
20240806 11:59:23.262 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:23.262 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:23.262 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0007 - Allocated=10, Used=1
20240806 11:59:23.262 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0007 - SELECT ADM_ScenarioSelection.ScenarioSelection_Id, ADM_ScenarioSelection.EduScenario_Id, ADM_ScenarioSelection.ApplicationForm_Id, ADM_ScenarioSelection.Enrollment_Id, ADM_ScenarioSelection.SelectionStatus, ADM_ScenarioSelection.JoiningDate, ADM_ScenarioSelection.ExitDate, ADM_ScenarioSelection.UserStamp, ADM_ScenarioSelection.TimeStamp, ADM_ScenarioSelection.NoteHistory_Id, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.ScenarioSelection_Id, ADM_SelectionDetails.EduScenarioOptionalGrp_Id, ADM_SelectionDetails.CourseDefCode, ADM_SelectionDetails.NumberOfPeriods, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp, ADM_Enrollment.Enrollment_Id, ADM_Enrollment.School_Id, ADM_Enrollment.Student_Id, ADM_Enrollment.Session_Id, ADM_Enrollment.StreamGrade_Id, ADM_Enrollment.Community_Id, ADM_Enrollment.EnrollmentType, ADM_Enrollment.EntryType, ADM_Enrollment.EntryDate, ADM_Enrollment.TransferFromSchool_Id, ADM_Enrollment.TransferToSchool_Id, ADM_Enrollment.ExitType, ADM_Enrollment.ExitReason, ADM_Enrollment.ExitDate, ADM_Enrollment.Note, ADM_Enrollment.IsSpecialNeed, ADM_Enrollment.ExternalId, ADM_Enrollment.UserStamp, ADM_Enrollment.TimeStamp, ADM_Enrollment.RegistrationStatus, ADM_Enrollment.TransferFromEnrollment_Id, ADM_Enrollment.TransferToCommunity_Id, ADM_Enrollment.IsYearActiveEnrollment, ADM_Enrollment.RecomputePassFail, ADM_Enrollment.MandatoryEducation, ADM_Enrollment.IsWaitingList, ADM_Enrollment.CreateTimeStamp, ADM_Enrollment.IsNotOfficialEnrollment, ADM_Enrollment.UserNote, ADM_Enrollment.DeleteType, ADM_Enrollment.IsDeleted, ADM_Enrollment.CreationUser_Id, COMM_ApplicationForm.ApplicationForm_Id, COMM_ApplicationForm.ApplicationFormNumber, COMM_ApplicationForm.ApplicationDate, COMM_ApplicationForm.Applicant_Id, COMM_ApplicationForm.Workflow_Id, COMM_ApplicationForm.ApplicationFormType, COMM_ApplicationForm.Note, COMM_ApplicationForm.TimeStamp, COMM_ApplicationForm.UserStamp, REG_StudentRegistration.StudentRegistration_Id, REG_StudentRegistration.ApplicationForm_Id, REG_StudentRegistration.Student_Id, REG_StudentRegistration.AcademicYear_Id, REG_StudentRegistration.EducationPath_Id, REG_StudentRegistration.Enrollment_Id, REG_StudentRegistration.EducationType, REG_StudentRegistration.EducationFocus, REG_StudentRegistration.StreamGrade, REG_StudentRegistration.School_Id, REG_StudentRegistration.IsTransportRequired, REG_StudentRegistration.ExamTime, REG_StudentRegistration.ExamScore, REG_StudentRegistration.InterviewTime, REG_StudentRegistration.DocumentList_Id, REG_StudentRegistration.CitizenshipStatus, REG_StudentRegistration.ParentWorkPlace, REG_StudentRegistration.IsSpecialNeed, REG_StudentRegistration.TimeStamp, REG_StudentRegistration.UserStamp, REG_StudentRegistration.InCatchmentArea, REG_StudentRegistration.ProgramCategory_Id, COMM_Workflow.Workflow_Id, COMM_Workflow.Name, COMM_Workflow.Code, COMM_Workflow.Note, COMM_ApplicationFormState.ApplicationFormState_Id, COMM_ApplicationFormState.WorkflowState_Id, COMM_ApplicationFormState.PrevWorkflowState_Id, COMM_ApplicationFormState.StateStartDate, COMM_ApplicationFormState.StateEndDate, COMM_ApplicationFormState.PerformedByUser_Id, COMM_ApplicationFormState.AttributeList_Id, COMM_ApplicationFormState.ApplicationForm_Id, COMM_ApplicationFormState.IsCurrent, COMM_ApplicationFormState.Note, COMM_ApplicationFormState.TimeStamp, COMM_ApplicationFormState.UserStamp, COMM_WorkflowState.WorkflowState_Id, COMM_WorkflowState.Workflow_Id, COMM_WorkflowState.Name, COMM_WorkflowState.StateCode, COMM_WorkflowState.Note, ADM_Student.Student_Id, ADM_Student.StudentNumber, ADM_Student.CreationDate, ADM_Student.CreationUser_Id, ADM_Student.UserStamp, ADM_Student.TimeStamp, ADM_Student.IsDeleted, ADM_Student.AttributeList_Id, ADM_Student.CitizenshipStatus, COMM_Person.Person_Id, COMM_Person.Civility, COMM_Person.IDNumber, COMM_Person.FirstName, COMM_Person.SecondName, COMM_Person.ThirdName, COMM_Person.FourthName, COMM_Person.FamilyName, COMM_Person.EnglishFirstName, COMM_Person.EnglishSecondName, COMM_Person.EnglishThirdName, COMM_Person.EnglishFourthName, COMM_Person.EnglishFamilyName, COMM_Person.BirthName, COMM_Person.BirthDate, COMM_Person.BirthCity, COMM_Person.EnglishBirthCity, COMM_Person.BirthCountry, COMM_Person.Nationality, COMM_Person.Gender, COMM_Person.MaritalStatus, COMM_Person.Photo_Id, COMM_Person.Religion, COMM_Person.ReligionSector, COMM_Person.PhoneList_Id, COMM_Person.AddressList_Id, COMM_Person.OtherIdList_Id, COMM_Person.IsDeleted, COMM_Person.ExternalId, COMM_Person.UserStamp, COMM_Person.TimeStamp, COMM_Person.User_Id, COMM_Person.InformationSource, COMM_Person.LastSyncTime, COMM_Person.IsTemporary, COMM_Person.VStartDate, COMM_PhoneList.PhoneList_Id, COMM_Phone.Phone_Id, COMM_Phone.PhoneList_Id, COMM_Phone.Name, COMM_Phone.Value, COMM_Phone.Note, COMM_Phone.IsPrivate, COMM_Phone.IsPrimary, COMM_Phone.ContactType, ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, ADM_EduScenarioOptionalGrp.EduScenario_Id, ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, ADM_EduScenarioOptionalGrp.CourseDefCodes, ADM_EduScenarioOptionalGrp.NumberOfPeriods, ADM_EduScenarioOptionalGrp.type, ADM_OptionalCourseGroup.OptionalCourseGroup_Id, ADM_OptionalCourseGroup.Name, ADM_OptionalCourseGroup.MinimumSelectedCourse, ADM_OptionalCourseGroup.MaximumSelectedCourse, ADM_OptionalCourseGroup.IsSelectedByStudent, ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, ADM_EduScenarioStreamGrade.EduScenario_Id, ADM_EduScenarioStreamGrade.EducationType, ADM_EduScenarioStreamGrade.EducationPath_Id, ADM_EduScenarioStreamGrade.EducationFocus, ADM_EduScenarioStreamGrade.StreamGrade, ADM_StreamGrade.StreamGrade_Id, ADM_StreamGrade.Name, ADM_StreamGrade.Title, ADM_StreamGrade.Grade_Id, ADM_Grade.Grade_Id, ADM_Grade.EducationPathDef_Id, ADM_Grade.Name, ADM_Grade.Title, ADM_Grade.Position, ADM_Grade.SchoolLevel, ADM_Grade.MinAge, ADM_Grade.MinSpAge, ADM_Grade.MaxAge, ADM_Grade.MaxSpAge, ADM_Grade.MinAgeMargin, ADM_Grade.MinAgeMarginUnit, ADM_Grade.MaxAgeMargin, ADM_Grade.MaxAgeMarginUnit, ADM_Grade.CapacityGroup, ADM_Grade.MinAgeMargin2, ADM_Grade.MinAgeMarginUnit2, ADM_Grade.MaxAgeMargin2, ADM_Grade.MaxAgeMarginUnit2, ADM_Grade.ExternalId, ADM_Grade.CommunityTitlePrefix, ADM_Grade.AgeReferenceDate, ADM_Grade.VStartDate, ADM_Grade.UserStamp, ADM_Grade.TimeStamp, ADM_EducationPathDef.EducationPathDef_Id, ADM_EducationPathDef.EducationPath_Id, ADM_EducationPathDef.StartDate, ADM_EducationPathDef.EndDate, ADM_EducationPathDef.IsActive, ADM_EducationPathDef.EducationType, ADM_EducationPathDef.EducationFocus, ADM_SessionDef.SessionDef_Id, ADM_SessionDef.EducationPathDef_Id, ADM_SessionDef.Title, ADM_SessionDef.SessionType, ADM_SessionDef.Duration, ADM_SessionDef.DurationUnit, ADM_SessionDef.Parent_Id, ADM_SessionDef.Position, ADM_Session.Session_Id, ADM_Session.AcademicYear_Id, ADM_Session.SessionDef_Id, ADM_Session.Title, ADM_Session.Parent_Id, ADM_Session.StartDate, ADM_Session.EndDate, ADM_Session.Position, ADM_Session.UserStamp, ADM_Session.TimeStamp, ADM_CourseDefStreamGrade.CourseDefStreamGrade_Id, ADM_CourseDefStreamGrade.CourseDef_Id, ADM_CourseDefStreamGrade.StreamGrade_Id, ADM_CourseDefStreamGrade.IsOptional, ADM_CourseDefStreamGrade.OptionalCourseGroup_Id, ADM_CourseDef.CourseDef_Id, ADM_CourseDef.EducationPathDef_Id, ADM_CourseDef.SessionDef_Id, ADM_CourseDef.TeachingSubject, ADM_CourseDef.TeachingLanguage, ADM_CourseDef.Title, ADM_CourseDef.NumberOfPeriods, ADM_CourseDef.NumberOfPeriodsPerWeek, ADM_CourseDef.PeriodDuration, ADM_CourseDef.PeriodDurationUnit, ADM_CourseDef.SlotColor, ADM_CourseDef.StudentGender, ADM_CourseDef.IsAcademic, ADM_CourseDef.Code, ADM_CourseDef.Position, ADM_CourseDef.CourseWeight, ADM_CourseDef.PassScore, ADM_CourseDef.OtherTitle, ADM_CourseDef.isTermBasedCourse, ADM_CourseDef.Department, ADM_CourseDef.UserStamp, ADM_CourseDef.TimeStamp, ADM_AcademicYear.AcademicYear_Id, ADM_AcademicYear.Title, ADM_AcademicYear.IsCurrent, ADM_AcademicYear.Status, ADM_AcademicYear.POSITION, COMM_NoteHistory.NoteHistory_Id, COMM_Note.Note_Id, COMM_Note.NoteHistory_Id, COMM_Note.Text, COMM_Note.User_Id, COMM_Note.NoteDate, COMM_Note.Status, COMM_Note.UserStamp, COMM_Note.TimeStamp FROM ADM_ScenarioSelection JOIN ADM_SelectionDetails ON (ADM_ScenarioSelection.ScenarioSelection_Id = ADM_SelectionDetails.ScenarioSelection_Id) JOIN ADM_Enrollment ON ((ADM_Enrollment.IsDeleted = 0)) AND ((ADM_ScenarioSelection.Enrollment_Id = ADM_Enrollment.Enrollment_Id)) LEFT OUTER JOIN COMM_ApplicationForm ON (ADM_ScenarioSelection.ApplicationForm_Id = COMM_ApplicationForm.ApplicationForm_Id) LEFT OUTER JOIN REG_StudentRegistration ON (COMM_ApplicationForm.ApplicationForm_Id = REG_StudentRegistration.ApplicationForm_Id) LEFT OUTER JOIN COMM_Workflow ON (COMM_ApplicationForm.Workflow_Id = COMM_Workflow.Workflow_Id) LEFT OUTER JOIN COMM_ApplicationFormState ON (COMM_ApplicationForm.ApplicationForm_Id = COMM_ApplicationFormState.ApplicationForm_Id) LEFT OUTER JOIN COMM_WorkflowState ON (COMM_ApplicationFormState.WorkflowState_Id = COMM_WorkflowState.WorkflowState_Id) JOIN ADM_Student ON ((ADM_Student.IsDeleted = 0)) AND ((ADM_Enrollment.Student_Id = ADM_Student.Student_Id)) JOIN COMM_Person ON ((COMM_Person.IsDeleted = 0)) AND ((ADM_Student.Student_Id = COMM_Person.Person_Id)) JOIN COMM_PhoneList ON (COMM_Person.PhoneList_Id = COMM_PhoneList.PhoneList_Id) JOIN COMM_Phone ON (COMM_PhoneList.PhoneList_Id = COMM_Phone.PhoneList_Id) JOIN ADM_EduScenario ON (ADM_ScenarioSelection.EduScenario_Id = ADM_EduScenario.EduScenario_Id) JOIN ADM_EduScenarioOptionalGrp ON (ADM_SelectionDetails.EduScenarioOptionalGrp_Id = ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id) JOIN ADM_OptionalCourseGroup ON (ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = ADM_OptionalCourseGroup.OptionalCourseGroup_Id) JOIN ADM_EduScenarioStreamGrade ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioStreamGrade.EduScenario_Id) JOIN ADM_StreamGrade ON (ADM_EduScenarioStreamGrade.StreamGrade = ADM_StreamGrade.Name) JOIN ADM_Grade ON (ADM_StreamGrade.Grade_Id = ADM_Grade.Grade_Id) JOIN ADM_EducationPathDef ON (((ADM_EducationPathDef.EducationPath_Id = ADM_EduScenarioStreamGrade.EducationPath_Id) AND (ADM_EduScenarioStreamGrade.EducationFocus = ADM_EducationPathDef.EducationFocus)) AND (ADM_EduScenarioStreamGrade.EducationType = ADM_EducationPathDef.EducationType)) JOIN ADM_SessionDef ON (ADM_EducationPathDef.EducationPathDef_Id = ADM_SessionDef.EducationPathDef_Id) JOIN ADM_Session ON ((ADM_SessionDef.SessionDef_Id = ADM_Session.SessionDef_Id) AND (((ADM_Session.AcademicYear_Id = ADM_EduScenario.AcademicYear_Id) AND (ADM_Grade.EducationPathDef_Id = ADM_EducationPathDef.EducationPathDef_Id)) AND (ADM_Session.Parent_Id IS NULL))) JOIN ADM_CourseDefStreamGrade ON ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND (ADM_OptionalCourseGroup.OptionalCourseGroup_Id = ADM_CourseDefStreamGrade.OptionalCourseGroup_Id))) JOIN ADM_CourseDef ON (ADM_CourseDefStreamGrade.CourseDef_Id = ADM_CourseDef.CourseDef_Id) JOIN ADM_AcademicYear ON (ADM_EduScenario.AcademicYear_Id = ADM_AcademicYear.AcademicYear_Id) LEFT OUTER JOIN COMM_NoteHistory ON (ADM_ScenarioSelection.NoteHistory_Id = COMM_NoteHistory.NoteHistory_Id) LEFT OUTER JOIN COMM_Note ON (COMM_NoteHistory.NoteHistory_Id = COMM_Note.NoteHistory_Id) WHERE (((((ADM_EduScenario.EduScenario_Id = ?) AND (ADM_Enrollment.School_Id IN(?))) AND (ADM_ScenarioSelection.ExitDate IS NULL)) AND (ADM_Enrollment.IsYearActiveEnrollment = ?)) AND ((((COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (COMM_ApplicationFormState.IsCurrent = ?)) AND (COMM_WorkflowState.StateCode <> ?)) OR (COMM_ApplicationForm.ApplicationForm_Id IS NULL)))
20240806 11:59:23.263 006E =FUN= [ZQL.PhysicalConnection] Parameters: 622198871, 838, 1, 1, 0
20240806 11:59:23.263 006E =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:23.365 006E =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:23.368 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:23.573 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0007
20240806 11:59:23.573 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 275 columns, 625 rows
20240806 11:59:23.573 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0007
20240806 11:59:23.573 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0007
20240806 11:59:23.573 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:23.573 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:23.573 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.dbag.DBag.load
20240806 11:59:23.574 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.dbag.DBag.load
20240806 11:59:23.574 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id, zlmsadmin.ADM_ScenarioSelection.EduScenario_Id, zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id, zlmsadmin.ADM_ScenarioSelection.Enrollment_Id, zlmsadmin.ADM_ScenarioSelection.SelectionStatus, zlmsadmin.ADM_ScenarioSelection.JoiningDate, zlmsadmin.ADM_ScenarioSelection.ExitDate, zlmsadmin.ADM_ScenarioSelection.UserStamp, zlmsadmin.ADM_ScenarioSelection.TimeStamp, zlmsadmin.ADM_ScenarioSelection.NoteHistory_Id,zlmsadmin.ADM_Enrollment.Enrollment_Id, zlmsadmin.ADM_Enrollment.School_Id, zlmsadmin.ADM_Enrollment.Student_Id, zlmsadmin.ADM_Enrollment.Session_Id, zlmsadmin.ADM_Enrollment.StreamGrade_Id, zlmsadmin.ADM_Enrollment.Community_Id, zlmsadmin.ADM_Enrollment.EnrollmentType, zlmsadmin.ADM_Enrollment.EntryType, zlmsadmin.ADM_Enrollment.EntryDate, zlmsadmin.ADM_Enrollment.TransferFromSchool_Id, zlmsadmin.ADM_Enrollment.TransferToSchool_Id, zlmsadmin.ADM_Enrollment.ExitType, zlmsadmin.ADM_Enrollment.ExitReason, zlmsadmin.ADM_Enrollment.ExitDate, zlmsadmin.ADM_Enrollment.Note, zlmsadmin.ADM_Enrollment.IsSpecialNeed, zlmsadmin.ADM_Enrollment.ExternalId, zlmsadmin.ADM_Enrollment.UserStamp, zlmsadmin.ADM_Enrollment.TimeStamp, zlmsadmin.ADM_Enrollment.RegistrationStatus, zlmsadmin.ADM_Enrollment.TransferFromEnrollment_Id, zlmsadmin.ADM_Enrollment.TransferToCommunity_Id, zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment, zlmsadmin.ADM_Enrollment.RecomputePassFail, zlmsadmin.ADM_Enrollment.MandatoryEducation, zlmsadmin.ADM_Enrollment.IsWaitingList, zlmsadmin.ADM_Enrollment.CreateTimeStamp, zlmsadmin.ADM_Enrollment.IsNotOfficialEnrollment, zlmsadmin.ADM_Enrollment.UserNote, zlmsadmin.ADM_Enrollment.DeleteType, zlmsadmin.ADM_Enrollment.IsDeleted, zlmsadmin.ADM_Enrollment.CreationUser_Id,zlmsadmin.ADM_Student.Student_Id, zlmsadmin.ADM_Student.StudentNumber, zlmsadmin.ADM_Student.CreationDate, zlmsadmin.ADM_Student.CreationUser_Id, zlmsadmin.ADM_Student.UserStamp, zlmsadmin.ADM_Student.TimeStamp, zlmsadmin.ADM_Student.IsDeleted, zlmsadmin.ADM_Student.AttributeList_Id, zlmsadmin.ADM_Student.CitizenshipStatus,zlmsadmin.ADM_Session.Session_Id, zlmsadmin.ADM_Session.AcademicYear_Id, zlmsadmin.ADM_Session.SessionDef_Id, zlmsadmin.ADM_Session.Title, zlmsadmin.ADM_Session.Parent_Id, zlmsadmin.ADM_Session.StartDate, zlmsadmin.ADM_Session.EndDate, zlmsadmin.ADM_Session.Position, zlmsadmin.ADM_Session.UserStamp, zlmsadmin.ADM_Session.TimeStamp,zlmsadmin.ADM_AcademicYear.AcademicYear_Id, zlmsadmin.ADM_AcademicYear.Title, zlmsadmin.ADM_AcademicYear.IsCurrent, zlmsadmin.ADM_AcademicYear.Status, zlmsadmin.ADM_AcademicYear.POSITION,zmedcommon.COMM_Person.Person_Id, zmedcommon.COMM_Person.Civility, zmedcommon.COMM_Person.IDNumber, zmedcommon.COMM_Person.FirstName, zmedcommon.COMM_Person.SecondName, zmedcommon.COMM_Person.ThirdName, zmedcommon.COMM_Person.FourthName, zmedcommon.COMM_Person.FamilyName, zmedcommon.COMM_Person.EnglishFirstName, zmedcommon.COMM_Person.EnglishSecondName, zmedcommon.COMM_Person.EnglishThirdName, zmedcommon.COMM_Person.EnglishFourthName, zmedcommon.COMM_Person.EnglishFamilyName, zmedcommon.COMM_Person.BirthName, zmedcommon.COMM_Person.BirthDate, zmedcommon.COMM_Person.BirthCity, zmedcommon.COMM_Person.EnglishBirthCity, zmedcommon.COMM_Person.BirthCountry, zmedcommon.COMM_Person.Nationality, zmedcommon.COMM_Person.Gender, zmedcommon.COMM_Person.MaritalStatus, zmedcommon.COMM_Person.Photo_Id, zmedcommon.COMM_Person.Religion, zmedcommon.COMM_Person.ReligionSector, zmedcommon.COMM_Person.PhoneList_Id, zmedcommon.COMM_Person.AddressList_Id, zmedcommon.COMM_Person.OtherIdList_Id, zmedcommon.COMM_Person.IsDeleted, zmedcommon.COMM_Person.ExternalId, zmedcommon.COMM_Person.UserStamp, zmedcommon.COMM_Person.TimeStamp, zmedcommon.COMM_Person.User_Id, zmedcommon.COMM_Person.InformationSource, zmedcommon.COMM_Person.LastSyncTime, zmedcommon.COMM_Person.IsTemporary, zmedcommon.COMM_Person.VStartDate,zmedcommon.COMM_PhoneList.PhoneList_Id,zmedcommon.COMM_Phone.Phone_Id, zmedcommon.COMM_Phone.PhoneList_Id, zmedcommon.COMM_Phone.Name, zmedcommon.COMM_Phone.Value, zmedcommon.COMM_Phone.Note, zmedcommon.COMM_Phone.IsPrivate, zmedcommon.COMM_Phone.IsPrimary, zmedcommon.COMM_Phone.ContactType,zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_SelectionDetails.SelectionDetails_Id, zlmsadmin.ADM_SelectionDetails.ScenarioSelection_Id, zlmsadmin.ADM_SelectionDetails.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_SelectionDetails.CourseDefCode, zlmsadmin.ADM_SelectionDetails.NumberOfPeriods, zlmsadmin.ADM_SelectionDetails.UserStamp, zlmsadmin.ADM_SelectionDetails.TimeStamp,zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.CourseDefCodes, zlmsadmin.ADM_EduScenarioOptionalGrp.NumberOfPeriods, zlmsadmin.ADM_EduScenarioOptionalGrp.type,zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id, zlmsadmin.ADM_OptionalCourseGroup.Name, zlmsadmin.ADM_OptionalCourseGroup.MinimumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.MaximumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.IsSelectedByStudent,zlmsadmin.ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationType, zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus, zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade,zlmsadmin.ADM_StreamGrade.StreamGrade_Id, zlmsadmin.ADM_StreamGrade.Name, zlmsadmin.ADM_StreamGrade.Title, zlmsadmin.ADM_StreamGrade.Grade_Id,zlmsadmin.ADM_Grade.Grade_Id, zlmsadmin.ADM_Grade.EducationPathDef_Id, zlmsadmin.ADM_Grade.Name, zlmsadmin.ADM_Grade.Title, zlmsadmin.ADM_Grade.Position, zlmsadmin.ADM_Grade.SchoolLevel, zlmsadmin.ADM_Grade.MinAge, zlmsadmin.ADM_Grade.MinSpAge, zlmsadmin.ADM_Grade.MaxAge, zlmsadmin.ADM_Grade.MaxSpAge, zlmsadmin.ADM_Grade.MinAgeMargin, zlmsadmin.ADM_Grade.MinAgeMarginUnit, zlmsadmin.ADM_Grade.MaxAgeMargin, zlmsadmin.ADM_Grade.MaxAgeMarginUnit, zlmsadmin.ADM_Grade.CapacityGroup, zlmsadmin.ADM_Grade.MinAgeMargin2, zlmsadmin.ADM_Grade.MinAgeMarginUnit2, zlmsadmin.ADM_Grade.MaxAgeMargin2, zlmsadmin.ADM_Grade.MaxAgeMarginUnit2, zlmsadmin.ADM_Grade.ExternalId, zlmsadmin.ADM_Grade.CommunityTitlePrefix, zlmsadmin.ADM_Grade.AgeReferenceDate, zlmsadmin.ADM_Grade.VStartDate, zlmsadmin.ADM_Grade.UserStamp, zlmsadmin.ADM_Grade.TimeStamp,zlmsadmin.ADM_CourseDefStreamGrade.CourseDefStreamGrade_Id, zlmsadmin.ADM_CourseDefStreamGrade.CourseDef_Id, zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id, zlmsadmin.ADM_CourseDefStreamGrade.IsOptional, zlmsadmin.ADM_CourseDefStreamGrade.OptionalCourseGroup_Id,zlmsadmin.ADM_CourseDef.CourseDef_Id, zlmsadmin.ADM_CourseDef.EducationPathDef_Id, zlmsadmin.ADM_CourseDef.SessionDef_Id, zlmsadmin.ADM_CourseDef.TeachingSubject, zlmsadmin.ADM_CourseDef.TeachingLanguage, zlmsadmin.ADM_CourseDef.Title, zlmsadmin.ADM_CourseDef.NumberOfPeriods, zlmsadmin.ADM_CourseDef.NumberOfPeriodsPerWeek, zlmsadmin.ADM_CourseDef.PeriodDuration, zlmsadmin.ADM_CourseDef.PeriodDurationUnit, zlmsadmin.ADM_CourseDef.SlotColor, zlmsadmin.ADM_CourseDef.StudentGender, zlmsadmin.ADM_CourseDef.IsAcademic, zlmsadmin.ADM_CourseDef.Code, zlmsadmin.ADM_CourseDef.Position, zlmsadmin.ADM_CourseDef.CourseWeight, zlmsadmin.ADM_CourseDef.PassScore, zlmsadmin.ADM_CourseDef.OtherTitle, zlmsadmin.ADM_CourseDef.isTermBasedCourse, zlmsadmin.ADM_CourseDef.Department, zlmsadmin.ADM_CourseDef.UserStamp, zlmsadmin.ADM_CourseDef.TimeStamp,zmedcommon.COMM_ApplicationForm.ApplicationForm_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormNumber, zmedcommon.COMM_ApplicationForm.ApplicationDate, zmedcommon.COMM_ApplicationForm.Applicant_Id, zmedcommon.COMM_ApplicationForm.Workflow_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormType, zmedcommon.COMM_ApplicationForm.Note, zmedcommon.COMM_ApplicationForm.TimeStamp, zmedcommon.COMM_ApplicationForm.UserStamp,zlmsregistration.REG_StudentRegistration.StudentRegistration_Id, zlmsregistration.REG_StudentRegistration.ApplicationForm_Id, zlmsregistration.REG_StudentRegistration.Student_Id, zlmsregistration.REG_StudentRegistration.AcademicYear_Id, zlmsregistration.REG_StudentRegistration.EducationPath_Id, zlmsregistration.REG_StudentRegistration.Enrollment_Id, zlmsregistration.REG_StudentRegistration.EducationType, zlmsregistration.REG_StudentRegistration.EducationFocus, zlmsregistration.REG_StudentRegistration.StreamGrade, zlmsregistration.REG_StudentRegistration.School_Id, zlmsregistration.REG_StudentRegistration.IsTransportRequired, zlmsregistration.REG_StudentRegistration.ExamTime, zlmsregistration.REG_StudentRegistration.ExamScore, zlmsregistration.REG_StudentRegistration.InterviewTime, zlmsregistration.REG_StudentRegistration.DocumentList_Id, zlmsregistration.REG_StudentRegistration.CitizenshipStatus, zlmsregistration.REG_StudentRegistration.ParentWorkPlace, zlmsregistration.REG_StudentRegistration.IsSpecialNeed, zlmsregistration.REG_StudentRegistration.TimeStamp, zlmsregistration.REG_StudentRegistration.UserStamp, zlmsregistration.REG_StudentRegistration.InCatchmentArea, zlmsregistration.REG_StudentRegistration.ProgramCategory_Id,zmedcommon.COMM_Workflow.Workflow_Id, zmedcommon.COMM_Workflow.Name, zmedcommon.COMM_Workflow.Code, zmedcommon.COMM_Workflow.Note,zmedcommon.COMM_ApplicationFormState.ApplicationFormState_Id, zmedcommon.COMM_ApplicationFormState.WorkflowState_Id, zmedcommon.COMM_ApplicationFormState.PrevWorkflowState_Id, zmedcommon.COMM_ApplicationFormState.StateStartDate, zmedcommon.COMM_ApplicationFormState.StateEndDate, zmedcommon.COMM_ApplicationFormState.PerformedByUser_Id, zmedcommon.COMM_ApplicationFormState.AttributeList_Id, zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id, zmedcommon.COMM_ApplicationFormState.IsCurrent, zmedcommon.COMM_ApplicationFormState.Note, zmedcommon.COMM_ApplicationFormState.TimeStamp, zmedcommon.COMM_ApplicationFormState.UserStamp,zmedcommon.COMM_WorkflowState.WorkflowState_Id, zmedcommon.COMM_WorkflowState.Workflow_Id, zmedcommon.COMM_WorkflowState.Name, zmedcommon.COMM_WorkflowState.StateCode, zmedcommon.COMM_WorkflowState.Note FROM zlmsadmin.ADM_ScenarioSelection JOIN zlmsadmin.ADM_Enrollment! ON zlmsadmin.ADM_ScenarioSelection.Enrollment_Id = zlmsadmin.ADM_Enrollment.Enrollment_Id JOIN zlmsadmin.ADM_Student! ON zlmsadmin.ADM_Enrollment.Student_Id = zlmsadmin.ADM_Student.Student_Id JOIN zlmsadmin.ADM_Session ON zlmsadmin.ADM_Enrollment.Session_Id = zlmsadmin.ADM_Session.Session_Id JOIN zlmsadmin.ADM_AcademicYear ON zlmsadmin.ADM_Session.AcademicYear_Id = zlmsadmin.ADM_AcademicYear.AcademicYear_Id JOIN zmedcommon.COMM_Person! ON (zlmsadmin.ADM_Student.Student_Id = zmedcommon.COMM_Person.Person_Id) JOIN zmedcommon.COMM_PhoneList ON zmedcommon.COMM_Person.PhoneList_Id = zmedcommon.COMM_PhoneList.PhoneList_Id JOIN zmedcommon.COMM_Phone ON zmedcommon.COMM_PhoneList.PhoneList_Id = zmedcommon.COMM_Phone.PhoneList_Id JOIN zlmsadmin.ADM_EduScenario ON zlmsadmin.ADM_ScenarioSelection.EduScenario_Id = zlmsadmin.ADM_EduScenario.EduScenario_Id LEFT OUTER JOIN zlmsadmin.ADM_SelectionDetails ON zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id = zlmsadmin.ADM_SelectionDetails.ScenarioSelection_Id JOIN zlmsadmin.ADM_EduScenarioOptionalGrp ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id JOIN zlmsadmin.ADM_OptionalCourseGroup ON zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id JOIN zlmsadmin.ADM_EduScenarioStreamGrade ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id JOIN zlmsadmin.ADM_StreamGrade ON (zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade = zlmsadmin.ADM_StreamGrade.Name) JOIN zlmsadmin.ADM_Grade ON zlmsadmin.ADM_StreamGrade.Grade_Id = zlmsadmin.ADM_Grade.Grade_Id JOIN zlmsadmin.ADM_CourseDefStreamGrade ON zlmsadmin.ADM_StreamGrade.StreamGrade_Id = zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id AND (((zlmsadmin.ADM_StreamGrade.StreamGrade_Id = zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id) AND (zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id = zlmsadmin.ADM_CourseDefStreamGrade.OptionalCourseGroup_Id))) JOIN zlmsadmin.ADM_CourseDef ON zlmsadmin.ADM_CourseDefStreamGrade.CourseDef_Id = zlmsadmin.ADM_CourseDef.CourseDef_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationForm ON zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id = zmedcommon.COMM_ApplicationForm.ApplicationForm_Id LEFT OUTER JOIN zlmsregistration.REG_StudentRegistration ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zlmsregistration.REG_StudentRegistration.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_Workflow ON zmedcommon.COMM_ApplicationForm.Workflow_Id = zmedcommon.COMM_Workflow.Workflow_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationFormState ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_WorkflowState ON zmedcommon.COMM_ApplicationFormState.WorkflowState_Id = zmedcommon.COMM_WorkflowState.WorkflowState_Id WHERE ((((zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198871) AND (zlmsadmin.ADM_Enrollment.School_Id IN(838))) AND (zlmsadmin.ADM_ScenarioSelection.ExitDate IS NULL) AND (zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment = 1)) AND (((zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (zmedcommon.COMM_ApplicationFormState.IsCurrent = 1) AND (zmedcommon.COMM_WorkflowState.StateCode <> 0)) OR (zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NULL)) AND (zlmsadmin.ADM_SelectionDetails.SelectionDetails_Id IS NULL));
20240806 11:59:23.589 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:23.589 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:23.590 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0012 - Allocated=10, Used=1
20240806 11:59:23.590 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0012 - SELECT ADM_ScenarioSelection.ScenarioSelection_Id, ADM_ScenarioSelection.EduScenario_Id, ADM_ScenarioSelection.ApplicationForm_Id, ADM_ScenarioSelection.Enrollment_Id, ADM_ScenarioSelection.SelectionStatus, ADM_ScenarioSelection.JoiningDate, ADM_ScenarioSelection.ExitDate, ADM_ScenarioSelection.UserStamp, ADM_ScenarioSelection.TimeStamp, ADM_ScenarioSelection.NoteHistory_Id, ADM_Enrollment.Enrollment_Id, ADM_Enrollment.School_Id, ADM_Enrollment.Student_Id, ADM_Enrollment.Session_Id, ADM_Enrollment.StreamGrade_Id, ADM_Enrollment.Community_Id, ADM_Enrollment.EnrollmentType, ADM_Enrollment.EntryType, ADM_Enrollment.EntryDate, ADM_Enrollment.TransferFromSchool_Id, ADM_Enrollment.TransferToSchool_Id, ADM_Enrollment.ExitType, ADM_Enrollment.ExitReason, ADM_Enrollment.ExitDate, ADM_Enrollment.Note, ADM_Enrollment.IsSpecialNeed, ADM_Enrollment.ExternalId, ADM_Enrollment.UserStamp, ADM_Enrollment.TimeStamp, ADM_Enrollment.RegistrationStatus, ADM_Enrollment.TransferFromEnrollment_Id, ADM_Enrollment.TransferToCommunity_Id, ADM_Enrollment.IsYearActiveEnrollment, ADM_Enrollment.RecomputePassFail, ADM_Enrollment.MandatoryEducation, ADM_Enrollment.IsWaitingList, ADM_Enrollment.CreateTimeStamp, ADM_Enrollment.IsNotOfficialEnrollment, ADM_Enrollment.UserNote, ADM_Enrollment.DeleteType, ADM_Enrollment.IsDeleted, ADM_Enrollment.CreationUser_Id, ADM_Student.Student_Id, ADM_Student.StudentNumber, ADM_Student.CreationDate, ADM_Student.CreationUser_Id, ADM_Student.UserStamp, ADM_Student.TimeStamp, ADM_Student.IsDeleted, ADM_Student.AttributeList_Id, ADM_Student.CitizenshipStatus, ADM_Session.Session_Id, ADM_Session.AcademicYear_Id, ADM_Session.SessionDef_Id, ADM_Session.Title, ADM_Session.Parent_Id, ADM_Session.StartDate, ADM_Session.EndDate, ADM_Session.Position, ADM_Session.UserStamp, ADM_Session.TimeStamp, ADM_AcademicYear.AcademicYear_Id, ADM_AcademicYear.Title, ADM_AcademicYear.IsCurrent, ADM_AcademicYear.Status, ADM_AcademicYear.POSITION, COMM_Person.Person_Id, COMM_Person.Civility, COMM_Person.IDNumber, COMM_Person.FirstName, COMM_Person.SecondName, COMM_Person.ThirdName, COMM_Person.FourthName, COMM_Person.FamilyName, COMM_Person.EnglishFirstName, COMM_Person.EnglishSecondName, COMM_Person.EnglishThirdName, COMM_Person.EnglishFourthName, COMM_Person.EnglishFamilyName, COMM_Person.BirthName, COMM_Person.BirthDate, COMM_Person.BirthCity, COMM_Person.EnglishBirthCity, COMM_Person.BirthCountry, COMM_Person.Nationality, COMM_Person.Gender, COMM_Person.MaritalStatus, COMM_Person.Photo_Id, COMM_Person.Religion, COMM_Person.ReligionSector, COMM_Person.PhoneList_Id, COMM_Person.AddressList_Id, COMM_Person.OtherIdList_Id, COMM_Person.IsDeleted, COMM_Person.ExternalId, COMM_Person.UserStamp, COMM_Person.TimeStamp, COMM_Person.User_Id, COMM_Person.InformationSource, COMM_Person.LastSyncTime, COMM_Person.IsTemporary, COMM_Person.VStartDate, COMM_PhoneList.PhoneList_Id, COMM_Phone.Phone_Id, COMM_Phone.PhoneList_Id, COMM_Phone.Name, COMM_Phone.Value, COMM_Phone.Note, COMM_Phone.IsPrivate, COMM_Phone.IsPrimary, COMM_Phone.ContactType, ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.ScenarioSelection_Id, ADM_SelectionDetails.EduScenarioOptionalGrp_Id, ADM_SelectionDetails.CourseDefCode, ADM_SelectionDetails.NumberOfPeriods, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp, ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, ADM_EduScenarioOptionalGrp.EduScenario_Id, ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, ADM_EduScenarioOptionalGrp.CourseDefCodes, ADM_EduScenarioOptionalGrp.NumberOfPeriods, ADM_EduScenarioOptionalGrp.type, ADM_OptionalCourseGroup.OptionalCourseGroup_Id, ADM_OptionalCourseGroup.Name, ADM_OptionalCourseGroup.MinimumSelectedCourse, ADM_OptionalCourseGroup.MaximumSelectedCourse, ADM_OptionalCourseGroup.IsSelectedByStudent, ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, ADM_EduScenarioStreamGrade.EduScenario_Id, ADM_EduScenarioStreamGrade.EducationType, ADM_EduScenarioStreamGrade.EducationPath_Id, ADM_EduScenarioStreamGrade.EducationFocus, ADM_EduScenarioStreamGrade.StreamGrade, ADM_StreamGrade.StreamGrade_Id, ADM_StreamGrade.Name, ADM_StreamGrade.Title, ADM_StreamGrade.Grade_Id, ADM_Grade.Grade_Id, ADM_Grade.EducationPathDef_Id, ADM_Grade.Name, ADM_Grade.Title, ADM_Grade.Position, ADM_Grade.SchoolLevel, ADM_Grade.MinAge, ADM_Grade.MinSpAge, ADM_Grade.MaxAge, ADM_Grade.MaxSpAge, ADM_Grade.MinAgeMargin, ADM_Grade.MinAgeMarginUnit, ADM_Grade.MaxAgeMargin, ADM_Grade.MaxAgeMarginUnit, ADM_Grade.CapacityGroup, ADM_Grade.MinAgeMargin2, ADM_Grade.MinAgeMarginUnit2, ADM_Grade.MaxAgeMargin2, ADM_Grade.MaxAgeMarginUnit2, ADM_Grade.ExternalId, ADM_Grade.CommunityTitlePrefix, ADM_Grade.AgeReferenceDate, ADM_Grade.VStartDate, ADM_Grade.UserStamp, ADM_Grade.TimeStamp, ADM_CourseDefStreamGrade.CourseDefStreamGrade_Id, ADM_CourseDefStreamGrade.CourseDef_Id, ADM_CourseDefStreamGrade.StreamGrade_Id, ADM_CourseDefStreamGrade.IsOptional, ADM_CourseDefStreamGrade.OptionalCourseGroup_Id, ADM_CourseDef.CourseDef_Id, ADM_CourseDef.EducationPathDef_Id, ADM_CourseDef.SessionDef_Id, ADM_CourseDef.TeachingSubject, ADM_CourseDef.TeachingLanguage, ADM_CourseDef.Title, ADM_CourseDef.NumberOfPeriods, ADM_CourseDef.NumberOfPeriodsPerWeek, ADM_CourseDef.PeriodDuration, ADM_CourseDef.PeriodDurationUnit, ADM_CourseDef.SlotColor, ADM_CourseDef.StudentGender, ADM_CourseDef.IsAcademic, ADM_CourseDef.Code, ADM_CourseDef.Position, ADM_CourseDef.CourseWeight, ADM_CourseDef.PassScore, ADM_CourseDef.OtherTitle, ADM_CourseDef.isTermBasedCourse, ADM_CourseDef.Department, ADM_CourseDef.UserStamp, ADM_CourseDef.TimeStamp, COMM_ApplicationForm.ApplicationForm_Id, COMM_ApplicationForm.ApplicationFormNumber, COMM_ApplicationForm.ApplicationDate, COMM_ApplicationForm.Applicant_Id, COMM_ApplicationForm.Workflow_Id, COMM_ApplicationForm.ApplicationFormType, COMM_ApplicationForm.Note, COMM_ApplicationForm.TimeStamp, COMM_ApplicationForm.UserStamp, REG_StudentRegistration.StudentRegistration_Id, REG_StudentRegistration.ApplicationForm_Id, REG_StudentRegistration.Student_Id, REG_StudentRegistration.AcademicYear_Id, REG_StudentRegistration.EducationPath_Id, REG_StudentRegistration.Enrollment_Id, REG_StudentRegistration.EducationType, REG_StudentRegistration.EducationFocus, REG_StudentRegistration.StreamGrade, REG_StudentRegistration.School_Id, REG_StudentRegistration.IsTransportRequired, REG_StudentRegistration.ExamTime, REG_StudentRegistration.ExamScore, REG_StudentRegistration.InterviewTime, REG_StudentRegistration.DocumentList_Id, REG_StudentRegistration.CitizenshipStatus, REG_StudentRegistration.ParentWorkPlace, REG_StudentRegistration.IsSpecialNeed, REG_StudentRegistration.TimeStamp, REG_StudentRegistration.UserStamp, REG_StudentRegistration.InCatchmentArea, REG_StudentRegistration.ProgramCategory_Id, COMM_Workflow.Workflow_Id, COMM_Workflow.Name, COMM_Workflow.Code, COMM_Workflow.Note, COMM_ApplicationFormState.ApplicationFormState_Id, COMM_ApplicationFormState.WorkflowState_Id, COMM_ApplicationFormState.PrevWorkflowState_Id, COMM_ApplicationFormState.StateStartDate, COMM_ApplicationFormState.StateEndDate, COMM_ApplicationFormState.PerformedByUser_Id, COMM_ApplicationFormState.AttributeList_Id, COMM_ApplicationFormState.ApplicationForm_Id, COMM_ApplicationFormState.IsCurrent, COMM_ApplicationFormState.Note, COMM_ApplicationFormState.TimeStamp, COMM_ApplicationFormState.UserStamp, COMM_WorkflowState.WorkflowState_Id, COMM_WorkflowState.Workflow_Id, COMM_WorkflowState.Name, COMM_WorkflowState.StateCode, COMM_WorkflowState.Note FROM ADM_ScenarioSelection JOIN ADM_Enrollment ON ((ADM_Enrollment.IsDeleted = 0)) AND ((ADM_ScenarioSelection.Enrollment_Id = ADM_Enrollment.Enrollment_Id)) JOIN ADM_Student ON ((ADM_Student.IsDeleted = 0)) AND ((ADM_Enrollment.Student_Id = ADM_Student.Student_Id)) JOIN ADM_Session ON (ADM_Enrollment.Session_Id = ADM_Session.Session_Id) JOIN ADM_AcademicYear ON (ADM_Session.AcademicYear_Id = ADM_AcademicYear.AcademicYear_Id) JOIN COMM_Person ON ((COMM_Person.IsDeleted = 0)) AND ((ADM_Student.Student_Id = COMM_Person.Person_Id)) JOIN COMM_PhoneList ON (COMM_Person.PhoneList_Id = COMM_PhoneList.PhoneList_Id) JOIN COMM_Phone ON (COMM_PhoneList.PhoneList_Id = COMM_Phone.PhoneList_Id) JOIN ADM_EduScenario ON (ADM_ScenarioSelection.EduScenario_Id = ADM_EduScenario.EduScenario_Id) LEFT OUTER JOIN ADM_SelectionDetails ON (ADM_ScenarioSelection.ScenarioSelection_Id = ADM_SelectionDetails.ScenarioSelection_Id) JOIN ADM_EduScenarioOptionalGrp ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioOptionalGrp.EduScenario_Id) JOIN ADM_OptionalCourseGroup ON (ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = ADM_OptionalCourseGroup.OptionalCourseGroup_Id) JOIN ADM_EduScenarioStreamGrade ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioStreamGrade.EduScenario_Id) JOIN ADM_StreamGrade ON (ADM_EduScenarioStreamGrade.StreamGrade = ADM_StreamGrade.Name) JOIN ADM_Grade ON (ADM_StreamGrade.Grade_Id = ADM_Grade.Grade_Id) JOIN ADM_CourseDefStreamGrade ON ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND (ADM_OptionalCourseGroup.OptionalCourseGroup_Id = ADM_CourseDefStreamGrade.OptionalCourseGroup_Id))) JOIN ADM_CourseDef ON (ADM_CourseDefStreamGrade.CourseDef_Id = ADM_CourseDef.CourseDef_Id) LEFT OUTER JOIN COMM_ApplicationForm ON (ADM_ScenarioSelection.ApplicationForm_Id = COMM_ApplicationForm.ApplicationForm_Id) LEFT OUTER JOIN REG_StudentRegistration ON (COMM_ApplicationForm.ApplicationForm_Id = REG_StudentRegistration.ApplicationForm_Id) LEFT OUTER JOIN COMM_Workflow ON (COMM_ApplicationForm.Workflow_Id = COMM_Workflow.Workflow_Id) LEFT OUTER JOIN COMM_ApplicationFormState ON (COMM_ApplicationForm.ApplicationForm_Id = COMM_ApplicationFormState.ApplicationForm_Id) LEFT OUTER JOIN COMM_WorkflowState ON (COMM_ApplicationFormState.WorkflowState_Id = COMM_WorkflowState.WorkflowState_Id) WHERE ((((((ADM_EduScenario.EduScenario_Id = ?) AND (ADM_Enrollment.School_Id IN(?))) AND (ADM_ScenarioSelection.ExitDate IS NULL)) AND (ADM_Enrollment.IsYearActiveEnrollment = ?)) AND ((((COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (COMM_ApplicationFormState.IsCurrent = ?)) AND (COMM_WorkflowState.StateCode <> ?)) OR (COMM_ApplicationForm.ApplicationForm_Id IS NULL))) AND (ADM_SelectionDetails.SelectionDetails_Id IS NULL))
20240806 11:59:23.590 006E =FUN= [ZQL.PhysicalConnection] Parameters: 622198871, 838, 1, 1, 0
20240806 11:59:23.591 006E =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:24.231 009C =API= [ZQL.PhysicalConnectionPool] PhysicalConnectionPool: Study: prev max=3, current max=2
20240806 11:59:24.231 009C =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:24.232 009C =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0011 - Allocated=10, Used=2
20240806 11:59:24.232 008C =API= [ZQL.PhysicalConnectionPool] getIdealParameters: Max is now 2, and initial is 3
20240806 11:59:24.281 009C =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0011
20240806 11:59:24.281 009C =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0011
20240806 11:59:24.281 009C =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:24.281 009C =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 11:59:24.709 006E =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:24.710 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:24.748 00C2 =INF= [ZqlServer] : doServerHeartbeatInDb: 170047
20240806 11:59:24.749 00C2 =DBG= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zdeksystem.SYS_Server.Server_Id FROM zdeksystem.SYS_Server WHERE (zdeksystem.SYS_Server.Server_Id = 170047);
20240806 11:59:24.749 00C2 =DBG= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:24.749 00C2 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:24.749 00C2 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0014 - Allocated=10, Used=2
20240806 11:59:24.749 00C2 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0014 - SELECT SYS_Server.Server_Id FROM SYS_Server WHERE (SYS_Server.Server_Id = ?)
20240806 11:59:24.749 00C2 =FUN= [ZQL.PhysicalConnection] Parameters: 170047
20240806 11:59:24.749 00C2 =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:24.781 00C2 =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:24.781 00C2 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:24.781 00C2 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0014
20240806 11:59:24.781 00C2 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.endQuery : 1 columns, 1 rows
20240806 11:59:24.781 00C2 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0014
20240806 11:59:24.782 00C2 =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0014
20240806 11:59:24.782 00C2 =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:24.782 00C2 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 11:59:24.782 00C2 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:24.782 00C2 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0009 - Allocated=10, Used=2
20240806 11:59:24.782 00C2 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0009
20240806 11:59:24.796 00C2 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=1
20240806 11:59:24.796 00C2 =DBG= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.ZqlParser.parseScript : UPDATE zdeksystem.SYS_Server SET LastCallTime = '20240806 11:57:52.950' WHERE Server_Id = 170047;
20240806 11:59:24.796 00C2 =DBG= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:24.796 00C2 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0009
20240806 11:59:24.796 00C2 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=2
20240806 11:59:24.800 00C2 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0009
20240806 11:59:24.800 00C2 =FUN= [FunctionCheck] <App. context>:         zcare.zdek.zql.PhysicalConnection.execute: =>  UPDATE SYS_Server SET LastCallTime = '20240806 11:57:52.950' WHERE (Server_Id = 170047)
20240806 11:59:24.824 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0012
20240806 11:59:24.824 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 251 columns, 336 rows
20240806 11:59:24.824 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0012
20240806 11:59:24.824 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0012
20240806 11:59:24.824 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:24.825 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 11:59:24.825 006E =WRN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: zcare.zdek.dbag.DBag.load took too much time: 1251 ms
20240806 11:59:24.825 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.dbag.DBag.load
20240806 11:59:24.825 006E =WRN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: zcare.zlms.educationalscenario.enrollment.dataset.ElectiveScenarioStudentListDetailDataSet$Handler.handleContextChange took too much time: 1569 ms
20240806 11:59:24.825 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 <- zcare.zlms.educationalscenario.enrollment.dataset.ElectiveScenarioStudentListDetailDataSet$Handler.handleContextChange
20240806 11:59:24.825 006E =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 11:59:24.825 006E =API= [CallClient] null: <= DBAG_COPY EduScenarioStudentsDetail0
20240806 11:59:24.826 006E =FUN= [CallFromClient] 1901330445:6934: InputMessage size 513
20240806 11:59:24.826 006E =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 10362
20240806 11:59:24.826 006E =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 11:59:24.890 00C2 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 11:59:24.890 00C2 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0009
20240806 11:59:24.890 00C2 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=1
20240806 11:59:24.890 00C2 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0009
20240806 11:59:24.941 007A =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=38)
20240806 11:59:24.941 007A =API= [CallFromClient] null: => DBAG_COPY SurveyTriggerJob2
20240806 11:59:24.941 007A =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: SURVEY_TRIGGER_HANDLER:LOAD_SURVEY_STATUS
20240806 11:59:24.941 007A =FUN= [CallFromClient] null: Parameter DBAG_NAME=SurveyTriggerJob2
20240806 11:59:24.941 007A =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 11:59:24.941 007A =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 11:59:24.941 007A =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 11:59:24.941 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY_STATUS: 3 -> zcare.zlms.handler.SurveyTriggerHandler.loadSurveyStatus
20240806 11:59:24.941 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY_STATUS: 4 -> zcare.zdek.dbag.DBag.load
20240806 11:59:24.941 007A =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zlmssurvey.SVY_Survey.Survey_Id, zlmssurvey.SVY_Survey.Template_Id, zlmssurvey.SVY_Survey.DurationToFillSurvey, zlmssurvey.SVY_Survey.IsMandatory, zlmssurvey.SVY_Survey.IsPausable, zlmssurvey.SVY_Survey.AttendAllQuestions, zlmssurvey.SVY_Survey.EffectiveStartDateTime, zlmssurvey.SVY_Survey.EffectiveExpiryDateTime, zlmssurvey.SVY_Survey.DistributedDateTime, zlmssurvey.SVY_Survey.AdministrationDateTime, zlmssurvey.SVY_Survey.CreationDate, zlmssurvey.SVY_Survey.TerminationDate, zlmssurvey.SVY_Survey.CreationUser_id, zlmssurvey.SVY_Survey.UserStamp, zlmssurvey.SVY_Survey.TimeStamp, zlmssurvey.SVY_Survey.CriteriaList_Id, zlmssurvey.SVY_Survey.PersonList_Id, zlmssurvey.SVY_Survey.Status, zlmssurvey.SVY_Survey.DeleteDateTime, zlmssurvey.SVY_Survey.AcademicYear_Id FROM zlmssurvey.SVY_Survey WHERE (((zlmssurvey.SVY_Survey.Status = 2) OR (zlmssurvey.SVY_Survey.Status = 3)) AND (zlmssurvey.SVY_Survey.EffectiveStartDateTime <= '20240806 11:59:24.941'));
20240806 11:59:24.941 007A =API= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY_STATUS: 5 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: administrator:1901330445
20240806 11:59:24.941 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY_STATUS: 6 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmssurvey.SVY_Survey.Survey_Id, zlmssurvey.SVY_Survey.Template_Id, zlmssurvey.SVY_Survey.DurationToFillSurvey, zlmssurvey.SVY_Survey.IsMandatory, zlmssurvey.SVY_Survey.IsPausable, zlmssurvey.SVY_Survey.AttendAllQuestions, zlmssurvey.SVY_Survey.EffectiveStartDateTime, zlmssurvey.SVY_Survey.EffectiveExpiryDateTime, zlmssurvey.SVY_Survey.DistributedDateTime, zlmssurvey.SVY_Survey.AdministrationDateTime, zlmssurvey.SVY_Survey.CreationDate, zlmssurvey.SVY_Survey.TerminationDate, zlmssurvey.SVY_Survey.CreationUser_id, zlmssurvey.SVY_Survey.UserStamp, zlmssurvey.SVY_Survey.TimeStamp, zlmssurvey.SVY_Survey.CriteriaList_Id, zlmssurvey.SVY_Survey.PersonList_Id, zlmssurvey.SVY_Survey.Status, zlmssurvey.SVY_Survey.DeleteDateTime, zlmssurvey.SVY_Survey.AcademicYear_Id FROM zlmssurvey.SVY_Survey WHERE (((zlmssurvey.SVY_Survey.Status = 2) OR (zlmssurvey.SVY_Survey.Status = 3)) AND (zlmssurvey.SVY_Survey.EffectiveStartDateTime <= '20240806 11:59:24.941'));
20240806 11:59:24.942 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY_STATUS: 6 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:24.942 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY_STATUS: 6 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:24.942 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY_STATUS: 6 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0013 - Allocated=10, Used=2
20240806 11:59:24.942 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY_STATUS: 6 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0013 - SELECT SVY_Survey.Survey_Id, SVY_Survey.Template_Id, SVY_Survey.DurationToFillSurvey, SVY_Survey.IsMandatory, SVY_Survey.IsPausable, SVY_Survey.AttendAllQuestions, SVY_Survey.EffectiveStartDateTime, SVY_Survey.EffectiveExpiryDateTime, SVY_Survey.DistributedDateTime, SVY_Survey.AdministrationDateTime, SVY_Survey.CreationDate, SVY_Survey.TerminationDate, SVY_Survey.CreationUser_id, SVY_Survey.UserStamp, SVY_Survey.TimeStamp, SVY_Survey.CriteriaList_Id, SVY_Survey.PersonList_Id, SVY_Survey.Status, SVY_Survey.DeleteDateTime, SVY_Survey.AcademicYear_Id FROM SVY_Survey WHERE (((SVY_Survey.Status = ?) OR (SVY_Survey.Status = ?)) AND (SVY_Survey.EffectiveStartDateTime <= ?))
20240806 11:59:24.942 007A =FUN= [ZQL.PhysicalConnection] Parameters: 2, 3, '20240806 11:59:24.941'
20240806 11:59:24.942 007A =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:24.962 008D =API= [FunctionCheck] <App. context>: 1 -> zcare.zdek.system.SystemMonitor.dump
20240806 11:59:24.984 008D =FUN= [ZMonitoring] : ======== DUMP SYSTEM STATISTICS SINCE 20240806 11:54:22.684 ========
LogApiFrequency: current=213 /min, min=213 /min, max=31333 /min, avg=8260.00 /min, dev=13327.38 /min
LogFunctionalFrequency: current=828 /min, min=828 /min, max=71201 /min, avg=18884.50 /min, dev=30212.94 /min
LogDebugFrequency: current=464 /min, min=464 /min, max=55115 /min, avg=14313.25 /min, dev=23558.78 /min
InputPacketSize: current=513 B, min=513 B, max=343406 B, avg=5853.40 B, dev=14691.45 B
InputRate: current=4715 B/min, min=4715 B/min, max=423130 B/min, avg=145975.25 B/min, dev=162932.65 B/min
OutputPacketSize: current=10362 B, min=10362 B, max=3363456 B, avg=169719.65 B, dev=732700.27 B
OutputRate: current=37030 B/min, min=37030 B/min, max=740542 B/min, avg=412137.00 B/min, dev=249918.32 B/min
TimersDuration: current=0 ms, min=0 ms, max=1179 ms, avg=101.68 ms, dev=235.62 ms
CallBundle.duration: current=2749 ms, min=2749 ms, max=8567 ms, avg=1099.15 ms, dev=2330.20 ms
CallBundle.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
CallBundle.frequency: current=7 /min, min=7 /min, max=13 /min, avg=8.75 /min, dev=2.49 /min
CallBundleLoad: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
Call.duration: current=1569 ms, min=1569 ms, max=8521 ms, avg=973.81 ms, dev=2298.33 ms
Call.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
Call.frequency: current=8 /min, min=8 /min, max=74 /min, avg=25.50 /min, dev=28.01 /min
ServerCall.duration: current=34 ms, min=34 ms, max=6345 ms, avg=256.48 ms, dev=614.69 ms
ServerCall.nConcurrent: current=1 , min=1 , max=22 , avg=1.41 , dev=1.67 
ServerCall.frequency: current=14 /min, min=14 /min, max=4232 /min, avg=1082.00 /min, dev=1818.76 /min
ServerSelectResultPacketSize: current=0 B, min=0 B, max=1853875 B, avg=4618.13 B, dev=15384.69 B
ServerSelectResultRate: current=61917 B/min, min=61917 B/min, max=20929749 B/min, avg=5630648.25 B/min, dev=8847461.54 B/min
EncodingOptimization: current=0 %, min=0 %, max=65 %, avg=12.00 %, dev=19.60 %
ExpiredCacheSessionsCount: current=6 , min=6 , max=6 , avg=5.67 , dev=0.47 
ZDekThreadPool.ThreadRun.duration: current=0 ms, min=10113 ms, max=10113 ms, avg=217.69 ms, dev=974.46 ms
ZDekThreadPool.ThreadRun.nConcurrent: current=1 , min=22 , max=22 , avg=1.18 , dev=1.21 
ZDekThreadPool.ThreadRun.frequency: current=61 /min, min=61 /min, max=8706 /min, avg=2235.25 /min, dev=3735.92 /min
ServerCallGetNotifications.duration: current=34 ms, min=34 ms, max=609 ms, avg=181.71 ms, dev=158.77 ms
ServerCallGetNotifications.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
ServerCallGetNotifications.frequency: current=12 /min, min=12 /min, max=13 /min, avg=9.00 /min, dev=3.67 /min
GC_Duration: current=464 ms, min=464 ms, max=1042 ms, avg=332.75 ms, dev=198.21 ms
PhysicalConnectionsAllocated: current=14 , min=13 , max=14 , avg=14.00 , dev=0.00 
PhysicalConnectionsUsed: current=2 , min=10 , max=10 , avg=0.27 , dev=0.90 
PhysicalConnectionsLoad: current=24 , min=100 , max=100 , avg=3.27 , dev=10.76 
PhysicalConnectionCpuLoad_P: current=38 , min=43 , max=43 , avg=40.75 , dev=1.30 
DBPoolTargetMin_P: current=10 , min=10 , max=10 , avg=10.00 , dev=0.00 
DBPoolTargetMax_P: current=10 , min=10 , max=10 , avg=10.00 , dev=0.00 
DBPoolUsed_P: current=2 , min=10 , max=10 , avg=0.27 , dev=0.90 
DBPoolAllocated_P: current=14 , min=13 , max=14 , avg=14.00 , dev=0.00 
DBTransaction.duration: current=329 ms, min=329 ms, max=725 ms, avg=280.56 ms, dev=114.52 ms
DBTransaction.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
DBTransaction.frequency: current=2 /min, min=2 /min, max=10 /min, avg=4.00 /min, dev=3.46 /min
DBConnections: current=10 , min=10 , max=14 , avg=10.00 , dev=0.00 
DBQuery.duration: current=1233 ms, min=5943 ms, max=5943 ms, avg=230.94 ms, dev=558.42 ms
DBQuery.nConcurrent: current=1 , min=1 , max=10 , avg=1.15 , dev=0.70 
DBQuery.frequency: current=19 /min, min=19 /min, max=4359 /min, avg=1117.00 /min, dev=1871.88 /min
DBQueryRowCount: current=336 , min=9493 , max=9493 , avg=43.66 , dev=169.78 
DBExecute.duration: current=90 ms, min=277 ms, max=277 ms, avg=77.00 ms, dev=73.71 ms
DBExecute.nConcurrent: current=1 , min=2 , max=2 , avg=1.00 , dev=0.00 
DBExecute.frequency: current=3 /min, min=3 /min, max=14 /min, avg=7.50 /min, dev=4.72 /min
TimeDifferenceDSAndDB: current=91804 ms, min=91804 ms, max=91893 ms, avg=91810.40 ms, dev=25.14 ms
ServerGotNotificationCount: current=9 , min=9 , max=9 , avg=0.00 , dev=0.00 
CurrentMemory: current=3295674 kB, min=1987575 kB, max=3295674 kB, avg=2641624.50 kB, dev=654049.50 kB
MemoryExtraAvailable: current=8740748 kB, min=8651229 kB, max=8740748 kB, avg=8695988.50 kB, dev=44759.50 kB
MemoryUsed: current=803915 kB, min=803915 kB, max=893434 kB, avg=848674.50 kB, dev=44759.50 kB
DiskLogSpace: current=69051 MB, min=69051 MB, max=69053 MB, avg=69052.00 MB, dev=1.00 MB
DiskTmpSpace: current=69051 MB, min=69051 MB, max=69053 MB, avg=69052.00 MB, dev=1.00 MB
DiskServerSpace: current=69051 MB, min=69051 MB, max=69053 MB, avg=69052.00 MB, dev=1.00 MB
DIALOG_MANAGER:START.duration: current=2484 ms, min=674 ms, max=2484 ms, avg=1579.00 ms, dev=905.00 ms
DIALOG_MANAGER:START.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
DIALOG_MANAGER:START.frequency: current=0 /min, min=0 /min, max=1 /min, avg=0.25 /min, dev=0.43 /min
SYS_PARAM:LOAD_PARAMETERS.duration: current=139 ms, min=196 ms, max=196 ms, avg=103.50 ms, dev=67.99 ms
SYS_PARAM:LOAD_PARAMETERS.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
SYS_PARAM:LOAD_PARAMETERS.frequency: current=0 /min, min=0 /min, max=11 /min, avg=2.75 /min, dev=4.76 /min
USER_DATA:LOAD_USER_DATA.duration: current=1436 ms, min=1436 ms, max=1436 ms, avg=1436.00 ms, dev=0.00 ms
USER_DATA:LOAD_USER_DATA.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
USER_DATA:LOAD_USER_DATA.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
USER_DATA:LOAD_USER_RIGHT.duration: current=1400 ms, min=1400 ms, max=1400 ms, avg=1400.00 ms, dev=0.00 ms
USER_DATA:LOAD_USER_RIGHT.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
USER_DATA:LOAD_USER_RIGHT.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
SURVEY_TRIGGER_HANDLER:LOAD_SURVEY.duration: current=105 ms, min=105 ms, max=105 ms, avg=105.00 ms, dev=0.00 ms
SURVEY_TRIGGER_HANDLER:LOAD_SURVEY.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
SURVEY_TRIGGER_HANDLER:LOAD_SURVEY.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
ANNOUNCEMENT_HANDLER:LOAD_USER_ANNOUNCEMENTS.duration: current=84 ms, min=84 ms, max=84 ms, avg=84.00 ms, dev=0.00 ms
ANNOUNCEMENT_HANDLER:LOAD_USER_ANNOUNCEMENTS.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
ANNOUNCEMENT_HANDLER:LOAD_USER_ANNOUNCEMENTS.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
DIALOG_MANAGER:INIT_DYN_DATAVIEW.duration: current=3 ms, min=3 ms, max=3 ms, avg=3.00 ms, dev=0.00 ms
DIALOG_MANAGER:INIT_DYN_DATAVIEW.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
DIALOG_MANAGER:INIT_DYN_DATAVIEW.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
DIALOG_MANAGER:LOAD_SCRIPT_EVENT_DATA.duration: current=161 ms, min=161 ms, max=161 ms, avg=161.00 ms, dev=0.00 ms
DIALOG_MANAGER:LOAD_SCRIPT_EVENT_DATA.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
DIALOG_MANAGER:LOAD_SCRIPT_EVENT_DATA.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
ACADEMIC_YEAR_HANDLER:LOAD_ACADEMIC_YEARS.duration: current=54 ms, min=54 ms, max=54 ms, avg=54.00 ms, dev=0.00 ms
ACADEMIC_YEAR_HANDLER:LOAD_ACADEMIC_YEARS.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
ACADEMIC_YEAR_HANDLER:LOAD_ACADEMIC_YEARS.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
DATABASE_DICTIONARY:FILTER_DICTIONARY.duration: current=18 ms, min=18 ms, max=105 ms, avg=18.00 ms, dev=0.00 ms
DATABASE_DICTIONARY:FILTER_DICTIONARY.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
DATABASE_DICTIONARY:FILTER_DICTIONARY.frequency: current=0 /min, min=30 /min, max=30 /min, avg=10.00 /min, dev=14.14 /min
SITE_HANDLER:LOAD_PARENT_SITES_AWQAF.duration: current=0 ms, min=7 ms, max=7 ms, avg=0.00 ms, dev=0.00 ms
SITE_HANDLER:LOAD_PARENT_SITES_AWQAF.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
SITE_HANDLER:LOAD_PARENT_SITES_AWQAF.frequency: current=0 /min, min=2 /min, max=2 /min, avg=0.67 /min, dev=0.94 /min
SITE_HANDLER:LOAD_SITE_TYPES.duration: current=61 ms, min=125 ms, max=125 ms, avg=56.50 ms, dev=4.50 ms
SITE_HANDLER:LOAD_SITE_TYPES.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
SITE_HANDLER:LOAD_SITE_TYPES.frequency: current=0 /min, min=4 /min, max=4 /min, avg=1.33 /min, dev=1.89 /min
DATABASE_DICTIONARY:FILTER_TABLE.duration: current=32 ms, min=100 ms, max=100 ms, avg=66.00 ms, dev=34.00 ms
DATABASE_DICTIONARY:FILTER_TABLE.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
DATABASE_DICTIONARY:FILTER_TABLE.frequency: current=0 /min, min=2 /min, max=2 /min, avg=0.67 /min, dev=0.94 /min
ADDRESS_HANDLER:LOAD_ALL_STATES.duration: current=18 ms, min=18 ms, max=18 ms, avg=18.00 ms, dev=0.00 ms
ADDRESS_HANDLER:LOAD_ALL_STATES.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
ADDRESS_HANDLER:LOAD_ALL_STATES.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
SITE_HIERARCHY_HANDLER_FOR_AWQAF:LOAD_SITES_BY_ID.duration: current=7 ms, min=7 ms, max=7 ms, avg=7.00 ms, dev=0.00 ms
SITE_HIERARCHY_HANDLER_FOR_AWQAF:LOAD_SITES_BY_ID.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
SITE_HIERARCHY_HANDLER_FOR_AWQAF:LOAD_SITES_BY_ID.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
ADD_ATTACHMENT:GET_MAX_ATTACHMENT_SIZE.duration: current=6 ms, min=6 ms, max=6 ms, avg=6.00 ms, dev=0.00 ms
ADD_ATTACHMENT:GET_MAX_ATTACHMENT_SIZE.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
ADD_ATTACHMENT:GET_MAX_ATTACHMENT_SIZE.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
STRUCT:loadAttributeDefinitions.duration: current=49 ms, min=49 ms, max=49 ms, avg=49.00 ms, dev=0.00 ms
STRUCT:loadAttributeDefinitions.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
STRUCT:loadAttributeDefinitions.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
SITE_HIERARCHY_HANDLER_FOR_AFTER_SCHOOL:GET_AFTERSCHOOL_INFO.duration: current=25 ms, min=25 ms, max=25 ms, avg=25.00 ms, dev=0.00 ms
SITE_HIERARCHY_HANDLER_FOR_AFTER_SCHOOL:GET_AFTERSCHOOL_INFO.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
SITE_HIERARCHY_HANDLER_FOR_AFTER_SCHOOL:GET_AFTERSCHOOL_INFO.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
DIALOG_MANAGER:CONTEXT_CHANGES.duration: current=1569 ms, min=1569 ms, max=8521 ms, avg=1962.86 ms, dev=2894.01 ms
DIALOG_MANAGER:CONTEXT_CHANGES.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
DIALOG_MANAGER:CONTEXT_CHANGES.frequency: current=2 /min, min=1 /min, max=2 /min, avg=1.33 /min, dev=0.47 /min
DIALOG_MANAGER:HEARTBEAT.duration: current=115 ms, min=115 ms, max=609 ms, avg=172.67 ms, dev=156.82 ms
DIALOG_MANAGER:HEARTBEAT.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
DIALOG_MANAGER:HEARTBEAT.frequency: current=1 /min, min=1 /min, max=3 /min, avg=2.33 /min, dev=0.94 /min
DBAG_REFERENCE_HANDLER:LOAD_REFERENCES.duration: current=0 ms, min=0 ms, max=0 ms, avg=0.00 ms, dev=0.00 ms
DBAG_REFERENCE_HANDLER:LOAD_REFERENCES.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
DBAG_REFERENCE_HANDLER:LOAD_REFERENCES.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
SITE_HANDLER:LOAD_SITES.duration: current=38 ms, min=38 ms, max=537 ms, avg=21.33 ms, dev=12.23 ms
SITE_HANDLER:LOAD_SITES.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
SITE_HANDLER:LOAD_SITES.frequency: current=0 /min, min=0 /min, max=4 /min, avg=1.67 /min, dev=1.70 /min
DIALOG_MANAGER:NO_OP.duration: current=0 ms, min=0 ms, max=0 ms, avg=0.00 ms, dev=0.00 ms
DIALOG_MANAGER:NO_OP.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
DIALOG_MANAGER:NO_OP.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
STRUCT:loadParentSiteData.duration: current=102 ms, min=102 ms, max=102 ms, avg=102.00 ms, dev=0.00 ms
STRUCT:loadParentSiteData.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
STRUCT:loadParentSiteData.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
MESSAGE_LIST:loadMessagesForUser.duration: current=187 ms, min=187 ms, max=187 ms, avg=187.00 ms, dev=0.00 ms
MESSAGE_LIST:loadMessagesForUser.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
MESSAGE_LIST:loadMessagesForUser.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
SURVEY_TRIGGER_HANDLER:LOAD_SURVEY_STATUS.duration: current=95 ms, min=95 ms, max=130 ms, avg=112.50 ms, dev=17.50 ms
SURVEY_TRIGGER_HANDLER:LOAD_SURVEY_STATUS.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
SURVEY_TRIGGER_HANDLER:LOAD_SURVEY_STATUS.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
DIALOG_MANAGER:OPEN_DIALOG_ITEM.duration: current=805 ms, min=805 ms, max=805 ms, avg=805.00 ms, dev=0.00 ms
DIALOG_MANAGER:OPEN_DIALOG_ITEM.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
DIALOG_MANAGER:OPEN_DIALOG_ITEM.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
DIALOG_MANAGER:INIT_DYN_DATASET.duration: current=2 ms, min=2 ms, max=2 ms, avg=2.00 ms, dev=0.00 ms
DIALOG_MANAGER:INIT_DYN_DATASET.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
DIALOG_MANAGER:INIT_DYN_DATASET.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
SITE_HANDLER:LOAD_SITE.duration: current=27 ms, min=27 ms, max=27 ms, avg=27.00 ms, dev=0.00 ms
SITE_HANDLER:LOAD_SITE.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
SITE_HANDLER:LOAD_SITE.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
EDUCATION_PATH_DEFINITION_HANDLER:LOAD_SCHOOL_EDUCATION_PATH.duration: current=1821 ms, min=1821 ms, max=1821 ms, avg=1821.00 ms, dev=0.00 ms
EDUCATION_PATH_DEFINITION_HANDLER:LOAD_SCHOOL_EDUCATION_PATH.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
EDUCATION_PATH_DEFINITION_HANDLER:LOAD_SCHOOL_EDUCATION_PATH.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
EDUCATION_PATH_DEFINITION_HANDLER:LOAD_STRAM_GRADES_BY_ACADEMIC_YEAR.duration: current=413 ms, min=413 ms, max=413 ms, avg=413.00 ms, dev=0.00 ms
EDUCATION_PATH_DEFINITION_HANDLER:LOAD_STRAM_GRADES_BY_ACADEMIC_YEAR.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 
EDUCATION_PATH_DEFINITION_HANDLER:LOAD_STRAM_GRADES_BY_ACADEMIC_YEAR.frequency: current=0 /min, min=0 /min, max=0 /min, avg=0.00 /min, dev=0.00 /min
ELECTIVE_ONLINE_APPLICATION:updatePromotedScenarioSelections.duration: current=7181 ms, min=7181 ms, max=7181 ms, avg=7181.00 ms, dev=0.00 ms
ELECTIVE_ONLINE_APPLICATION:updatePromotedScenarioSelections.nConcurrent: current=1 , min=1 , max=1 , avg=1.00 , dev=0.00 

20240806 11:59:25.014 008D =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:25.014 008D =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0010 - Allocated=10, Used=3
20240806 11:59:25.014 008D =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0010
20240806 11:59:25.016 0097 =API= [ZQL.PhysicalConnectionPool] getIdealParameters: Max is now 3, and initial is 3
20240806 11:59:25.037 00C2 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=0
20240806 11:59:25.037 00C2 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0009
20240806 11:59:25.037 00C2 =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0009
20240806 11:59:25.037 00C2 =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:25.037 00C2 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=2
20240806 11:59:25.037 00C2 =INF= [ZqlServer] null: cleanupServersInDB
20240806 11:59:25.037 00C2 =API= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.DBLock$Type.createLock
20240806 11:59:25.038 00C2 =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:25.038 00C2 =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0003 - Allocated=10, Used=3
20240806 11:59:25.038 00C2 =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0003
20240806 11:59:25.038 007A =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:25.038 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY_STATUS: 6 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:25.038 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY_STATUS: 6 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0013
20240806 11:59:25.038 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY_STATUS: 6 <- zcare.zdek.zql.PhysicalConnection.endQuery : 20 columns, 0 rows
20240806 11:59:25.038 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY_STATUS: 6 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0013
20240806 11:59:25.039 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY_STATUS: 7 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0013
20240806 11:59:25.039 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY_STATUS: 7 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:25.039 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY_STATUS: 6 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=2
20240806 11:59:25.039 007A =API= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY_STATUS: 5 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 11:59:25.039 007A =API= [DATAPROXY] sqlSelect:Result: 0: C, 20 cols, 0 rows
20240806 11:59:25.039 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY_STATUS: 4 <- zcare.zdek.dbag.DBag.load
20240806 11:59:25.039 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY_STATUS: 3 <- zcare.zlms.handler.SurveyTriggerHandler.loadSurveyStatus
20240806 11:59:25.039 007A =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 11:59:25.039 007A =API= [CallClient] null: <= DBAG_UPDATE SurveyTriggerJob2
20240806 11:59:25.039 007A =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:HEARTBEAT
20240806 11:59:25.039 007A =FUN= [CallFromClient] null: Parameter FILTER_LIST=0:SQL:zmedstructure.STRUCT_SiteType:
29:Hierarchy:
8:dictionary.DIC_DictionaryEntry:
39:
33::
8:common.COMM_WorkflowState:
20:MessageDelivery:
27::
20:ApplicationFormState:
35::
5:lmsregistration.REG_StudentRegistration:
8:admin.ADM_StreamGrade:
30:
19:essionDef:
25::
19:chool:
20:enarioSelection:
18:Grade:
18:Enrollment:
19:ducationPathDef:
35:
21:ScenarioStreamGrade:
41:
29:OptionalGrp:
29::
30:
18:CourseDefStreamGrade:
27::
24::
20:mmunityMember:
27::
1:CRIPT_CACHE_CLEAR_Filter:
20240806 11:59:25.039 007A =FUN= [CallFromClient] null: Parameter LAST_NOTIFICATION_TIME=20240806 11:56:23.336
20240806 11:59:25.039 007A =FUN= [CallFromClient] null: Parameter LAST_NOTIFICATION_ID=0
20240806 11:59:25.039 007A =FUN= [CallFromClient] null: Parameter CurrentCallId=-1206751186
20240806 11:59:25.039 007A =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 11:59:25.041 007A =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 11:59:25.041 007A =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 11:59:25.041 007A =API= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 3 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: administrator:1901330445
20240806 11:59:25.041 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:25.041 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0008 - Allocated=10, Used=3
20240806 11:59:25.041 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0008
20240806 11:59:25.060 008D =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=1
20240806 11:59:25.060 008D =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.ZqlParser.parseScript : INSERT INTO zdeksystem.SYS_MonitoringMessage(MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext) VALUES ('20240806 11:57:30.510', 'ZApplicationServer', '10.203.242.20:', N'Value is higher than usual', 3, 2, 'ServerSelectResultPacketSize', 'B', 62057.0, N'administrator:1901330445');INSERT INTO zdeksystem.SYS_MonitoringMessage(MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext) VALUES ('20240806 11:58:00.576', 'ZApplicationServer', '10.203.242.20:', N'Value is higher than usual', 3, 2, 'ZDekThreadPool.ThreadRun.duration', 'ms', 5764.0, N'Task');INSERT INTO zdeksystem.SYS_MonitoringMessage(MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext) VALUES ('20240806 11:58:05.577', 'ZApplicationServer', '10.203.242.20:', N'Value is higher than usual', 3, 2, 'OutputPacketSize', 'B', 10192.0, N'1901330445:6934;1;default');INSERT INTO zdeksystem.SYS_MonitoringMessage(MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext) VALUES ('20240806 11:58:05.577', 'ZApplicationServer', '10.203.242.20:', N'Value is higher than usual', 3, 2, 'CallBundle.duration', 'ms', 8567.0, N'1901330445:6934;1;default');INSERT INTO zdeksystem.SYS_MonitoringMessage(MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext) VALUES ('20240806 11:58:05.577', 'ZApplicationServer', '10.203.242.20:', N'Value is higher than usual', 3, 2, 'Call.duration', 'ms', 8521.0, N'DIALOG_MANAGER:CONTEXT_CHANGES');INSERT INTO zdeksystem.SYS_MonitoringMessage(MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext) VALUES ('20240806 11:58:05.578', 'ZApplicationServer', '10.203.242.20:', N'Value is higher than usual', 3, 2, 'DBQuery.duration', 'ms', 1539.0, N'SELECT ADM_ScenarioSelection.ScenarioSelection_Id, ADM_ScenarioSelection.EduScenario_Id, ADM_ScenarioSelection.ApplicationForm_Id, ADM_ScenarioSelection.Enrollment_Id, ADM_ScenarioSelection.SelectionS');INSERT INTO zdeksystem.SYS_MonitoringMessage(MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext) VALUES ('20240806 11:58:05.578', 'ZApplicationServer', '10.203.242.20:', N'Value is higher than usual', 3, 2, 'DBQueryRowCount', '', 448.0, N'SELECT ADM_ScenarioSelection.ScenarioSelection_Id, ADM_ScenarioSelection.EduScenario_Id, ADM_ScenarioSelection.ApplicationForm_Id, ADM_ScenarioSelection.Enrollment_Id, ADM_ScenarioSelection.SelectionS');INSERT INTO zdeksystem.SYS_MonitoringMessage(MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext) VALUES ('20240806 11:58:50.656', 'ZApplicationServer', '10.203.242.20:', N'Value is less than usual', 3, 1, 'PhysicalConnectionCpuLoad_P', '', 38.0, N'updateCpuLoad');INSERT INTO zdeksystem.SYS_MonitoringMessage(MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext) VALUES ('20240806 11:59:20.730', 'ZApplicationServer', '10.203.242.20:', N'Value is higher than usual', 3, 2, 'OutputPacketSize', 'B', 3363456.0, N'1901330445:6934;1;default');INSERT INTO zdeksystem.SYS_MonitoringMessage(MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext) VALUES ('20240806 11:59:20.730', 'ZApplicationServer', '10.203.242.20:', N'Value is higher than usual', 3, 2, 'CallBundle.duration', 'ms', 7187.0, N'1901330445:6934;1;default');INSERT INTO zdeksystem.SYS_MonitoringMessage(MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext) VALUES ('20240806 11:59:20.730', 'ZApplicationServer', '10.203.242.20:', N'Value is higher than usual', 3, 2, 'Call.duration', 'ms', 7181.0, N'ELECTIVE_ONLINE_APPLICATION:updatePromotedScenarioSelections');
20240806 11:59:25.077 008D =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:25.077 008D =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0010
20240806 11:59:25.077 008D =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=2
20240806 11:59:25.078 008D =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.allocateSequenceValues : PDB0010
20240806 11:59:25.078 008D =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_SYS_MONITORINGMESSAGE, Need  11 
20240806 11:59:25.078 008D =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Initialize from DB
20240806 11:59:25.078 008D =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:25.078 008D =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0002 - Allocated=10, Used=4
20240806 11:59:25.078 008D =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.initializeSequenceFromDB : PDB0010
20240806 11:59:25.078 008D =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 1
20240806 11:59:25.078 008D =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 2
20240806 11:59:25.078 008D =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 3
20240806 11:59:25.078 008D =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 4
20240806 11:59:25.078 008D =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 5
20240806 11:59:25.078 008D =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 6
20240806 11:59:25.078 008D =API= [ZQL.PhysicalConnection] initializeSequenceFromDB: Part 7
20240806 11:59:25.078 008D =FUN= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.query : PDB0002 - SELECT MAX(MonitoringMessage_Id) FROM SYS_MonitoringMessage WHERE MonitoringMessage_Id >= 1901330433 AND MonitoringMessage_Id < 1901461505
20240806 11:59:25.078 008D =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:25.082 009E =API= [ZQL.PhysicalConnectionPool] getIdealParameters: Max is now 4, and initial is 3
20240806 11:59:25.109 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 11:59:25.109 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0008
20240806 11:59:25.110 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0008
20240806 11:59:25.110 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:25.110 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=3
20240806 11:59:25.110 007A =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 11:59:25.110 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT TOP 5000 zdeksystem.SYS_Notification.Notification_Id, zdeksystem.SYS_Notification.SenderSession_Id, zdeksystem.SYS_Notification.SenderUser_Id, zdeksystem.SYS_Notification.EmissionTime, zdeksystem.SYS_Notification.Subject, zdeksystem.SYS_Notification.Message FROM zdeksystem.SYS_Notification WHERE ((zdeksystem.SYS_Notification.EmissionTime >= '20240806 11:57:48.721') AND (zdeksystem.SYS_Notification.EmissionTime < '20240806 11:57:53.271')) ORDER BY zdeksystem.SYS_Notification.EmissionTime ASC, zdeksystem.SYS_Notification.Notification_Id ASC;
20240806 11:59:25.111 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:25.111 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:25.111 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0007 - Allocated=10, Used=4
20240806 11:59:25.113 00C2 =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=1
20240806 11:59:25.113 00C2 =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.ZqlParser.parseScript : UPDATE zdeksystem.SYS_NamedLock SET Message = 'Sequence cleanup performed by another server', ExpireAt = '20240806 11:58:53.239', Session_Id = 1901330433 WHERE ((zdeksystem.SYS_NamedLock.LockName = 'SequenceCleanup:SEQUENCE_CLEANUP') AND (zdeksystem.SYS_NamedLock.NamedLockType_ID = 20012) AND (zdeksystem.SYS_NamedLock.ExpireAt < '20240806 11:57:53.240'));
20240806 11:59:25.113 00C2 =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:25.113 00C2 =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0003
20240806 11:59:25.113 00C2 =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=2
20240806 11:59:25.113 00C2 =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0003
20240806 11:59:25.113 00C2 =FUN= [FunctionCheck] <App. context>:         zcare.zdek.zql.PhysicalConnection.execute: =>  UPDATE SYS_NamedLock SET Message = 'Sequence cleanup performed by another server', ExpireAt = '20240806 11:58:53.239', Session_Id = 1901330433 WHERE (((SYS_NamedLock.LockName = 'SequenceCleanup:SEQUENCE_CLEANUP') AND (SYS_NamedLock.NamedLockType_ID = 20012)) AND (SYS_NamedLock.ExpireAt < '20240806 11:57:53.240'))
20240806 11:59:25.113 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0007 - SELECT TOP 5000 SYS_Notification.Notification_Id, SYS_Notification.SenderSession_Id, SYS_Notification.SenderUser_Id, SYS_Notification.EmissionTime, SYS_Notification.Subject, SYS_Notification.Message FROM SYS_Notification WHERE ((SYS_Notification.EmissionTime >= ?) AND (SYS_Notification.EmissionTime < ?)) ORDER BY SYS_Notification.EmissionTime ASC, SYS_Notification.Notification_Id ASC
20240806 11:59:25.113 007A =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:57:48.721', '20240806 11:57:53.271'
20240806 11:59:25.113 007A =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:25.131 008D =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:25.132 008D =FUN= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.query
20240806 11:59:25.132 008D =FUN= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0002
20240806 11:59:25.132 008D =FUN= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.endQuery : 1 columns, 1 rows
20240806 11:59:25.132 008D =DBG= [ZQL.PhysicalConnection] initializeSequenceFromDB: Add range $TBL_SYS_MONITORINGMESSAGE from 1901330433 to 1901461505
20240806 11:59:25.132 008D =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.initializeSequenceFromDB
20240806 11:59:25.132 008D =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0002
20240806 11:59:25.132 008D =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0002
20240806 11:59:25.132 008D =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:25.132 008D =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=3
20240806 11:59:25.132 008D =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330433 to 1901330455 and keep from 1901330455
20240806 11:59:25.132 008D =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.allocateSequenceValues
20240806 11:59:25.138 008D =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0010
20240806 11:59:25.138 008D =FUN= [FunctionCheck] <App. context>:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO SYS_MonitoringMessage (MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext, SYS_MonitoringMessage.MonitoringMessage_Id)VALUES ('20240806 11:57:30.510', 'ZApplicationServer', '10.203.242.20:', N'Value is higher than usual', 3, 2, 'ServerSelectResultPacketSize', 'B', 62057.0, N'administrator:1901330445', 1901330433)
20240806 11:59:25.138 008D =FUN= [FunctionCheck] <App. context>:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO SYS_MonitoringMessage (MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext, SYS_MonitoringMessage.MonitoringMessage_Id)VALUES ('20240806 11:58:00.576', 'ZApplicationServer', '10.203.242.20:', N'Value is higher than usual', 3, 2, 'ZDekThreadPool.ThreadRun.duration', 'ms', 5764.0, N'Task', 1901330435)
20240806 11:59:25.138 008D =FUN= [FunctionCheck] <App. context>:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO SYS_MonitoringMessage (MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext, SYS_MonitoringMessage.MonitoringMessage_Id)VALUES ('20240806 11:58:05.577', 'ZApplicationServer', '10.203.242.20:', N'Value is higher than usual', 3, 2, 'OutputPacketSize', 'B', 10192.0, N'1901330445:6934;1;default', 1901330437)
20240806 11:59:25.138 008D =FUN= [FunctionCheck] <App. context>:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO SYS_MonitoringMessage (MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext, SYS_MonitoringMessage.MonitoringMessage_Id)VALUES ('20240806 11:58:05.577', 'ZApplicationServer', '10.203.242.20:', N'Value is higher than usual', 3, 2, 'CallBundle.duration', 'ms', 8567.0, N'1901330445:6934;1;default', 1901330439)
20240806 11:59:25.138 008D =FUN= [FunctionCheck] <App. context>:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO SYS_MonitoringMessage (MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext, SYS_MonitoringMessage.MonitoringMessage_Id)VALUES ('20240806 11:58:05.577', 'ZApplicationServer', '10.203.242.20:', N'Value is higher than usual', 3, 2, 'Call.duration', 'ms', 8521.0, N'DIALOG_MANAGER:CONTEXT_CHANGES', 1901330441)
20240806 11:59:25.139 008D =FUN= [FunctionCheck] <App. context>:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO SYS_MonitoringMessage (MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext, SYS_MonitoringMessage.MonitoringMessage_Id)VALUES ('20240806 11:58:05.578', 'ZApplicationServer', '10.203.242.20:', N'Value is higher than usual', 3, 2, 'DBQuery.duration', 'ms', 1539.0, N'SELECT ADM_ScenarioSelection.ScenarioSelection_Id, ADM_ScenarioSelection.EduScenario_Id, ADM_ScenarioSelection.ApplicationForm_Id, ADM_ScenarioSelection.Enrollment_Id, ADM_ScenarioSelection.SelectionS', 1901330443)
20240806 11:59:25.139 008D =FUN= [FunctionCheck] <App. context>:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO SYS_MonitoringMessage (MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext, SYS_MonitoringMessage.MonitoringMessage_Id)VALUES ('20240806 11:58:05.578', 'ZApplicationServer', '10.203.242.20:', N'Value is higher than usual', 3, 2, 'DBQueryRowCount', '', 448.0, N'SELECT ADM_ScenarioSelection.ScenarioSelection_Id, ADM_ScenarioSelection.EduScenario_Id, ADM_ScenarioSelection.ApplicationForm_Id, ADM_ScenarioSelection.Enrollment_Id, ADM_ScenarioSelection.SelectionS', 1901330445)
20240806 11:59:25.139 008D =FUN= [FunctionCheck] <App. context>:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO SYS_MonitoringMessage (MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext, SYS_MonitoringMessage.MonitoringMessage_Id)VALUES ('20240806 11:58:50.656', 'ZApplicationServer', '10.203.242.20:', N'Value is less than usual', 3, 1, 'PhysicalConnectionCpuLoad_P', '', 38.0, N'updateCpuLoad', 1901330447)
20240806 11:59:25.139 008D =FUN= [FunctionCheck] <App. context>:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO SYS_MonitoringMessage (MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext, SYS_MonitoringMessage.MonitoringMessage_Id)VALUES ('20240806 11:59:20.730', 'ZApplicationServer', '10.203.242.20:', N'Value is higher than usual', 3, 2, 'OutputPacketSize', 'B', 3363456.0, N'1901330445:6934;1;default', 1901330449)
20240806 11:59:25.139 008D =FUN= [FunctionCheck] <App. context>:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO SYS_MonitoringMessage (MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext, SYS_MonitoringMessage.MonitoringMessage_Id)VALUES ('20240806 11:59:20.730', 'ZApplicationServer', '10.203.242.20:', N'Value is higher than usual', 3, 2, 'CallBundle.duration', 'ms', 7187.0, N'1901330445:6934;1;default', 1901330451)
20240806 11:59:25.139 008D =FUN= [FunctionCheck] <App. context>:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO SYS_MonitoringMessage (MessageDateTime, AppName, AppIdentifier, Message, MessageLevel, MessageType, VariableName, Unit, Value, MessageContext, SYS_MonitoringMessage.MonitoringMessage_Id)VALUES ('20240806 11:59:20.730', 'ZApplicationServer', '10.203.242.20:', N'Value is higher than usual', 3, 2, 'Call.duration', 'ms', 7181.0, N'ELECTIVE_ONLINE_APPLICATION:updatePromotedScenarioSelections', 1901330453)
20240806 11:59:25.211 00C2 =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 11:59:25.211 00C2 =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0003
20240806 11:59:25.211 00C2 =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=1
20240806 11:59:25.211 00C2 =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0003
20240806 11:59:25.212 008D =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 11:59:25.212 008D =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0010
20240806 11:59:25.212 008D =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=1
20240806 11:59:25.212 008D =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0010
20240806 11:59:25.318 007A =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:25.318 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:25.318 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0007
20240806 11:59:25.318 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnection.endQuery : 6 columns, 0 rows
20240806 11:59:25.318 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0007
20240806 11:59:25.318 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0007
20240806 11:59:25.318 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:25.320 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=2
20240806 11:59:25.320 007A =FUN= [NotificationCache] null: Cache updated, now from 20240806 11:53:38.712 to 20240806 11:57:48.721
20240806 11:59:25.320 007A =API= [ZDataAccess] ZDataServer: == ServerLoad: 38
20240806 11:59:25.320 007A =WRN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: zcare.zdataserver.ZDataAccess.getNotifications took too much time: 279 ms
20240806 11:59:25.320 007A =API= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 3 <- zcare.zdataserver.ZDataAccess.getNotifications
20240806 11:59:25.320 007A =API= [ZDataAccess] ZDataServer: == ServerLoad: 38
20240806 11:59:25.320 007A =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 11:59:25.320 007A =FUN= [CallFromClient] 1901330445:6934: InputMessage size 813
20240806 11:59:25.320 007A =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 520
20240806 11:59:25.320 007A =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 11:59:25.337 008D =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=0
20240806 11:59:25.337 008D =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0010
20240806 11:59:25.337 008D =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0010
20240806 11:59:25.337 008D =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:25.337 008D =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 11:59:25.337 008D =WRN= [FunctionCheck] <App. context>: zcare.zdek.system.SystemMonitor.dump took too much time: 375 ms
20240806 11:59:25.337 008D =API= [FunctionCheck] <App. context>: 1 <- zcare.zdek.system.SystemMonitor.dump
20240806 11:59:25.411 00C2 =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=0
20240806 11:59:25.412 00C2 =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0003
20240806 11:59:25.412 00C2 =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0003
20240806 11:59:25.412 00C2 =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:25.412 00C2 =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:25.412 00C2 =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zdeksystem.SYS_NamedLock.Session_Id, zdeksystem.SYS_NamedLock.ExpireAt, zdeksystem.SYS_NamedLock.NamedLock_ID, zdeksystem.SYS_NamedLock.Message FROM zdeksystem.SYS_NamedLock WHERE ((zdeksystem.SYS_NamedLock.LockName = 'SequenceCleanup:SEQUENCE_CLEANUP') AND (zdeksystem.SYS_NamedLock.NamedLockType_ID = 20012));
20240806 11:59:25.412 00C2 =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:25.412 00C2 =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:25.412 00C2 =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0011 - Allocated=10, Used=1
20240806 11:59:25.412 00C2 =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0011 - SELECT SYS_NamedLock.Session_Id, SYS_NamedLock.ExpireAt, SYS_NamedLock.NamedLock_ID, SYS_NamedLock.Message FROM SYS_NamedLock WHERE ((SYS_NamedLock.LockName = ?) AND (SYS_NamedLock.NamedLockType_ID = ?))
20240806 11:59:25.412 00C2 =FUN= [ZQL.PhysicalConnection] Parameters: 'SequenceCleanup:SEQUENCE_CLEANUP', 20012
20240806 11:59:25.412 00C2 =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:25.432 0071 =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=38)
20240806 11:59:25.433 0071 =API= [CallFromClient] null: => CACHE_UPDATE EduScenarioStudentList0 U
20240806 11:59:25.433 0071 =API= [CallFromClient] null: => CACHE_UPDATE Start decoding
20240806 11:59:25.433 0071 =API= [CallFromClient] null: => CACHE_UPDATE Decoded meta data
20240806 11:59:25.437 00C2 =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:25.437 00C2 =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:25.437 00C2 =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0011
20240806 11:59:25.437 00C2 =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.endQuery : 4 columns, 1 rows
20240806 11:59:25.437 00C2 =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0011
20240806 11:59:25.437 00C2 =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0011
20240806 11:59:25.437 00C2 =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:25.437 00C2 =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:25.437 00C2 =WRN= [FunctionCheck] <App. context>: zcare.zdek.zql.DBLock$Type.createLock took too much time: 400 ms
20240806 11:59:25.437 00C2 =API= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.DBLock$Type.createLock
20240806 11:59:25.438 00C2 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:25.438 00C2 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0014 - Allocated=10, Used=1
20240806 11:59:25.438 00C2 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.executeWithParameters : PDB0014 - DELETE FROM SYS_Server WHERE LastCallTime < ?
20240806 11:59:25.438 00C2 =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:55:53.239'
20240806 11:59:25.438 0071 =DBG= [DBAG] DbagAsDBCache.notifyChange(): Table: ADM_ScenarioSelection, op U, id 209799051 
20240806 11:59:25.441 0071 =API= [CallFromClient] null: => CACHE_UPDATE notifications made
20240806 11:59:25.441 0071 =INF= [DBAG] null: DBagCache DBG: Update one query.
20240806 11:59:25.441 0071 =INF= [DBAG] null: DBagCache DBG: Swapped info.
20240806 11:59:25.441 0071 =INF= [DBAG] null: DBagCache DBG: Removed obsolete rows.
20240806 11:59:25.441 0071 =INF= [DBAG] null: DBagCache DBG: Found notifications to check.
20240806 11:59:25.441 0071 =INF= [DBAG] null: DBagCache DBG: Decided notifications to consider.
20240806 11:59:25.441 0071 =INF= [DBAG] null: DBagCache DBG: Querying IDs.
20240806 11:59:25.441 0071 =DBG= [DBAG] DbagAsDBCache.update(): load new data query 
20240806 11:59:25.441 0071 =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id, zlmsadmin.ADM_ScenarioSelection.EduScenario_Id, zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id, zlmsadmin.ADM_ScenarioSelection.Enrollment_Id, zlmsadmin.ADM_ScenarioSelection.SelectionStatus, zlmsadmin.ADM_ScenarioSelection.JoiningDate, zlmsadmin.ADM_ScenarioSelection.ExitDate, zlmsadmin.ADM_ScenarioSelection.UserStamp, zlmsadmin.ADM_ScenarioSelection.TimeStamp, zlmsadmin.ADM_ScenarioSelection.NoteHistory_Id,zlmsadmin.ADM_Enrollment.Enrollment_Id, zlmsadmin.ADM_Enrollment.School_Id, zlmsadmin.ADM_Enrollment.Student_Id, zlmsadmin.ADM_Enrollment.Session_Id, zlmsadmin.ADM_Enrollment.StreamGrade_Id, zlmsadmin.ADM_Enrollment.Community_Id, zlmsadmin.ADM_Enrollment.EnrollmentType, zlmsadmin.ADM_Enrollment.EntryType, zlmsadmin.ADM_Enrollment.EntryDate, zlmsadmin.ADM_Enrollment.TransferFromSchool_Id, zlmsadmin.ADM_Enrollment.TransferToSchool_Id, zlmsadmin.ADM_Enrollment.ExitType, zlmsadmin.ADM_Enrollment.ExitReason, zlmsadmin.ADM_Enrollment.ExitDate, zlmsadmin.ADM_Enrollment.Note, zlmsadmin.ADM_Enrollment.IsSpecialNeed, zlmsadmin.ADM_Enrollment.ExternalId, zlmsadmin.ADM_Enrollment.UserStamp, zlmsadmin.ADM_Enrollment.TimeStamp, zlmsadmin.ADM_Enrollment.RegistrationStatus, zlmsadmin.ADM_Enrollment.TransferFromEnrollment_Id, zlmsadmin.ADM_Enrollment.TransferToCommunity_Id, zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment, zlmsadmin.ADM_Enrollment.RecomputePassFail, zlmsadmin.ADM_Enrollment.MandatoryEducation, zlmsadmin.ADM_Enrollment.IsWaitingList, zlmsadmin.ADM_Enrollment.CreateTimeStamp, zlmsadmin.ADM_Enrollment.IsNotOfficialEnrollment, zlmsadmin.ADM_Enrollment.UserNote, zlmsadmin.ADM_Enrollment.DeleteType, zlmsadmin.ADM_Enrollment.IsDeleted, zlmsadmin.ADM_Enrollment.CreationUser_Id,zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationType, zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus, zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade,zlmsadmin.ADM_StreamGrade.StreamGrade_Id, zlmsadmin.ADM_StreamGrade.Name, zlmsadmin.ADM_StreamGrade.Title, zlmsadmin.ADM_StreamGrade.Grade_Id,zlmsadmin.ADM_Grade.Grade_Id, zlmsadmin.ADM_Grade.EducationPathDef_Id, zlmsadmin.ADM_Grade.Name, zlmsadmin.ADM_Grade.Title, zlmsadmin.ADM_Grade.Position, zlmsadmin.ADM_Grade.SchoolLevel, zlmsadmin.ADM_Grade.MinAge, zlmsadmin.ADM_Grade.MinSpAge, zlmsadmin.ADM_Grade.MaxAge, zlmsadmin.ADM_Grade.MaxSpAge, zlmsadmin.ADM_Grade.MinAgeMargin, zlmsadmin.ADM_Grade.MinAgeMarginUnit, zlmsadmin.ADM_Grade.MaxAgeMargin, zlmsadmin.ADM_Grade.MaxAgeMarginUnit, zlmsadmin.ADM_Grade.CapacityGroup, zlmsadmin.ADM_Grade.MinAgeMargin2, zlmsadmin.ADM_Grade.MinAgeMarginUnit2, zlmsadmin.ADM_Grade.MaxAgeMargin2, zlmsadmin.ADM_Grade.MaxAgeMarginUnit2, zlmsadmin.ADM_Grade.ExternalId, zlmsadmin.ADM_Grade.CommunityTitlePrefix, zlmsadmin.ADM_Grade.AgeReferenceDate, zlmsadmin.ADM_Grade.VStartDate, zlmsadmin.ADM_Grade.UserStamp, zlmsadmin.ADM_Grade.TimeStamp,zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id, zlmsadmin.ADM_EducationPathDef.EducationPath_Id, zlmsadmin.ADM_EducationPathDef.StartDate, zlmsadmin.ADM_EducationPathDef.EndDate, zlmsadmin.ADM_EducationPathDef.IsActive, zlmsadmin.ADM_EducationPathDef.EducationType, zlmsadmin.ADM_EducationPathDef.EducationFocus,zlmsadmin.ADM_SessionDef.SessionDef_Id, zlmsadmin.ADM_SessionDef.EducationPathDef_Id, zlmsadmin.ADM_SessionDef.Title, zlmsadmin.ADM_SessionDef.SessionType, zlmsadmin.ADM_SessionDef.Duration, zlmsadmin.ADM_SessionDef.DurationUnit, zlmsadmin.ADM_SessionDef.Parent_Id, zlmsadmin.ADM_SessionDef.Position,zlmsadmin.ADM_Session.Session_Id, zlmsadmin.ADM_Session.AcademicYear_Id, zlmsadmin.ADM_Session.SessionDef_Id, zlmsadmin.ADM_Session.Title, zlmsadmin.ADM_Session.Parent_Id, zlmsadmin.ADM_Session.StartDate, zlmsadmin.ADM_Session.EndDate, zlmsadmin.ADM_Session.Position, zlmsadmin.ADM_Session.UserStamp, zlmsadmin.ADM_Session.TimeStamp,zmedcommon.COMM_ApplicationForm.ApplicationForm_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormNumber, zmedcommon.COMM_ApplicationForm.ApplicationDate, zmedcommon.COMM_ApplicationForm.Applicant_Id, zmedcommon.COMM_ApplicationForm.Workflow_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormType, zmedcommon.COMM_ApplicationForm.Note, zmedcommon.COMM_ApplicationForm.TimeStamp, zmedcommon.COMM_ApplicationForm.UserStamp,zlmsregistration.REG_StudentRegistration.StudentRegistration_Id, zlmsregistration.REG_StudentRegistration.ApplicationForm_Id, zlmsregistration.REG_StudentRegistration.Student_Id, zlmsregistration.REG_StudentRegistration.AcademicYear_Id, zlmsregistration.REG_StudentRegistration.EducationPath_Id, zlmsregistration.REG_StudentRegistration.Enrollment_Id, zlmsregistration.REG_StudentRegistration.EducationType, zlmsregistration.REG_StudentRegistration.EducationFocus, zlmsregistration.REG_StudentRegistration.StreamGrade, zlmsregistration.REG_StudentRegistration.School_Id, zlmsregistration.REG_StudentRegistration.IsTransportRequired, zlmsregistration.REG_StudentRegistration.ExamTime, zlmsregistration.REG_StudentRegistration.ExamScore, zlmsregistration.REG_StudentRegistration.InterviewTime, zlmsregistration.REG_StudentRegistration.DocumentList_Id, zlmsregistration.REG_StudentRegistration.CitizenshipStatus, zlmsregistration.REG_StudentRegistration.ParentWorkPlace, zlmsregistration.REG_StudentRegistration.IsSpecialNeed, zlmsregistration.REG_StudentRegistration.TimeStamp, zlmsregistration.REG_StudentRegistration.UserStamp, zlmsregistration.REG_StudentRegistration.InCatchmentArea, zlmsregistration.REG_StudentRegistration.ProgramCategory_Id,zmedcommon.COMM_ApplicationFormState.ApplicationFormState_Id, zmedcommon.COMM_ApplicationFormState.WorkflowState_Id, zmedcommon.COMM_ApplicationFormState.PrevWorkflowState_Id, zmedcommon.COMM_ApplicationFormState.StateStartDate, zmedcommon.COMM_ApplicationFormState.StateEndDate, zmedcommon.COMM_ApplicationFormState.PerformedByUser_Id, zmedcommon.COMM_ApplicationFormState.AttributeList_Id, zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id, zmedcommon.COMM_ApplicationFormState.IsCurrent, zmedcommon.COMM_ApplicationFormState.Note, zmedcommon.COMM_ApplicationFormState.TimeStamp, zmedcommon.COMM_ApplicationFormState.UserStamp,zmedcommon.COMM_WorkflowState.WorkflowState_Id, zmedcommon.COMM_WorkflowState.Workflow_Id, zmedcommon.COMM_WorkflowState.Name, zmedcommon.COMM_WorkflowState.StateCode, zmedcommon.COMM_WorkflowState.Note FROM zlmsadmin.ADM_ScenarioSelection JOIN zlmsadmin.ADM_Enrollment! ON zlmsadmin.ADM_ScenarioSelection.Enrollment_Id = zlmsadmin.ADM_Enrollment.Enrollment_Id JOIN zlmsadmin.ADM_EduScenario ON zlmsadmin.ADM_ScenarioSelection.EduScenario_Id = zlmsadmin.ADM_EduScenario.EduScenario_Id JOIN zlmsadmin.ADM_EduScenarioStreamGrade ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id JOIN zlmsadmin.ADM_StreamGrade ON (zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade = zlmsadmin.ADM_StreamGrade.Name) JOIN zlmsadmin.ADM_Grade ON zlmsadmin.ADM_StreamGrade.Grade_Id = zlmsadmin.ADM_Grade.Grade_Id JOIN zlmsadmin.ADM_EducationPathDef ON ((zlmsadmin.ADM_EducationPathDef.EducationPath_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus = zlmsadmin.ADM_EducationPathDef.EducationFocus) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationType = zlmsadmin.ADM_EducationPathDef.EducationType)) JOIN zlmsadmin.ADM_SessionDef ON zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id = zlmsadmin.ADM_SessionDef.EducationPathDef_Id JOIN zlmsadmin.ADM_Session ON zlmsadmin.ADM_SessionDef.SessionDef_Id = zlmsadmin.ADM_Session.SessionDef_Id AND (((zlmsadmin.ADM_Session.AcademicYear_Id = zlmsadmin.ADM_EduScenario.AcademicYear_Id) AND (zlmsadmin.ADM_Grade.EducationPathDef_Id = zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id) AND (zlmsadmin.ADM_Session.Parent_Id IS NULL))) LEFT OUTER JOIN zmedcommon.COMM_ApplicationForm ON zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id = zmedcommon.COMM_ApplicationForm.ApplicationForm_Id LEFT OUTER JOIN zlmsregistration.REG_StudentRegistration ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zlmsregistration.REG_StudentRegistration.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationFormState ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_WorkflowState ON zmedcommon.COMM_ApplicationFormState.WorkflowState_Id = zmedcommon.COMM_WorkflowState.WorkflowState_Id WHERE (((((zlmsadmin.ADM_EduScenario.AcademicYear_Id = 2025) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id = 801)) AND (zlmsadmin.ADM_Enrollment.School_Id IN(838))) AND (((zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (zmedcommon.COMM_ApplicationFormState.IsCurrent = 1) AND (zmedcommon.COMM_WorkflowState.StateCode <> 0)) OR (zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NULL))) AND (zlmsadmin.ADM_ScenarioSelection.ExitDate IS NULL) AND (zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment = 1)) AND (zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id IN(209799051));
20240806 11:59:25.441 0071 =API= [FunctionCheck] <App. context>: 2 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: administrator:1901330445
20240806 11:59:25.442 0071 =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id, zlmsadmin.ADM_ScenarioSelection.EduScenario_Id, zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id, zlmsadmin.ADM_ScenarioSelection.Enrollment_Id, zlmsadmin.ADM_ScenarioSelection.SelectionStatus, zlmsadmin.ADM_ScenarioSelection.JoiningDate, zlmsadmin.ADM_ScenarioSelection.ExitDate, zlmsadmin.ADM_ScenarioSelection.UserStamp, zlmsadmin.ADM_ScenarioSelection.TimeStamp, zlmsadmin.ADM_ScenarioSelection.NoteHistory_Id,zlmsadmin.ADM_Enrollment.Enrollment_Id, zlmsadmin.ADM_Enrollment.School_Id, zlmsadmin.ADM_Enrollment.Student_Id, zlmsadmin.ADM_Enrollment.Session_Id, zlmsadmin.ADM_Enrollment.StreamGrade_Id, zlmsadmin.ADM_Enrollment.Community_Id, zlmsadmin.ADM_Enrollment.EnrollmentType, zlmsadmin.ADM_Enrollment.EntryType, zlmsadmin.ADM_Enrollment.EntryDate, zlmsadmin.ADM_Enrollment.TransferFromSchool_Id, zlmsadmin.ADM_Enrollment.TransferToSchool_Id, zlmsadmin.ADM_Enrollment.ExitType, zlmsadmin.ADM_Enrollment.ExitReason, zlmsadmin.ADM_Enrollment.ExitDate, zlmsadmin.ADM_Enrollment.Note, zlmsadmin.ADM_Enrollment.IsSpecialNeed, zlmsadmin.ADM_Enrollment.ExternalId, zlmsadmin.ADM_Enrollment.UserStamp, zlmsadmin.ADM_Enrollment.TimeStamp, zlmsadmin.ADM_Enrollment.RegistrationStatus, zlmsadmin.ADM_Enrollment.TransferFromEnrollment_Id, zlmsadmin.ADM_Enrollment.TransferToCommunity_Id, zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment, zlmsadmin.ADM_Enrollment.RecomputePassFail, zlmsadmin.ADM_Enrollment.MandatoryEducation, zlmsadmin.ADM_Enrollment.IsWaitingList, zlmsadmin.ADM_Enrollment.CreateTimeStamp, zlmsadmin.ADM_Enrollment.IsNotOfficialEnrollment, zlmsadmin.ADM_Enrollment.UserNote, zlmsadmin.ADM_Enrollment.DeleteType, zlmsadmin.ADM_Enrollment.IsDeleted, zlmsadmin.ADM_Enrollment.CreationUser_Id,zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationType, zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus, zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade,zlmsadmin.ADM_StreamGrade.StreamGrade_Id, zlmsadmin.ADM_StreamGrade.Name, zlmsadmin.ADM_StreamGrade.Title, zlmsadmin.ADM_StreamGrade.Grade_Id,zlmsadmin.ADM_Grade.Grade_Id, zlmsadmin.ADM_Grade.EducationPathDef_Id, zlmsadmin.ADM_Grade.Name, zlmsadmin.ADM_Grade.Title, zlmsadmin.ADM_Grade.Position, zlmsadmin.ADM_Grade.SchoolLevel, zlmsadmin.ADM_Grade.MinAge, zlmsadmin.ADM_Grade.MinSpAge, zlmsadmin.ADM_Grade.MaxAge, zlmsadmin.ADM_Grade.MaxSpAge, zlmsadmin.ADM_Grade.MinAgeMargin, zlmsadmin.ADM_Grade.MinAgeMarginUnit, zlmsadmin.ADM_Grade.MaxAgeMargin, zlmsadmin.ADM_Grade.MaxAgeMarginUnit, zlmsadmin.ADM_Grade.CapacityGroup, zlmsadmin.ADM_Grade.MinAgeMargin2, zlmsadmin.ADM_Grade.MinAgeMarginUnit2, zlmsadmin.ADM_Grade.MaxAgeMargin2, zlmsadmin.ADM_Grade.MaxAgeMarginUnit2, zlmsadmin.ADM_Grade.ExternalId, zlmsadmin.ADM_Grade.CommunityTitlePrefix, zlmsadmin.ADM_Grade.AgeReferenceDate, zlmsadmin.ADM_Grade.VStartDate, zlmsadmin.ADM_Grade.UserStamp, zlmsadmin.ADM_Grade.TimeStamp,zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id, zlmsadmin.ADM_EducationPathDef.EducationPath_Id, zlmsadmin.ADM_EducationPathDef.StartDate, zlmsadmin.ADM_EducationPathDef.EndDate, zlmsadmin.ADM_EducationPathDef.IsActive, zlmsadmin.ADM_EducationPathDef.EducationType, zlmsadmin.ADM_EducationPathDef.EducationFocus,zlmsadmin.ADM_SessionDef.SessionDef_Id, zlmsadmin.ADM_SessionDef.EducationPathDef_Id, zlmsadmin.ADM_SessionDef.Title, zlmsadmin.ADM_SessionDef.SessionType, zlmsadmin.ADM_SessionDef.Duration, zlmsadmin.ADM_SessionDef.DurationUnit, zlmsadmin.ADM_SessionDef.Parent_Id, zlmsadmin.ADM_SessionDef.Position,zlmsadmin.ADM_Session.Session_Id, zlmsadmin.ADM_Session.AcademicYear_Id, zlmsadmin.ADM_Session.SessionDef_Id, zlmsadmin.ADM_Session.Title, zlmsadmin.ADM_Session.Parent_Id, zlmsadmin.ADM_Session.StartDate, zlmsadmin.ADM_Session.EndDate, zlmsadmin.ADM_Session.Position, zlmsadmin.ADM_Session.UserStamp, zlmsadmin.ADM_Session.TimeStamp,zmedcommon.COMM_ApplicationForm.ApplicationForm_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormNumber, zmedcommon.COMM_ApplicationForm.ApplicationDate, zmedcommon.COMM_ApplicationForm.Applicant_Id, zmedcommon.COMM_ApplicationForm.Workflow_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormType, zmedcommon.COMM_ApplicationForm.Note, zmedcommon.COMM_ApplicationForm.TimeStamp, zmedcommon.COMM_ApplicationForm.UserStamp,zlmsregistration.REG_StudentRegistration.StudentRegistration_Id, zlmsregistration.REG_StudentRegistration.ApplicationForm_Id, zlmsregistration.REG_StudentRegistration.Student_Id, zlmsregistration.REG_StudentRegistration.AcademicYear_Id, zlmsregistration.REG_StudentRegistration.EducationPath_Id, zlmsregistration.REG_StudentRegistration.Enrollment_Id, zlmsregistration.REG_StudentRegistration.EducationType, zlmsregistration.REG_StudentRegistration.EducationFocus, zlmsregistration.REG_StudentRegistration.StreamGrade, zlmsregistration.REG_StudentRegistration.School_Id, zlmsregistration.REG_StudentRegistration.IsTransportRequired, zlmsregistration.REG_StudentRegistration.ExamTime, zlmsregistration.REG_StudentRegistration.ExamScore, zlmsregistration.REG_StudentRegistration.InterviewTime, zlmsregistration.REG_StudentRegistration.DocumentList_Id, zlmsregistration.REG_StudentRegistration.CitizenshipStatus, zlmsregistration.REG_StudentRegistration.ParentWorkPlace, zlmsregistration.REG_StudentRegistration.IsSpecialNeed, zlmsregistration.REG_StudentRegistration.TimeStamp, zlmsregistration.REG_StudentRegistration.UserStamp, zlmsregistration.REG_StudentRegistration.InCatchmentArea, zlmsregistration.REG_StudentRegistration.ProgramCategory_Id,zmedcommon.COMM_ApplicationFormState.ApplicationFormState_Id, zmedcommon.COMM_ApplicationFormState.WorkflowState_Id, zmedcommon.COMM_ApplicationFormState.PrevWorkflowState_Id, zmedcommon.COMM_ApplicationFormState.StateStartDate, zmedcommon.COMM_ApplicationFormState.StateEndDate, zmedcommon.COMM_ApplicationFormState.PerformedByUser_Id, zmedcommon.COMM_ApplicationFormState.AttributeList_Id, zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id, zmedcommon.COMM_ApplicationFormState.IsCurrent, zmedcommon.COMM_ApplicationFormState.Note, zmedcommon.COMM_ApplicationFormState.TimeStamp, zmedcommon.COMM_ApplicationFormState.UserStamp,zmedcommon.COMM_WorkflowState.WorkflowState_Id, zmedcommon.COMM_WorkflowState.Workflow_Id, zmedcommon.COMM_WorkflowState.Name, zmedcommon.COMM_WorkflowState.StateCode, zmedcommon.COMM_WorkflowState.Note FROM zlmsadmin.ADM_ScenarioSelection JOIN zlmsadmin.ADM_Enrollment! ON zlmsadmin.ADM_ScenarioSelection.Enrollment_Id = zlmsadmin.ADM_Enrollment.Enrollment_Id JOIN zlmsadmin.ADM_EduScenario ON zlmsadmin.ADM_ScenarioSelection.EduScenario_Id = zlmsadmin.ADM_EduScenario.EduScenario_Id JOIN zlmsadmin.ADM_EduScenarioStreamGrade ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id JOIN zlmsadmin.ADM_StreamGrade ON (zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade = zlmsadmin.ADM_StreamGrade.Name) JOIN zlmsadmin.ADM_Grade ON zlmsadmin.ADM_StreamGrade.Grade_Id = zlmsadmin.ADM_Grade.Grade_Id JOIN zlmsadmin.ADM_EducationPathDef ON ((zlmsadmin.ADM_EducationPathDef.EducationPath_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus = zlmsadmin.ADM_EducationPathDef.EducationFocus) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationType = zlmsadmin.ADM_EducationPathDef.EducationType)) JOIN zlmsadmin.ADM_SessionDef ON zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id = zlmsadmin.ADM_SessionDef.EducationPathDef_Id JOIN zlmsadmin.ADM_Session ON zlmsadmin.ADM_SessionDef.SessionDef_Id = zlmsadmin.ADM_Session.SessionDef_Id AND (((zlmsadmin.ADM_Session.AcademicYear_Id = zlmsadmin.ADM_EduScenario.AcademicYear_Id) AND (zlmsadmin.ADM_Grade.EducationPathDef_Id = zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id) AND (zlmsadmin.ADM_Session.Parent_Id IS NULL))) LEFT OUTER JOIN zmedcommon.COMM_ApplicationForm ON zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id = zmedcommon.COMM_ApplicationForm.ApplicationForm_Id LEFT OUTER JOIN zlmsregistration.REG_StudentRegistration ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zlmsregistration.REG_StudentRegistration.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationFormState ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_WorkflowState ON zmedcommon.COMM_ApplicationFormState.WorkflowState_Id = zmedcommon.COMM_WorkflowState.WorkflowState_Id WHERE (((((zlmsadmin.ADM_EduScenario.AcademicYear_Id = 2025) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id = 801)) AND (zlmsadmin.ADM_Enrollment.School_Id IN(838))) AND (((zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (zmedcommon.COMM_ApplicationFormState.IsCurrent = 1) AND (zmedcommon.COMM_WorkflowState.StateCode <> 0)) OR (zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NULL))) AND (zlmsadmin.ADM_ScenarioSelection.ExitDate IS NULL) AND (zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment = 1)) AND (zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id IN(209799051));
20240806 11:59:25.443 0071 =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:25.444 0071 =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:25.444 0071 =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0012 - Allocated=10, Used=2
20240806 11:59:25.444 0071 =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0012 - SELECT ADM_ScenarioSelection.ScenarioSelection_Id, ADM_ScenarioSelection.EduScenario_Id, ADM_ScenarioSelection.ApplicationForm_Id, ADM_ScenarioSelection.Enrollment_Id, ADM_ScenarioSelection.SelectionStatus, ADM_ScenarioSelection.JoiningDate, ADM_ScenarioSelection.ExitDate, ADM_ScenarioSelection.UserStamp, ADM_ScenarioSelection.TimeStamp, ADM_ScenarioSelection.NoteHistory_Id, ADM_Enrollment.Enrollment_Id, ADM_Enrollment.School_Id, ADM_Enrollment.Student_Id, ADM_Enrollment.Session_Id, ADM_Enrollment.StreamGrade_Id, ADM_Enrollment.Community_Id, ADM_Enrollment.EnrollmentType, ADM_Enrollment.EntryType, ADM_Enrollment.EntryDate, ADM_Enrollment.TransferFromSchool_Id, ADM_Enrollment.TransferToSchool_Id, ADM_Enrollment.ExitType, ADM_Enrollment.ExitReason, ADM_Enrollment.ExitDate, ADM_Enrollment.Note, ADM_Enrollment.IsSpecialNeed, ADM_Enrollment.ExternalId, ADM_Enrollment.UserStamp, ADM_Enrollment.TimeStamp, ADM_Enrollment.RegistrationStatus, ADM_Enrollment.TransferFromEnrollment_Id, ADM_Enrollment.TransferToCommunity_Id, ADM_Enrollment.IsYearActiveEnrollment, ADM_Enrollment.RecomputePassFail, ADM_Enrollment.MandatoryEducation, ADM_Enrollment.IsWaitingList, ADM_Enrollment.CreateTimeStamp, ADM_Enrollment.IsNotOfficialEnrollment, ADM_Enrollment.UserNote, ADM_Enrollment.DeleteType, ADM_Enrollment.IsDeleted, ADM_Enrollment.CreationUser_Id, ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, ADM_EduScenarioStreamGrade.EduScenario_Id, ADM_EduScenarioStreamGrade.EducationType, ADM_EduScenarioStreamGrade.EducationPath_Id, ADM_EduScenarioStreamGrade.EducationFocus, ADM_EduScenarioStreamGrade.StreamGrade, ADM_StreamGrade.StreamGrade_Id, ADM_StreamGrade.Name, ADM_StreamGrade.Title, ADM_StreamGrade.Grade_Id, ADM_Grade.Grade_Id, ADM_Grade.EducationPathDef_Id, ADM_Grade.Name, ADM_Grade.Title, ADM_Grade.Position, ADM_Grade.SchoolLevel, ADM_Grade.MinAge, ADM_Grade.MinSpAge, ADM_Grade.MaxAge, ADM_Grade.MaxSpAge, ADM_Grade.MinAgeMargin, ADM_Grade.MinAgeMarginUnit, ADM_Grade.MaxAgeMargin, ADM_Grade.MaxAgeMarginUnit, ADM_Grade.CapacityGroup, ADM_Grade.MinAgeMargin2, ADM_Grade.MinAgeMarginUnit2, ADM_Grade.MaxAgeMargin2, ADM_Grade.MaxAgeMarginUnit2, ADM_Grade.ExternalId, ADM_Grade.CommunityTitlePrefix, ADM_Grade.AgeReferenceDate, ADM_Grade.VStartDate, ADM_Grade.UserStamp, ADM_Grade.TimeStamp, ADM_EducationPathDef.EducationPathDef_Id, ADM_EducationPathDef.EducationPath_Id, ADM_EducationPathDef.StartDate, ADM_EducationPathDef.EndDate, ADM_EducationPathDef.IsActive, ADM_EducationPathDef.EducationType, ADM_EducationPathDef.EducationFocus, ADM_SessionDef.SessionDef_Id, ADM_SessionDef.EducationPathDef_Id, ADM_SessionDef.Title, ADM_SessionDef.SessionType, ADM_SessionDef.Duration, ADM_SessionDef.DurationUnit, ADM_SessionDef.Parent_Id, ADM_SessionDef.Position, ADM_Session.Session_Id, ADM_Session.AcademicYear_Id, ADM_Session.SessionDef_Id, ADM_Session.Title, ADM_Session.Parent_Id, ADM_Session.StartDate, ADM_Session.EndDate, ADM_Session.Position, ADM_Session.UserStamp, ADM_Session.TimeStamp, COMM_ApplicationForm.ApplicationForm_Id, COMM_ApplicationForm.ApplicationFormNumber, COMM_ApplicationForm.ApplicationDate, COMM_ApplicationForm.Applicant_Id, COMM_ApplicationForm.Workflow_Id, COMM_ApplicationForm.ApplicationFormType, COMM_ApplicationForm.Note, COMM_ApplicationForm.TimeStamp, COMM_ApplicationForm.UserStamp, REG_StudentRegistration.StudentRegistration_Id, REG_StudentRegistration.ApplicationForm_Id, REG_StudentRegistration.Student_Id, REG_StudentRegistration.AcademicYear_Id, REG_StudentRegistration.EducationPath_Id, REG_StudentRegistration.Enrollment_Id, REG_StudentRegistration.EducationType, REG_StudentRegistration.EducationFocus, REG_StudentRegistration.StreamGrade, REG_StudentRegistration.School_Id, REG_StudentRegistration.IsTransportRequired, REG_StudentRegistration.ExamTime, REG_StudentRegistration.ExamScore, REG_StudentRegistration.InterviewTime, REG_StudentRegistration.DocumentList_Id, REG_StudentRegistration.CitizenshipStatus, REG_StudentRegistration.ParentWorkPlace, REG_StudentRegistration.IsSpecialNeed, REG_StudentRegistration.TimeStamp, REG_StudentRegistration.UserStamp, REG_StudentRegistration.InCatchmentArea, REG_StudentRegistration.ProgramCategory_Id, COMM_ApplicationFormState.ApplicationFormState_Id, COMM_ApplicationFormState.WorkflowState_Id, COMM_ApplicationFormState.PrevWorkflowState_Id, COMM_ApplicationFormState.StateStartDate, COMM_ApplicationFormState.StateEndDate, COMM_ApplicationFormState.PerformedByUser_Id, COMM_ApplicationFormState.AttributeList_Id, COMM_ApplicationFormState.ApplicationForm_Id, COMM_ApplicationFormState.IsCurrent, COMM_ApplicationFormState.Note, COMM_ApplicationFormState.TimeStamp, COMM_ApplicationFormState.UserStamp, COMM_WorkflowState.WorkflowState_Id, COMM_WorkflowState.Workflow_Id, COMM_WorkflowState.Name, COMM_WorkflowState.StateCode, COMM_WorkflowState.Note FROM ADM_ScenarioSelection JOIN ADM_Enrollment ON ((ADM_Enrollment.IsDeleted = 0)) AND ((ADM_ScenarioSelection.Enrollment_Id = ADM_Enrollment.Enrollment_Id)) JOIN ADM_EduScenario ON (ADM_ScenarioSelection.EduScenario_Id = ADM_EduScenario.EduScenario_Id) JOIN ADM_EduScenarioStreamGrade ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioStreamGrade.EduScenario_Id) JOIN ADM_StreamGrade ON (ADM_EduScenarioStreamGrade.StreamGrade = ADM_StreamGrade.Name) JOIN ADM_Grade ON (ADM_StreamGrade.Grade_Id = ADM_Grade.Grade_Id) JOIN ADM_EducationPathDef ON (((ADM_EducationPathDef.EducationPath_Id = ADM_EduScenarioStreamGrade.EducationPath_Id) AND (ADM_EduScenarioStreamGrade.EducationFocus = ADM_EducationPathDef.EducationFocus)) AND (ADM_EduScenarioStreamGrade.EducationType = ADM_EducationPathDef.EducationType)) JOIN ADM_SessionDef ON (ADM_EducationPathDef.EducationPathDef_Id = ADM_SessionDef.EducationPathDef_Id) JOIN ADM_Session ON ((ADM_SessionDef.SessionDef_Id = ADM_Session.SessionDef_Id) AND (((ADM_Session.AcademicYear_Id = ADM_EduScenario.AcademicYear_Id) AND (ADM_Grade.EducationPathDef_Id = ADM_EducationPathDef.EducationPathDef_Id)) AND (ADM_Session.Parent_Id IS NULL))) LEFT OUTER JOIN COMM_ApplicationForm ON (ADM_ScenarioSelection.ApplicationForm_Id = COMM_ApplicationForm.ApplicationForm_Id) LEFT OUTER JOIN REG_StudentRegistration ON (COMM_ApplicationForm.ApplicationForm_Id = REG_StudentRegistration.ApplicationForm_Id) LEFT OUTER JOIN COMM_ApplicationFormState ON (COMM_ApplicationForm.ApplicationForm_Id = COMM_ApplicationFormState.ApplicationForm_Id) LEFT OUTER JOIN COMM_WorkflowState ON (COMM_ApplicationFormState.WorkflowState_Id = COMM_WorkflowState.WorkflowState_Id) WHERE (((((((ADM_EduScenario.AcademicYear_Id = ?) AND (ADM_EduScenarioStreamGrade.EducationPath_Id = ?)) AND (ADM_Enrollment.School_Id IN(?))) AND ((((COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (COMM_ApplicationFormState.IsCurrent = ?)) AND (COMM_WorkflowState.StateCode <> ?)) OR (COMM_ApplicationForm.ApplicationForm_Id IS NULL))) AND (ADM_ScenarioSelection.ExitDate IS NULL)) AND (ADM_Enrollment.IsYearActiveEnrollment = ?)) AND (ADM_ScenarioSelection.ScenarioSelection_Id IN(?)))
20240806 11:59:25.445 0071 =FUN= [ZQL.PhysicalConnection] Parameters: 2025, 801, 838, 1, 0, 1, 209799051
20240806 11:59:25.445 0071 =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:25.484 00C2 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.executeWithParameters
20240806 11:59:25.484 00C2 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0014
20240806 11:59:25.484 00C2 =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0014
20240806 11:59:25.484 00C2 =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:25.484 00C2 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 11:59:25.484 00C2 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:25.485 00C2 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0009 - Allocated=10, Used=2
20240806 11:59:25.485 00C2 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0009
20240806 11:59:25.512 00C2 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=1
20240806 11:59:25.512 00C2 =DBG= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.ZqlParser.parseScript : UPDATE zdeksystem.SYS_NamedLock SET ExpireAt = '20240806 10:59:25.484' WHERE NamedLock_ID = 1922301973;
20240806 11:59:25.512 00C2 =DBG= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:25.512 00C2 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0009
20240806 11:59:25.512 00C2 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=2
20240806 11:59:25.512 00C2 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0009
20240806 11:59:25.512 00C2 =FUN= [FunctionCheck] <App. context>:         zcare.zdek.zql.PhysicalConnection.execute: =>  UPDATE SYS_NamedLock SET ExpireAt = '20240806 10:59:25.484', SYS_NamedLock.UserStamp = 2, SYS_NamedLock.TimeStamp = '20240806 11:59:25.512' WHERE (NamedLock_ID = 1922301973)
20240806 11:59:25.537 00C2 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 11:59:25.537 00C2 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0009
20240806 11:59:25.537 00C2 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=1
20240806 11:59:25.537 00C2 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0009
20240806 11:59:25.621 0071 =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:25.621 0071 =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:25.621 0071 =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0012
20240806 11:59:25.621 0071 =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.endQuery : 158 columns, 1 rows
20240806 11:59:25.621 0071 =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0012
20240806 11:59:25.621 0071 =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0012
20240806 11:59:25.621 0071 =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:25.621 0071 =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 11:59:25.622 0071 =API= [FunctionCheck] <App. context>: 2 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 11:59:25.622 0071 =API= [DATAPROXY] sqlSelect:Result: 0: C, 158 cols, 1 rows
20240806 11:59:25.622 0071 =DBG= [DBAG] DBagAsBCache.loadquery: loaded 9 entities
20240806 11:59:25.622 0071 =INF= [DBAG] null: DBagCache DBG: All dones.
20240806 11:59:25.622 0071 =INF= [DBAG] null: DBagCache DBG: Sending notification.
20240806 11:59:25.622 0071 =DBG= [DBAG] DbagAsDBCache.update(): modification -> send CACHE_UPDATE_NOTIF
20240806 11:59:25.622 0071 =INF= [DBAG] null: DBagCache DBG: Sending notification.
20240806 11:59:25.622 0071 =INF= [DBAG] null: DBagCache DBG: Sent notification.
20240806 11:59:25.622 0071 =API= [CallFromClient] null: => CACHE_UPDATE All done
20240806 11:59:25.623 0071 =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:NO_OP
20240806 11:59:25.623 0071 =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 11:59:25.623 0071 =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 11:59:25.623 0071 =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 11:59:25.623 0071 =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 11:59:25.623 0071 =API= [CallClient] null: <= CACHE_UPDATE EduScenarioStudentList0
20240806 11:59:25.623 0071 =FUN= [CallFromClient] 1901330445:6934: InputMessage size 3027
20240806 11:59:25.623 0071 =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 2379
20240806 11:59:25.623 0071 =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 11:59:25.640 006B =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=38)
20240806 11:59:25.640 006B =API= [CallFromClient] null: => CACHE_UPDATE MESSAGE_LIST0 U
20240806 11:59:25.640 006B =API= [CallFromClient] null: => CACHE_UPDATE Start decoding
20240806 11:59:25.641 006B =API= [CallFromClient] null: => CACHE_UPDATE Decoded meta data
20240806 11:59:25.641 006B =DBG= [DBAG] DbagAsDBCache.notifyChange(): Table: COMM_Message, op I, id 1901330433 
20240806 11:59:25.641 006B =DBG= [DBAG] DbagAsDBCache.notifyChange(): Table: COMM_Message, op I, id 1901330435 
20240806 11:59:25.641 006B =API= [CallFromClient] null: => CACHE_UPDATE notifications made
20240806 11:59:25.641 006B =INF= [DBAG] null: DBagCache DBG: Update one query.
20240806 11:59:25.641 006B =INF= [DBAG] null: DBagCache DBG: Swapped info.
20240806 11:59:25.641 006B =INF= [DBAG] null: DBagCache DBG: Removed obsolete rows.
20240806 11:59:25.641 006B =INF= [DBAG] null: DBagCache DBG: Found notifications to check.
20240806 11:59:25.641 006B =INF= [DBAG] null: DBagCache DBG: checking filter for: COMM_Message
20240806 11:59:25.646 006B =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zmedcommon.COMM_MessageDelivery.Message_Id, zmedcommon.COMM_MessageDelivery.DestinationUser_Id FROM zmedcommon.COMM_MessageDelivery WHERE (zmedcommon.COMM_MessageDelivery.Message_Id IN(1901330433, 1901330435));
20240806 11:59:25.646 006B =API= [FunctionCheck] <App. context>: 2 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: administrator:1901330445
20240806 11:59:25.646 006B =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zmedcommon.COMM_MessageDelivery.Message_Id, zmedcommon.COMM_MessageDelivery.DestinationUser_Id FROM zmedcommon.COMM_MessageDelivery WHERE (zmedcommon.COMM_MessageDelivery.Message_Id IN(1901330433, 1901330435));
20240806 11:59:25.646 006B =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:25.646 006B =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:25.646 006B =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0013 - Allocated=10, Used=2
20240806 11:59:25.646 006B =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0013 - SELECT COMM_MessageDelivery.Message_Id, COMM_MessageDelivery.DestinationUser_Id FROM COMM_MessageDelivery WHERE (COMM_MessageDelivery.Message_Id IN(?, ?))
20240806 11:59:25.646 006B =FUN= [ZQL.PhysicalConnection] Parameters: 1901330433, 1901330435
20240806 11:59:25.646 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:25.716 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:25.716 006B =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:25.716 006B =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0013
20240806 11:59:25.717 006B =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.endQuery : 2 columns, 6 rows
20240806 11:59:25.717 006B =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0013
20240806 11:59:25.717 006B =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0013
20240806 11:59:25.717 006B =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:25.717 006B =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 11:59:25.717 006B =API= [FunctionCheck] <App. context>: 2 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 11:59:25.717 006B =API= [DATAPROXY] sqlSelect:Result: 0: C, 2 cols, 6 rows
20240806 11:59:25.722 006B =INF= [DBAG] null: DBagCache DBG: checking filter for: COMM_Message
20240806 11:59:25.722 006B =INF= [DBAG] null: DBagCache DBG: Decided notifications to consider.
20240806 11:59:25.722 006B =INF= [DBAG] null: DBagCache DBG: All dones.
20240806 11:59:25.722 006B =INF= [DBAG] null: DBagCache DBG: Update one query.
20240806 11:59:25.722 006B =INF= [DBAG] null: DBagCache DBG: Swapped info.
20240806 11:59:25.722 006B =INF= [DBAG] null: DBagCache DBG: Removed obsolete rows.
20240806 11:59:25.722 006B =INF= [DBAG] null: DBagCache DBG: Found notifications to check.
20240806 11:59:25.722 006B =INF= [DBAG] null: DBagCache DBG: checking filter for: COMM_Message
20240806 11:59:25.722 006B =INF= [DBAG] null: DBagCache DBG: checking filter for: COMM_Message
20240806 11:59:25.722 006B =INF= [DBAG] null: DBagCache DBG: Decided notifications to consider.
20240806 11:59:25.722 006B =INF= [DBAG] null: DBagCache DBG: All dones.
20240806 11:59:25.722 006B =API= [CallFromClient] null: => CACHE_UPDATE All done
20240806 11:59:25.722 006B =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:NO_OP
20240806 11:59:25.722 006B =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 11:59:25.723 006B =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 11:59:25.723 006B =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 11:59:25.723 006B =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 11:59:25.723 006B =API= [CallClient] null: <= CACHE_UPDATE MESSAGE_LIST0
20240806 11:59:25.723 006B =FUN= [CallFromClient] 1901330445:6934: InputMessage size 1685
20240806 11:59:25.723 006B =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 49
20240806 11:59:25.723 006B =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 11:59:25.808 00C2 =WRN= [FunctionCheck] <App. context>: zcare.zdek.zql.PhysicalConnection.commitTrans took too much time: 271 ms
20240806 11:59:25.808 00C2 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=0
20240806 11:59:25.808 00C2 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0009
20240806 11:59:25.808 00C2 =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0009
20240806 11:59:25.808 00C2 =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:25.808 00C2 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:33.434 008C =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdataserver.SystemSession.heartbeat
20240806 11:59:33.435 008C =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.dbag.DBag.load
20240806 11:59:33.435 008C =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zdeksystem.SYS_Session.Session_Id, zdeksystem.SYS_Session.User_Id, zdeksystem.SYS_Session.UserName, zdeksystem.SYS_Session.Token, zdeksystem.SYS_Session.LastCallTime, zdeksystem.SYS_Session.ManagingServerName, zdeksystem.SYS_Session.ManagingServerPort, zdeksystem.SYS_Session.LastProcessedNotification_Id, zdeksystem.SYS_Session.LastProcessedNotificationTime, zdeksystem.SYS_Session.DataServerClientIP, zdeksystem.SYS_Session.DataServerClientDetails, zdeksystem.SYS_Session.OriginatorClientIP, zdeksystem.SYS_Session.OriginatorClientDetails, zdeksystem.SYS_Session.PermanentSession_Id, zdeksystem.SYS_Session.Locale, zdeksystem.SYS_Session.ValidationToken,zdeksystem.SYS_PermanentSession.PermanentSession_Id, zdeksystem.SYS_PermanentSession.Name, zdeksystem.SYS_PermanentSession.LastAcknowledegedNotif_Id, zdeksystem.SYS_PermanentSession.LastAcknowledgedNotifTime FROM zdeksystem.SYS_Session LEFT OUTER JOIN zdeksystem.SYS_PermanentSession ON zdeksystem.SYS_Session.PermanentSession_Id = zdeksystem.SYS_PermanentSession.PermanentSession_Id WHERE (zdeksystem.SYS_Session.Session_Id = 1901330433);
20240806 11:59:33.435 008C =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:33.435 008C =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:33.435 008C =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0008 - Allocated=10, Used=1
20240806 11:59:33.435 008C =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0008 - SELECT SYS_Session.Session_Id, SYS_Session.User_Id, SYS_Session.UserName, SYS_Session.Token, SYS_Session.LastCallTime, SYS_Session.ManagingServerName, SYS_Session.ManagingServerPort, SYS_Session.LastProcessedNotification_Id, SYS_Session.LastProcessedNotificationTime, SYS_Session.DataServerClientIP, SYS_Session.DataServerClientDetails, SYS_Session.OriginatorClientIP, SYS_Session.OriginatorClientDetails, SYS_Session.PermanentSession_Id, SYS_Session.Locale, SYS_Session.ValidationToken, SYS_PermanentSession.PermanentSession_Id, SYS_PermanentSession.Name, SYS_PermanentSession.LastAcknowledegedNotif_Id, SYS_PermanentSession.LastAcknowledgedNotifTime FROM SYS_Session LEFT OUTER JOIN SYS_PermanentSession ON (SYS_Session.PermanentSession_Id = SYS_PermanentSession.PermanentSession_Id) WHERE (SYS_Session.Session_Id = ?)
20240806 11:59:33.435 008C =FUN= [ZQL.PhysicalConnection] Parameters: 1901330433
20240806 11:59:33.435 008C =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:33.466 008C =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:33.466 008C =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:33.466 008C =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0008
20240806 11:59:33.466 008C =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.endQuery : 20 columns, 1 rows
20240806 11:59:33.466 008C =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0008
20240806 11:59:33.466 008C =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0008
20240806 11:59:33.466 008C =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:33.466 008C =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:33.467 008C =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.dbag.DBag.load
20240806 11:59:33.467 008C =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:33.467 008C =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0002 - Allocated=10, Used=1
20240806 11:59:33.467 008C =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0002
20240806 11:59:33.537 008C =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 11:59:33.537 008C =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0002
20240806 11:59:33.537 008C =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0002
20240806 11:59:33.537 008C =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:33.537 008C =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:33.537 008C =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 11:59:33.538 008C =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT TOP 5000 zdeksystem.SYS_Notification.Notification_Id, zdeksystem.SYS_Notification.SenderSession_Id, zdeksystem.SYS_Notification.SenderUser_Id, zdeksystem.SYS_Notification.EmissionTime, zdeksystem.SYS_Notification.Subject, zdeksystem.SYS_Notification.Message FROM zdeksystem.SYS_Notification WHERE ((zdeksystem.SYS_Notification.EmissionTime >= '20240806 11:57:48.721') AND (zdeksystem.SYS_Notification.EmissionTime < '20240806 11:58:01.739')) ORDER BY zdeksystem.SYS_Notification.EmissionTime ASC, zdeksystem.SYS_Notification.Notification_Id ASC;
20240806 11:59:33.538 008C =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:33.538 008C =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:33.538 008C =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0007 - Allocated=10, Used=1
20240806 11:59:33.538 008C =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0007 - SELECT TOP 5000 SYS_Notification.Notification_Id, SYS_Notification.SenderSession_Id, SYS_Notification.SenderUser_Id, SYS_Notification.EmissionTime, SYS_Notification.Subject, SYS_Notification.Message FROM SYS_Notification WHERE ((SYS_Notification.EmissionTime >= ?) AND (SYS_Notification.EmissionTime < ?)) ORDER BY SYS_Notification.EmissionTime ASC, SYS_Notification.Notification_Id ASC
20240806 11:59:33.538 008C =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:57:48.721', '20240806 11:58:01.739'
20240806 11:59:33.538 008C =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:33.740 008C =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:33.741 008C =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:33.741 008C =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0007
20240806 11:59:33.741 008C =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.endQuery : 6 columns, 0 rows
20240806 11:59:33.741 008C =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0007
20240806 11:59:33.741 008C =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0007
20240806 11:59:33.741 008C =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:33.741 008C =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:33.741 008C =FUN= [NotificationCache] null: Cache updated, now from 20240806 11:53:38.712 to 20240806 11:57:48.721
20240806 11:59:33.741 008C =WRN= [FunctionCheck] <App. context>: zcare.zdataserver.SystemSession.heartbeat took too much time: 307 ms
20240806 11:59:33.741 008C =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdataserver.SystemSession.heartbeat
20240806 11:59:44.591 006F =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=38)
20240806 11:59:44.591 006F =API= [CallFromClient] null: => DBAG_COPY DIALOG_MANAGER_DATA
20240806 11:59:44.591 006F =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:CONTEXT_CHANGES
20240806 11:59:44.591 006F =FUN= [CallFromClient] null: Parameter FROM_CTX=S_Assign Students to Scenarios
20240806 11:59:44.591 006F =FUN= [CallFromClient] null: Parameter DATA_SET=EduScenariosAssigmentBanner0
20240806 11:59:44.591 006F =FUN= [CallFromClient] null: Parameter HANDLER_NAME=EDU_SCENARIO_ASSIGN_BANNER
20240806 11:59:44.591 006F =FUN= [CallFromClient] null: Parameter P1=-2194|3|1|EDU_SCENARIO_ID|622198869
20240806 11:59:44.591 006F =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 11:59:44.591 006F =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 11:59:44.591 006F =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 11:59:44.591 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 -> zcare.zdek.dbag.DBag.load
20240806 11:59:44.591 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationType, zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus, zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade FROM zlmsadmin.ADM_EduScenario JOIN zlmsadmin.ADM_EduScenarioStreamGrade ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id WHERE (zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198869);
20240806 11:59:44.592 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:44.592 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:44.592 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0010 - Allocated=10, Used=1
20240806 11:59:44.592 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0010 - SELECT ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, ADM_EduScenarioStreamGrade.EduScenario_Id, ADM_EduScenarioStreamGrade.EducationType, ADM_EduScenarioStreamGrade.EducationPath_Id, ADM_EduScenarioStreamGrade.EducationFocus, ADM_EduScenarioStreamGrade.StreamGrade FROM ADM_EduScenario JOIN ADM_EduScenarioStreamGrade ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioStreamGrade.EduScenario_Id) WHERE (ADM_EduScenario.EduScenario_Id = ?)
20240806 11:59:44.592 006F =FUN= [ZQL.PhysicalConnection] Parameters: 622198869
20240806 11:59:44.592 006F =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:44.619 006F =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:44.619 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:44.619 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0010
20240806 11:59:44.619 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnection.endQuery : 14 columns, 1 rows
20240806 11:59:44.620 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0010
20240806 11:59:44.620 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0010
20240806 11:59:44.620 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:44.620 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:44.620 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 <- zcare.zdek.dbag.DBag.load
20240806 11:59:44.620 006F =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 11:59:44.620 006F =API= [CallClient] null: <= DBAG_COPY EduScenariosAssigmentBanner0
20240806 11:59:44.620 006F =FUN= [CallFromClient] 1901330445:6934: InputMessage size 446
20240806 11:59:44.620 006F =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 352
20240806 11:59:44.620 006F =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 11:59:44.645 006E =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=38)
20240806 11:59:44.645 006E =API= [CallFromClient] null: => DBAG_COPY DIALOG_MANAGER_DATA
20240806 11:59:44.645 006E =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:CONTEXT_CHANGES
20240806 11:59:44.645 006E =FUN= [CallFromClient] null: Parameter FROM_CTX=D_EduScenarioStudentList0
20240806 11:59:44.645 006E =FUN= [CallFromClient] null: Parameter DATA_SET=EduScenariosAssigmentBanner0
20240806 11:59:44.645 006E =FUN= [CallFromClient] null: Parameter HANDLER_NAME=EDU_SCENARIO_ASSIGN_BANNER
20240806 11:59:44.646 006E =FUN= [CallFromClient] null: Parameter P1=-2194|3|1|EDU_SCENARIO_ID|622198869
20240806 11:59:44.646 006E =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 11:59:44.646 006E =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 11:59:44.646 006E =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 11:59:44.646 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 -> zcare.zdek.dbag.DBag.load
20240806 11:59:44.646 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationType, zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus, zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade FROM zlmsadmin.ADM_EduScenario JOIN zlmsadmin.ADM_EduScenarioStreamGrade ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id WHERE (zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198869);
20240806 11:59:44.646 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:44.647 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:44.647 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0003 - Allocated=10, Used=1
20240806 11:59:44.647 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0003 - SELECT ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, ADM_EduScenarioStreamGrade.EduScenario_Id, ADM_EduScenarioStreamGrade.EducationType, ADM_EduScenarioStreamGrade.EducationPath_Id, ADM_EduScenarioStreamGrade.EducationFocus, ADM_EduScenarioStreamGrade.StreamGrade FROM ADM_EduScenario JOIN ADM_EduScenarioStreamGrade ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioStreamGrade.EduScenario_Id) WHERE (ADM_EduScenario.EduScenario_Id = ?)
20240806 11:59:44.647 006E =FUN= [ZQL.PhysicalConnection] Parameters: 622198869
20240806 11:59:44.647 006E =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:44.687 006E =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:44.688 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:44.688 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0003
20240806 11:59:44.688 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnection.endQuery : 14 columns, 1 rows
20240806 11:59:44.688 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0003
20240806 11:59:44.688 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0003
20240806 11:59:44.688 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:44.688 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:44.688 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 <- zcare.zdek.dbag.DBag.load
20240806 11:59:44.688 006E =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 11:59:44.688 006E =API= [CallClient] null: <= DBAG_COPY EduScenariosAssigmentBanner0
20240806 11:59:44.688 006E =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:CONTEXT_CHANGES
20240806 11:59:44.688 006E =FUN= [CallFromClient] null: Parameter FROM_CTX=D_EduScenarioStudentList0
20240806 11:59:44.689 006E =FUN= [CallFromClient] null: Parameter DATA_SET=EduScenarioStudentsDetail0
20240806 11:59:44.689 006E =FUN= [CallFromClient] null: Parameter HANDLER_NAME=EDU_SCENARIO_STUDENTS_DETAIL
20240806 11:59:44.689 006E =FUN= [CallFromClient] null: Parameter P1=-2466|3|1|EDU_SCENARIO_ID|622198869
20240806 11:59:44.689 006E =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 11:59:44.689 006E =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 11:59:44.689 006E =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 11:59:44.689 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 -> zcare.zlms.educationalscenario.enrollment.dataset.ElectiveScenarioStudentListDetailDataSet$Handler.handleContextChange
20240806 11:59:44.691 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.dbag.DBag.load
20240806 11:59:44.691 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id, zlmsadmin.ADM_ScenarioSelection.EduScenario_Id, zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id, zlmsadmin.ADM_ScenarioSelection.Enrollment_Id, zlmsadmin.ADM_ScenarioSelection.SelectionStatus, zlmsadmin.ADM_ScenarioSelection.JoiningDate, zlmsadmin.ADM_ScenarioSelection.ExitDate, zlmsadmin.ADM_ScenarioSelection.UserStamp, zlmsadmin.ADM_ScenarioSelection.TimeStamp, zlmsadmin.ADM_ScenarioSelection.NoteHistory_Id,zlmsadmin.ADM_SelectionDetails.SelectionDetails_Id, zlmsadmin.ADM_SelectionDetails.ScenarioSelection_Id, zlmsadmin.ADM_SelectionDetails.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_SelectionDetails.CourseDefCode, zlmsadmin.ADM_SelectionDetails.NumberOfPeriods, zlmsadmin.ADM_SelectionDetails.UserStamp, zlmsadmin.ADM_SelectionDetails.TimeStamp,zlmsadmin.ADM_Enrollment.Enrollment_Id, zlmsadmin.ADM_Enrollment.School_Id, zlmsadmin.ADM_Enrollment.Student_Id, zlmsadmin.ADM_Enrollment.Session_Id, zlmsadmin.ADM_Enrollment.StreamGrade_Id, zlmsadmin.ADM_Enrollment.Community_Id, zlmsadmin.ADM_Enrollment.EnrollmentType, zlmsadmin.ADM_Enrollment.EntryType, zlmsadmin.ADM_Enrollment.EntryDate, zlmsadmin.ADM_Enrollment.TransferFromSchool_Id, zlmsadmin.ADM_Enrollment.TransferToSchool_Id, zlmsadmin.ADM_Enrollment.ExitType, zlmsadmin.ADM_Enrollment.ExitReason, zlmsadmin.ADM_Enrollment.ExitDate, zlmsadmin.ADM_Enrollment.Note, zlmsadmin.ADM_Enrollment.IsSpecialNeed, zlmsadmin.ADM_Enrollment.ExternalId, zlmsadmin.ADM_Enrollment.UserStamp, zlmsadmin.ADM_Enrollment.TimeStamp, zlmsadmin.ADM_Enrollment.RegistrationStatus, zlmsadmin.ADM_Enrollment.TransferFromEnrollment_Id, zlmsadmin.ADM_Enrollment.TransferToCommunity_Id, zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment, zlmsadmin.ADM_Enrollment.RecomputePassFail, zlmsadmin.ADM_Enrollment.MandatoryEducation, zlmsadmin.ADM_Enrollment.IsWaitingList, zlmsadmin.ADM_Enrollment.CreateTimeStamp, zlmsadmin.ADM_Enrollment.IsNotOfficialEnrollment, zlmsadmin.ADM_Enrollment.UserNote, zlmsadmin.ADM_Enrollment.DeleteType, zlmsadmin.ADM_Enrollment.IsDeleted, zlmsadmin.ADM_Enrollment.CreationUser_Id,zmedcommon.COMM_ApplicationForm.ApplicationForm_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormNumber, zmedcommon.COMM_ApplicationForm.ApplicationDate, zmedcommon.COMM_ApplicationForm.Applicant_Id, zmedcommon.COMM_ApplicationForm.Workflow_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormType, zmedcommon.COMM_ApplicationForm.Note, zmedcommon.COMM_ApplicationForm.TimeStamp, zmedcommon.COMM_ApplicationForm.UserStamp,zlmsregistration.REG_StudentRegistration.StudentRegistration_Id, zlmsregistration.REG_StudentRegistration.ApplicationForm_Id, zlmsregistration.REG_StudentRegistration.Student_Id, zlmsregistration.REG_StudentRegistration.AcademicYear_Id, zlmsregistration.REG_StudentRegistration.EducationPath_Id, zlmsregistration.REG_StudentRegistration.Enrollment_Id, zlmsregistration.REG_StudentRegistration.EducationType, zlmsregistration.REG_StudentRegistration.EducationFocus, zlmsregistration.REG_StudentRegistration.StreamGrade, zlmsregistration.REG_StudentRegistration.School_Id, zlmsregistration.REG_StudentRegistration.IsTransportRequired, zlmsregistration.REG_StudentRegistration.ExamTime, zlmsregistration.REG_StudentRegistration.ExamScore, zlmsregistration.REG_StudentRegistration.InterviewTime, zlmsregistration.REG_StudentRegistration.DocumentList_Id, zlmsregistration.REG_StudentRegistration.CitizenshipStatus, zlmsregistration.REG_StudentRegistration.ParentWorkPlace, zlmsregistration.REG_StudentRegistration.IsSpecialNeed, zlmsregistration.REG_StudentRegistration.TimeStamp, zlmsregistration.REG_StudentRegistration.UserStamp, zlmsregistration.REG_StudentRegistration.InCatchmentArea, zlmsregistration.REG_StudentRegistration.ProgramCategory_Id,zmedcommon.COMM_Workflow.Workflow_Id, zmedcommon.COMM_Workflow.Name, zmedcommon.COMM_Workflow.Code, zmedcommon.COMM_Workflow.Note,zmedcommon.COMM_ApplicationFormState.ApplicationFormState_Id, zmedcommon.COMM_ApplicationFormState.WorkflowState_Id, zmedcommon.COMM_ApplicationFormState.PrevWorkflowState_Id, zmedcommon.COMM_ApplicationFormState.StateStartDate, zmedcommon.COMM_ApplicationFormState.StateEndDate, zmedcommon.COMM_ApplicationFormState.PerformedByUser_Id, zmedcommon.COMM_ApplicationFormState.AttributeList_Id, zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id, zmedcommon.COMM_ApplicationFormState.IsCurrent, zmedcommon.COMM_ApplicationFormState.Note, zmedcommon.COMM_ApplicationFormState.TimeStamp, zmedcommon.COMM_ApplicationFormState.UserStamp,zmedcommon.COMM_WorkflowState.WorkflowState_Id, zmedcommon.COMM_WorkflowState.Workflow_Id, zmedcommon.COMM_WorkflowState.Name, zmedcommon.COMM_WorkflowState.StateCode, zmedcommon.COMM_WorkflowState.Note,zlmsadmin.ADM_Student.Student_Id, zlmsadmin.ADM_Student.StudentNumber, zlmsadmin.ADM_Student.CreationDate, zlmsadmin.ADM_Student.CreationUser_Id, zlmsadmin.ADM_Student.UserStamp, zlmsadmin.ADM_Student.TimeStamp, zlmsadmin.ADM_Student.IsDeleted, zlmsadmin.ADM_Student.AttributeList_Id, zlmsadmin.ADM_Student.CitizenshipStatus,zmedcommon.COMM_Person.Person_Id, zmedcommon.COMM_Person.Civility, zmedcommon.COMM_Person.IDNumber, zmedcommon.COMM_Person.FirstName, zmedcommon.COMM_Person.SecondName, zmedcommon.COMM_Person.ThirdName, zmedcommon.COMM_Person.FourthName, zmedcommon.COMM_Person.FamilyName, zmedcommon.COMM_Person.EnglishFirstName, zmedcommon.COMM_Person.EnglishSecondName, zmedcommon.COMM_Person.EnglishThirdName, zmedcommon.COMM_Person.EnglishFourthName, zmedcommon.COMM_Person.EnglishFamilyName, zmedcommon.COMM_Person.BirthName, zmedcommon.COMM_Person.BirthDate, zmedcommon.COMM_Person.BirthCity, zmedcommon.COMM_Person.EnglishBirthCity, zmedcommon.COMM_Person.BirthCountry, zmedcommon.COMM_Person.Nationality, zmedcommon.COMM_Person.Gender, zmedcommon.COMM_Person.MaritalStatus, zmedcommon.COMM_Person.Photo_Id, zmedcommon.COMM_Person.Religion, zmedcommon.COMM_Person.ReligionSector, zmedcommon.COMM_Person.PhoneList_Id, zmedcommon.COMM_Person.AddressList_Id, zmedcommon.COMM_Person.OtherIdList_Id, zmedcommon.COMM_Person.IsDeleted, zmedcommon.COMM_Person.ExternalId, zmedcommon.COMM_Person.UserStamp, zmedcommon.COMM_Person.TimeStamp, zmedcommon.COMM_Person.User_Id, zmedcommon.COMM_Person.InformationSource, zmedcommon.COMM_Person.LastSyncTime, zmedcommon.COMM_Person.IsTemporary, zmedcommon.COMM_Person.VStartDate,zmedcommon.COMM_PhoneList.PhoneList_Id,zmedcommon.COMM_Phone.Phone_Id, zmedcommon.COMM_Phone.PhoneList_Id, zmedcommon.COMM_Phone.Name, zmedcommon.COMM_Phone.Value, zmedcommon.COMM_Phone.Note, zmedcommon.COMM_Phone.IsPrivate, zmedcommon.COMM_Phone.IsPrimary, zmedcommon.COMM_Phone.ContactType,zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.CourseDefCodes, zlmsadmin.ADM_EduScenarioOptionalGrp.NumberOfPeriods, zlmsadmin.ADM_EduScenarioOptionalGrp.type,zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id, zlmsadmin.ADM_OptionalCourseGroup.Name, zlmsadmin.ADM_OptionalCourseGroup.MinimumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.MaximumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.IsSelectedByStudent,zlmsadmin.ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationType, zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus, zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade,zlmsadmin.ADM_StreamGrade.StreamGrade_Id, zlmsadmin.ADM_StreamGrade.Name, zlmsadmin.ADM_StreamGrade.Title, zlmsadmin.ADM_StreamGrade.Grade_Id,zlmsadmin.ADM_Grade.Grade_Id, zlmsadmin.ADM_Grade.EducationPathDef_Id, zlmsadmin.ADM_Grade.Name, zlmsadmin.ADM_Grade.Title, zlmsadmin.ADM_Grade.Position, zlmsadmin.ADM_Grade.SchoolLevel, zlmsadmin.ADM_Grade.MinAge, zlmsadmin.ADM_Grade.MinSpAge, zlmsadmin.ADM_Grade.MaxAge, zlmsadmin.ADM_Grade.MaxSpAge, zlmsadmin.ADM_Grade.MinAgeMargin, zlmsadmin.ADM_Grade.MinAgeMarginUnit, zlmsadmin.ADM_Grade.MaxAgeMargin, zlmsadmin.ADM_Grade.MaxAgeMarginUnit, zlmsadmin.ADM_Grade.CapacityGroup, zlmsadmin.ADM_Grade.MinAgeMargin2, zlmsadmin.ADM_Grade.MinAgeMarginUnit2, zlmsadmin.ADM_Grade.MaxAgeMargin2, zlmsadmin.ADM_Grade.MaxAgeMarginUnit2, zlmsadmin.ADM_Grade.ExternalId, zlmsadmin.ADM_Grade.CommunityTitlePrefix, zlmsadmin.ADM_Grade.AgeReferenceDate, zlmsadmin.ADM_Grade.VStartDate, zlmsadmin.ADM_Grade.UserStamp, zlmsadmin.ADM_Grade.TimeStamp,zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id, zlmsadmin.ADM_EducationPathDef.EducationPath_Id, zlmsadmin.ADM_EducationPathDef.StartDate, zlmsadmin.ADM_EducationPathDef.EndDate, zlmsadmin.ADM_EducationPathDef.IsActive, zlmsadmin.ADM_EducationPathDef.EducationType, zlmsadmin.ADM_EducationPathDef.EducationFocus,zlmsadmin.ADM_SessionDef.SessionDef_Id, zlmsadmin.ADM_SessionDef.EducationPathDef_Id, zlmsadmin.ADM_SessionDef.Title, zlmsadmin.ADM_SessionDef.SessionType, zlmsadmin.ADM_SessionDef.Duration, zlmsadmin.ADM_SessionDef.DurationUnit, zlmsadmin.ADM_SessionDef.Parent_Id, zlmsadmin.ADM_SessionDef.Position,zlmsadmin.ADM_Session.Session_Id, zlmsadmin.ADM_Session.AcademicYear_Id, zlmsadmin.ADM_Session.SessionDef_Id, zlmsadmin.ADM_Session.Title, zlmsadmin.ADM_Session.Parent_Id, zlmsadmin.ADM_Session.StartDate, zlmsadmin.ADM_Session.EndDate, zlmsadmin.ADM_Session.Position, zlmsadmin.ADM_Session.UserStamp, zlmsadmin.ADM_Session.TimeStamp,zlmsadmin.ADM_CourseDefStreamGrade.CourseDefStreamGrade_Id, zlmsadmin.ADM_CourseDefStreamGrade.CourseDef_Id, zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id, zlmsadmin.ADM_CourseDefStreamGrade.IsOptional, zlmsadmin.ADM_CourseDefStreamGrade.OptionalCourseGroup_Id,zlmsadmin.ADM_CourseDef.CourseDef_Id, zlmsadmin.ADM_CourseDef.EducationPathDef_Id, zlmsadmin.ADM_CourseDef.SessionDef_Id, zlmsadmin.ADM_CourseDef.TeachingSubject, zlmsadmin.ADM_CourseDef.TeachingLanguage, zlmsadmin.ADM_CourseDef.Title, zlmsadmin.ADM_CourseDef.NumberOfPeriods, zlmsadmin.ADM_CourseDef.NumberOfPeriodsPerWeek, zlmsadmin.ADM_CourseDef.PeriodDuration, zlmsadmin.ADM_CourseDef.PeriodDurationUnit, zlmsadmin.ADM_CourseDef.SlotColor, zlmsadmin.ADM_CourseDef.StudentGender, zlmsadmin.ADM_CourseDef.IsAcademic, zlmsadmin.ADM_CourseDef.Code, zlmsadmin.ADM_CourseDef.Position, zlmsadmin.ADM_CourseDef.CourseWeight, zlmsadmin.ADM_CourseDef.PassScore, zlmsadmin.ADM_CourseDef.OtherTitle, zlmsadmin.ADM_CourseDef.isTermBasedCourse, zlmsadmin.ADM_CourseDef.Department, zlmsadmin.ADM_CourseDef.UserStamp, zlmsadmin.ADM_CourseDef.TimeStamp,zlmsadmin.ADM_AcademicYear.AcademicYear_Id, zlmsadmin.ADM_AcademicYear.Title, zlmsadmin.ADM_AcademicYear.IsCurrent, zlmsadmin.ADM_AcademicYear.Status, zlmsadmin.ADM_AcademicYear.POSITION,zmedcommon.COMM_NoteHistory.NoteHistory_Id,zmedcommon.COMM_Note.Note_Id, zmedcommon.COMM_Note.NoteHistory_Id, zmedcommon.COMM_Note.Text, zmedcommon.COMM_Note.User_Id, zmedcommon.COMM_Note.NoteDate, zmedcommon.COMM_Note.Status, zmedcommon.COMM_Note.UserStamp, zmedcommon.COMM_Note.TimeStamp FROM zlmsadmin.ADM_ScenarioSelection JOIN zlmsadmin.ADM_SelectionDetails ON zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id = zlmsadmin.ADM_SelectionDetails.ScenarioSelection_Id JOIN zlmsadmin.ADM_Enrollment! ON zlmsadmin.ADM_ScenarioSelection.Enrollment_Id = zlmsadmin.ADM_Enrollment.Enrollment_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationForm ON zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id = zmedcommon.COMM_ApplicationForm.ApplicationForm_Id LEFT OUTER JOIN zlmsregistration.REG_StudentRegistration ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zlmsregistration.REG_StudentRegistration.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_Workflow ON zmedcommon.COMM_ApplicationForm.Workflow_Id = zmedcommon.COMM_Workflow.Workflow_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationFormState ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_WorkflowState ON zmedcommon.COMM_ApplicationFormState.WorkflowState_Id = zmedcommon.COMM_WorkflowState.WorkflowState_Id JOIN zlmsadmin.ADM_Student! ON zlmsadmin.ADM_Enrollment.Student_Id = zlmsadmin.ADM_Student.Student_Id JOIN zmedcommon.COMM_Person! ON (zlmsadmin.ADM_Student.Student_Id = zmedcommon.COMM_Person.Person_Id) JOIN zmedcommon.COMM_PhoneList ON zmedcommon.COMM_Person.PhoneList_Id = zmedcommon.COMM_PhoneList.PhoneList_Id JOIN zmedcommon.COMM_Phone ON zmedcommon.COMM_PhoneList.PhoneList_Id = zmedcommon.COMM_Phone.PhoneList_Id JOIN zlmsadmin.ADM_EduScenario ON zlmsadmin.ADM_ScenarioSelection.EduScenario_Id = zlmsadmin.ADM_EduScenario.EduScenario_Id JOIN zlmsadmin.ADM_EduScenarioOptionalGrp ON zlmsadmin.ADM_SelectionDetails.EduScenarioOptionalGrp_Id = zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id JOIN zlmsadmin.ADM_OptionalCourseGroup ON zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id JOIN zlmsadmin.ADM_EduScenarioStreamGrade ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id JOIN zlmsadmin.ADM_StreamGrade ON (zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade = zlmsadmin.ADM_StreamGrade.Name) JOIN zlmsadmin.ADM_Grade ON zlmsadmin.ADM_StreamGrade.Grade_Id = zlmsadmin.ADM_Grade.Grade_Id JOIN zlmsadmin.ADM_EducationPathDef ON ((zlmsadmin.ADM_EducationPathDef.EducationPath_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus = zlmsadmin.ADM_EducationPathDef.EducationFocus) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationType = zlmsadmin.ADM_EducationPathDef.EducationType)) JOIN zlmsadmin.ADM_SessionDef ON zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id = zlmsadmin.ADM_SessionDef.EducationPathDef_Id JOIN zlmsadmin.ADM_Session ON zlmsadmin.ADM_SessionDef.SessionDef_Id = zlmsadmin.ADM_Session.SessionDef_Id AND (((zlmsadmin.ADM_Session.AcademicYear_Id = zlmsadmin.ADM_EduScenario.AcademicYear_Id) AND (zlmsadmin.ADM_Grade.EducationPathDef_Id = zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id) AND (zlmsadmin.ADM_Session.Parent_Id IS NULL))) JOIN zlmsadmin.ADM_CourseDefStreamGrade ON zlmsadmin.ADM_StreamGrade.StreamGrade_Id = zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id AND (((zlmsadmin.ADM_StreamGrade.StreamGrade_Id = zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id) AND (zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id = zlmsadmin.ADM_CourseDefStreamGrade.OptionalCourseGroup_Id))) JOIN zlmsadmin.ADM_CourseDef ON zlmsadmin.ADM_CourseDefStreamGrade.CourseDef_Id = zlmsadmin.ADM_CourseDef.CourseDef_Id JOIN zlmsadmin.ADM_AcademicYear ON zlmsadmin.ADM_EduScenario.AcademicYear_Id = zlmsadmin.ADM_AcademicYear.AcademicYear_Id LEFT OUTER JOIN zmedcommon.COMM_NoteHistory ON zlmsadmin.ADM_ScenarioSelection.NoteHistory_Id = zmedcommon.COMM_NoteHistory.NoteHistory_Id LEFT OUTER JOIN zmedcommon.COMM_Note ON zmedcommon.COMM_NoteHistory.NoteHistory_Id = zmedcommon.COMM_Note.NoteHistory_Id WHERE ((((zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198869) AND (zlmsadmin.ADM_Enrollment.School_Id IN(838))) AND (zlmsadmin.ADM_ScenarioSelection.ExitDate IS NULL) AND (zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment = 1)) AND (((zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (zmedcommon.COMM_ApplicationFormState.IsCurrent = 1) AND (zmedcommon.COMM_WorkflowState.StateCode <> 0)) OR (zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NULL)));
20240806 11:59:44.693 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:44.693 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:44.693 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0011 - Allocated=10, Used=1
20240806 11:59:44.693 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0011 - SELECT ADM_ScenarioSelection.ScenarioSelection_Id, ADM_ScenarioSelection.EduScenario_Id, ADM_ScenarioSelection.ApplicationForm_Id, ADM_ScenarioSelection.Enrollment_Id, ADM_ScenarioSelection.SelectionStatus, ADM_ScenarioSelection.JoiningDate, ADM_ScenarioSelection.ExitDate, ADM_ScenarioSelection.UserStamp, ADM_ScenarioSelection.TimeStamp, ADM_ScenarioSelection.NoteHistory_Id, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.ScenarioSelection_Id, ADM_SelectionDetails.EduScenarioOptionalGrp_Id, ADM_SelectionDetails.CourseDefCode, ADM_SelectionDetails.NumberOfPeriods, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp, ADM_Enrollment.Enrollment_Id, ADM_Enrollment.School_Id, ADM_Enrollment.Student_Id, ADM_Enrollment.Session_Id, ADM_Enrollment.StreamGrade_Id, ADM_Enrollment.Community_Id, ADM_Enrollment.EnrollmentType, ADM_Enrollment.EntryType, ADM_Enrollment.EntryDate, ADM_Enrollment.TransferFromSchool_Id, ADM_Enrollment.TransferToSchool_Id, ADM_Enrollment.ExitType, ADM_Enrollment.ExitReason, ADM_Enrollment.ExitDate, ADM_Enrollment.Note, ADM_Enrollment.IsSpecialNeed, ADM_Enrollment.ExternalId, ADM_Enrollment.UserStamp, ADM_Enrollment.TimeStamp, ADM_Enrollment.RegistrationStatus, ADM_Enrollment.TransferFromEnrollment_Id, ADM_Enrollment.TransferToCommunity_Id, ADM_Enrollment.IsYearActiveEnrollment, ADM_Enrollment.RecomputePassFail, ADM_Enrollment.MandatoryEducation, ADM_Enrollment.IsWaitingList, ADM_Enrollment.CreateTimeStamp, ADM_Enrollment.IsNotOfficialEnrollment, ADM_Enrollment.UserNote, ADM_Enrollment.DeleteType, ADM_Enrollment.IsDeleted, ADM_Enrollment.CreationUser_Id, COMM_ApplicationForm.ApplicationForm_Id, COMM_ApplicationForm.ApplicationFormNumber, COMM_ApplicationForm.ApplicationDate, COMM_ApplicationForm.Applicant_Id, COMM_ApplicationForm.Workflow_Id, COMM_ApplicationForm.ApplicationFormType, COMM_ApplicationForm.Note, COMM_ApplicationForm.TimeStamp, COMM_ApplicationForm.UserStamp, REG_StudentRegistration.StudentRegistration_Id, REG_StudentRegistration.ApplicationForm_Id, REG_StudentRegistration.Student_Id, REG_StudentRegistration.AcademicYear_Id, REG_StudentRegistration.EducationPath_Id, REG_StudentRegistration.Enrollment_Id, REG_StudentRegistration.EducationType, REG_StudentRegistration.EducationFocus, REG_StudentRegistration.StreamGrade, REG_StudentRegistration.School_Id, REG_StudentRegistration.IsTransportRequired, REG_StudentRegistration.ExamTime, REG_StudentRegistration.ExamScore, REG_StudentRegistration.InterviewTime, REG_StudentRegistration.DocumentList_Id, REG_StudentRegistration.CitizenshipStatus, REG_StudentRegistration.ParentWorkPlace, REG_StudentRegistration.IsSpecialNeed, REG_StudentRegistration.TimeStamp, REG_StudentRegistration.UserStamp, REG_StudentRegistration.InCatchmentArea, REG_StudentRegistration.ProgramCategory_Id, COMM_Workflow.Workflow_Id, COMM_Workflow.Name, COMM_Workflow.Code, COMM_Workflow.Note, COMM_ApplicationFormState.ApplicationFormState_Id, COMM_ApplicationFormState.WorkflowState_Id, COMM_ApplicationFormState.PrevWorkflowState_Id, COMM_ApplicationFormState.StateStartDate, COMM_ApplicationFormState.StateEndDate, COMM_ApplicationFormState.PerformedByUser_Id, COMM_ApplicationFormState.AttributeList_Id, COMM_ApplicationFormState.ApplicationForm_Id, COMM_ApplicationFormState.IsCurrent, COMM_ApplicationFormState.Note, COMM_ApplicationFormState.TimeStamp, COMM_ApplicationFormState.UserStamp, COMM_WorkflowState.WorkflowState_Id, COMM_WorkflowState.Workflow_Id, COMM_WorkflowState.Name, COMM_WorkflowState.StateCode, COMM_WorkflowState.Note, ADM_Student.Student_Id, ADM_Student.StudentNumber, ADM_Student.CreationDate, ADM_Student.CreationUser_Id, ADM_Student.UserStamp, ADM_Student.TimeStamp, ADM_Student.IsDeleted, ADM_Student.AttributeList_Id, ADM_Student.CitizenshipStatus, COMM_Person.Person_Id, COMM_Person.Civility, COMM_Person.IDNumber, COMM_Person.FirstName, COMM_Person.SecondName, COMM_Person.ThirdName, COMM_Person.FourthName, COMM_Person.FamilyName, COMM_Person.EnglishFirstName, COMM_Person.EnglishSecondName, COMM_Person.EnglishThirdName, COMM_Person.EnglishFourthName, COMM_Person.EnglishFamilyName, COMM_Person.BirthName, COMM_Person.BirthDate, COMM_Person.BirthCity, COMM_Person.EnglishBirthCity, COMM_Person.BirthCountry, COMM_Person.Nationality, COMM_Person.Gender, COMM_Person.MaritalStatus, COMM_Person.Photo_Id, COMM_Person.Religion, COMM_Person.ReligionSector, COMM_Person.PhoneList_Id, COMM_Person.AddressList_Id, COMM_Person.OtherIdList_Id, COMM_Person.IsDeleted, COMM_Person.ExternalId, COMM_Person.UserStamp, COMM_Person.TimeStamp, COMM_Person.User_Id, COMM_Person.InformationSource, COMM_Person.LastSyncTime, COMM_Person.IsTemporary, COMM_Person.VStartDate, COMM_PhoneList.PhoneList_Id, COMM_Phone.Phone_Id, COMM_Phone.PhoneList_Id, COMM_Phone.Name, COMM_Phone.Value, COMM_Phone.Note, COMM_Phone.IsPrivate, COMM_Phone.IsPrimary, COMM_Phone.ContactType, ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, ADM_EduScenarioOptionalGrp.EduScenario_Id, ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, ADM_EduScenarioOptionalGrp.CourseDefCodes, ADM_EduScenarioOptionalGrp.NumberOfPeriods, ADM_EduScenarioOptionalGrp.type, ADM_OptionalCourseGroup.OptionalCourseGroup_Id, ADM_OptionalCourseGroup.Name, ADM_OptionalCourseGroup.MinimumSelectedCourse, ADM_OptionalCourseGroup.MaximumSelectedCourse, ADM_OptionalCourseGroup.IsSelectedByStudent, ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, ADM_EduScenarioStreamGrade.EduScenario_Id, ADM_EduScenarioStreamGrade.EducationType, ADM_EduScenarioStreamGrade.EducationPath_Id, ADM_EduScenarioStreamGrade.EducationFocus, ADM_EduScenarioStreamGrade.StreamGrade, ADM_StreamGrade.StreamGrade_Id, ADM_StreamGrade.Name, ADM_StreamGrade.Title, ADM_StreamGrade.Grade_Id, ADM_Grade.Grade_Id, ADM_Grade.EducationPathDef_Id, ADM_Grade.Name, ADM_Grade.Title, ADM_Grade.Position, ADM_Grade.SchoolLevel, ADM_Grade.MinAge, ADM_Grade.MinSpAge, ADM_Grade.MaxAge, ADM_Grade.MaxSpAge, ADM_Grade.MinAgeMargin, ADM_Grade.MinAgeMarginUnit, ADM_Grade.MaxAgeMargin, ADM_Grade.MaxAgeMarginUnit, ADM_Grade.CapacityGroup, ADM_Grade.MinAgeMargin2, ADM_Grade.MinAgeMarginUnit2, ADM_Grade.MaxAgeMargin2, ADM_Grade.MaxAgeMarginUnit2, ADM_Grade.ExternalId, ADM_Grade.CommunityTitlePrefix, ADM_Grade.AgeReferenceDate, ADM_Grade.VStartDate, ADM_Grade.UserStamp, ADM_Grade.TimeStamp, ADM_EducationPathDef.EducationPathDef_Id, ADM_EducationPathDef.EducationPath_Id, ADM_EducationPathDef.StartDate, ADM_EducationPathDef.EndDate, ADM_EducationPathDef.IsActive, ADM_EducationPathDef.EducationType, ADM_EducationPathDef.EducationFocus, ADM_SessionDef.SessionDef_Id, ADM_SessionDef.EducationPathDef_Id, ADM_SessionDef.Title, ADM_SessionDef.SessionType, ADM_SessionDef.Duration, ADM_SessionDef.DurationUnit, ADM_SessionDef.Parent_Id, ADM_SessionDef.Position, ADM_Session.Session_Id, ADM_Session.AcademicYear_Id, ADM_Session.SessionDef_Id, ADM_Session.Title, ADM_Session.Parent_Id, ADM_Session.StartDate, ADM_Session.EndDate, ADM_Session.Position, ADM_Session.UserStamp, ADM_Session.TimeStamp, ADM_CourseDefStreamGrade.CourseDefStreamGrade_Id, ADM_CourseDefStreamGrade.CourseDef_Id, ADM_CourseDefStreamGrade.StreamGrade_Id, ADM_CourseDefStreamGrade.IsOptional, ADM_CourseDefStreamGrade.OptionalCourseGroup_Id, ADM_CourseDef.CourseDef_Id, ADM_CourseDef.EducationPathDef_Id, ADM_CourseDef.SessionDef_Id, ADM_CourseDef.TeachingSubject, ADM_CourseDef.TeachingLanguage, ADM_CourseDef.Title, ADM_CourseDef.NumberOfPeriods, ADM_CourseDef.NumberOfPeriodsPerWeek, ADM_CourseDef.PeriodDuration, ADM_CourseDef.PeriodDurationUnit, ADM_CourseDef.SlotColor, ADM_CourseDef.StudentGender, ADM_CourseDef.IsAcademic, ADM_CourseDef.Code, ADM_CourseDef.Position, ADM_CourseDef.CourseWeight, ADM_CourseDef.PassScore, ADM_CourseDef.OtherTitle, ADM_CourseDef.isTermBasedCourse, ADM_CourseDef.Department, ADM_CourseDef.UserStamp, ADM_CourseDef.TimeStamp, ADM_AcademicYear.AcademicYear_Id, ADM_AcademicYear.Title, ADM_AcademicYear.IsCurrent, ADM_AcademicYear.Status, ADM_AcademicYear.POSITION, COMM_NoteHistory.NoteHistory_Id, COMM_Note.Note_Id, COMM_Note.NoteHistory_Id, COMM_Note.Text, COMM_Note.User_Id, COMM_Note.NoteDate, COMM_Note.Status, COMM_Note.UserStamp, COMM_Note.TimeStamp FROM ADM_ScenarioSelection JOIN ADM_SelectionDetails ON (ADM_ScenarioSelection.ScenarioSelection_Id = ADM_SelectionDetails.ScenarioSelection_Id) JOIN ADM_Enrollment ON ((ADM_Enrollment.IsDeleted = 0)) AND ((ADM_ScenarioSelection.Enrollment_Id = ADM_Enrollment.Enrollment_Id)) LEFT OUTER JOIN COMM_ApplicationForm ON (ADM_ScenarioSelection.ApplicationForm_Id = COMM_ApplicationForm.ApplicationForm_Id) LEFT OUTER JOIN REG_StudentRegistration ON (COMM_ApplicationForm.ApplicationForm_Id = REG_StudentRegistration.ApplicationForm_Id) LEFT OUTER JOIN COMM_Workflow ON (COMM_ApplicationForm.Workflow_Id = COMM_Workflow.Workflow_Id) LEFT OUTER JOIN COMM_ApplicationFormState ON (COMM_ApplicationForm.ApplicationForm_Id = COMM_ApplicationFormState.ApplicationForm_Id) LEFT OUTER JOIN COMM_WorkflowState ON (COMM_ApplicationFormState.WorkflowState_Id = COMM_WorkflowState.WorkflowState_Id) JOIN ADM_Student ON ((ADM_Student.IsDeleted = 0)) AND ((ADM_Enrollment.Student_Id = ADM_Student.Student_Id)) JOIN COMM_Person ON ((COMM_Person.IsDeleted = 0)) AND ((ADM_Student.Student_Id = COMM_Person.Person_Id)) JOIN COMM_PhoneList ON (COMM_Person.PhoneList_Id = COMM_PhoneList.PhoneList_Id) JOIN COMM_Phone ON (COMM_PhoneList.PhoneList_Id = COMM_Phone.PhoneList_Id) JOIN ADM_EduScenario ON (ADM_ScenarioSelection.EduScenario_Id = ADM_EduScenario.EduScenario_Id) JOIN ADM_EduScenarioOptionalGrp ON (ADM_SelectionDetails.EduScenarioOptionalGrp_Id = ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id) JOIN ADM_OptionalCourseGroup ON (ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = ADM_OptionalCourseGroup.OptionalCourseGroup_Id) JOIN ADM_EduScenarioStreamGrade ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioStreamGrade.EduScenario_Id) JOIN ADM_StreamGrade ON (ADM_EduScenarioStreamGrade.StreamGrade = ADM_StreamGrade.Name) JOIN ADM_Grade ON (ADM_StreamGrade.Grade_Id = ADM_Grade.Grade_Id) JOIN ADM_EducationPathDef ON (((ADM_EducationPathDef.EducationPath_Id = ADM_EduScenarioStreamGrade.EducationPath_Id) AND (ADM_EduScenarioStreamGrade.EducationFocus = ADM_EducationPathDef.EducationFocus)) AND (ADM_EduScenarioStreamGrade.EducationType = ADM_EducationPathDef.EducationType)) JOIN ADM_SessionDef ON (ADM_EducationPathDef.EducationPathDef_Id = ADM_SessionDef.EducationPathDef_Id) JOIN ADM_Session ON ((ADM_SessionDef.SessionDef_Id = ADM_Session.SessionDef_Id) AND (((ADM_Session.AcademicYear_Id = ADM_EduScenario.AcademicYear_Id) AND (ADM_Grade.EducationPathDef_Id = ADM_EducationPathDef.EducationPathDef_Id)) AND (ADM_Session.Parent_Id IS NULL))) JOIN ADM_CourseDefStreamGrade ON ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND (ADM_OptionalCourseGroup.OptionalCourseGroup_Id = ADM_CourseDefStreamGrade.OptionalCourseGroup_Id))) JOIN ADM_CourseDef ON (ADM_CourseDefStreamGrade.CourseDef_Id = ADM_CourseDef.CourseDef_Id) JOIN ADM_AcademicYear ON (ADM_EduScenario.AcademicYear_Id = ADM_AcademicYear.AcademicYear_Id) LEFT OUTER JOIN COMM_NoteHistory ON (ADM_ScenarioSelection.NoteHistory_Id = COMM_NoteHistory.NoteHistory_Id) LEFT OUTER JOIN COMM_Note ON (COMM_NoteHistory.NoteHistory_Id = COMM_Note.NoteHistory_Id) WHERE (((((ADM_EduScenario.EduScenario_Id = ?) AND (ADM_Enrollment.School_Id IN(?))) AND (ADM_ScenarioSelection.ExitDate IS NULL)) AND (ADM_Enrollment.IsYearActiveEnrollment = ?)) AND ((((COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (COMM_ApplicationFormState.IsCurrent = ?)) AND (COMM_WorkflowState.StateCode <> ?)) OR (COMM_ApplicationForm.ApplicationForm_Id IS NULL)))
20240806 11:59:44.694 006E =FUN= [ZQL.PhysicalConnection] Parameters: 622198869, 838, 1, 1, 0
20240806 11:59:44.694 006E =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:44.807 006E =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:44.808 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:45.044 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0011
20240806 11:59:45.044 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 275 columns, 1144 rows
20240806 11:59:45.044 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0011
20240806 11:59:45.045 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0011
20240806 11:59:45.045 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:45.045 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:45.045 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.dbag.DBag.load
20240806 11:59:45.045 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.dbag.DBag.load
20240806 11:59:45.046 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id, zlmsadmin.ADM_ScenarioSelection.EduScenario_Id, zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id, zlmsadmin.ADM_ScenarioSelection.Enrollment_Id, zlmsadmin.ADM_ScenarioSelection.SelectionStatus, zlmsadmin.ADM_ScenarioSelection.JoiningDate, zlmsadmin.ADM_ScenarioSelection.ExitDate, zlmsadmin.ADM_ScenarioSelection.UserStamp, zlmsadmin.ADM_ScenarioSelection.TimeStamp, zlmsadmin.ADM_ScenarioSelection.NoteHistory_Id,zlmsadmin.ADM_Enrollment.Enrollment_Id, zlmsadmin.ADM_Enrollment.School_Id, zlmsadmin.ADM_Enrollment.Student_Id, zlmsadmin.ADM_Enrollment.Session_Id, zlmsadmin.ADM_Enrollment.StreamGrade_Id, zlmsadmin.ADM_Enrollment.Community_Id, zlmsadmin.ADM_Enrollment.EnrollmentType, zlmsadmin.ADM_Enrollment.EntryType, zlmsadmin.ADM_Enrollment.EntryDate, zlmsadmin.ADM_Enrollment.TransferFromSchool_Id, zlmsadmin.ADM_Enrollment.TransferToSchool_Id, zlmsadmin.ADM_Enrollment.ExitType, zlmsadmin.ADM_Enrollment.ExitReason, zlmsadmin.ADM_Enrollment.ExitDate, zlmsadmin.ADM_Enrollment.Note, zlmsadmin.ADM_Enrollment.IsSpecialNeed, zlmsadmin.ADM_Enrollment.ExternalId, zlmsadmin.ADM_Enrollment.UserStamp, zlmsadmin.ADM_Enrollment.TimeStamp, zlmsadmin.ADM_Enrollment.RegistrationStatus, zlmsadmin.ADM_Enrollment.TransferFromEnrollment_Id, zlmsadmin.ADM_Enrollment.TransferToCommunity_Id, zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment, zlmsadmin.ADM_Enrollment.RecomputePassFail, zlmsadmin.ADM_Enrollment.MandatoryEducation, zlmsadmin.ADM_Enrollment.IsWaitingList, zlmsadmin.ADM_Enrollment.CreateTimeStamp, zlmsadmin.ADM_Enrollment.IsNotOfficialEnrollment, zlmsadmin.ADM_Enrollment.UserNote, zlmsadmin.ADM_Enrollment.DeleteType, zlmsadmin.ADM_Enrollment.IsDeleted, zlmsadmin.ADM_Enrollment.CreationUser_Id,zlmsadmin.ADM_Student.Student_Id, zlmsadmin.ADM_Student.StudentNumber, zlmsadmin.ADM_Student.CreationDate, zlmsadmin.ADM_Student.CreationUser_Id, zlmsadmin.ADM_Student.UserStamp, zlmsadmin.ADM_Student.TimeStamp, zlmsadmin.ADM_Student.IsDeleted, zlmsadmin.ADM_Student.AttributeList_Id, zlmsadmin.ADM_Student.CitizenshipStatus,zlmsadmin.ADM_Session.Session_Id, zlmsadmin.ADM_Session.AcademicYear_Id, zlmsadmin.ADM_Session.SessionDef_Id, zlmsadmin.ADM_Session.Title, zlmsadmin.ADM_Session.Parent_Id, zlmsadmin.ADM_Session.StartDate, zlmsadmin.ADM_Session.EndDate, zlmsadmin.ADM_Session.Position, zlmsadmin.ADM_Session.UserStamp, zlmsadmin.ADM_Session.TimeStamp,zlmsadmin.ADM_AcademicYear.AcademicYear_Id, zlmsadmin.ADM_AcademicYear.Title, zlmsadmin.ADM_AcademicYear.IsCurrent, zlmsadmin.ADM_AcademicYear.Status, zlmsadmin.ADM_AcademicYear.POSITION,zmedcommon.COMM_Person.Person_Id, zmedcommon.COMM_Person.Civility, zmedcommon.COMM_Person.IDNumber, zmedcommon.COMM_Person.FirstName, zmedcommon.COMM_Person.SecondName, zmedcommon.COMM_Person.ThirdName, zmedcommon.COMM_Person.FourthName, zmedcommon.COMM_Person.FamilyName, zmedcommon.COMM_Person.EnglishFirstName, zmedcommon.COMM_Person.EnglishSecondName, zmedcommon.COMM_Person.EnglishThirdName, zmedcommon.COMM_Person.EnglishFourthName, zmedcommon.COMM_Person.EnglishFamilyName, zmedcommon.COMM_Person.BirthName, zmedcommon.COMM_Person.BirthDate, zmedcommon.COMM_Person.BirthCity, zmedcommon.COMM_Person.EnglishBirthCity, zmedcommon.COMM_Person.BirthCountry, zmedcommon.COMM_Person.Nationality, zmedcommon.COMM_Person.Gender, zmedcommon.COMM_Person.MaritalStatus, zmedcommon.COMM_Person.Photo_Id, zmedcommon.COMM_Person.Religion, zmedcommon.COMM_Person.ReligionSector, zmedcommon.COMM_Person.PhoneList_Id, zmedcommon.COMM_Person.AddressList_Id, zmedcommon.COMM_Person.OtherIdList_Id, zmedcommon.COMM_Person.IsDeleted, zmedcommon.COMM_Person.ExternalId, zmedcommon.COMM_Person.UserStamp, zmedcommon.COMM_Person.TimeStamp, zmedcommon.COMM_Person.User_Id, zmedcommon.COMM_Person.InformationSource, zmedcommon.COMM_Person.LastSyncTime, zmedcommon.COMM_Person.IsTemporary, zmedcommon.COMM_Person.VStartDate,zmedcommon.COMM_PhoneList.PhoneList_Id,zmedcommon.COMM_Phone.Phone_Id, zmedcommon.COMM_Phone.PhoneList_Id, zmedcommon.COMM_Phone.Name, zmedcommon.COMM_Phone.Value, zmedcommon.COMM_Phone.Note, zmedcommon.COMM_Phone.IsPrivate, zmedcommon.COMM_Phone.IsPrimary, zmedcommon.COMM_Phone.ContactType,zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_SelectionDetails.SelectionDetails_Id, zlmsadmin.ADM_SelectionDetails.ScenarioSelection_Id, zlmsadmin.ADM_SelectionDetails.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_SelectionDetails.CourseDefCode, zlmsadmin.ADM_SelectionDetails.NumberOfPeriods, zlmsadmin.ADM_SelectionDetails.UserStamp, zlmsadmin.ADM_SelectionDetails.TimeStamp,zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.CourseDefCodes, zlmsadmin.ADM_EduScenarioOptionalGrp.NumberOfPeriods, zlmsadmin.ADM_EduScenarioOptionalGrp.type,zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id, zlmsadmin.ADM_OptionalCourseGroup.Name, zlmsadmin.ADM_OptionalCourseGroup.MinimumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.MaximumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.IsSelectedByStudent,zlmsadmin.ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationType, zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus, zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade,zlmsadmin.ADM_StreamGrade.StreamGrade_Id, zlmsadmin.ADM_StreamGrade.Name, zlmsadmin.ADM_StreamGrade.Title, zlmsadmin.ADM_StreamGrade.Grade_Id,zlmsadmin.ADM_Grade.Grade_Id, zlmsadmin.ADM_Grade.EducationPathDef_Id, zlmsadmin.ADM_Grade.Name, zlmsadmin.ADM_Grade.Title, zlmsadmin.ADM_Grade.Position, zlmsadmin.ADM_Grade.SchoolLevel, zlmsadmin.ADM_Grade.MinAge, zlmsadmin.ADM_Grade.MinSpAge, zlmsadmin.ADM_Grade.MaxAge, zlmsadmin.ADM_Grade.MaxSpAge, zlmsadmin.ADM_Grade.MinAgeMargin, zlmsadmin.ADM_Grade.MinAgeMarginUnit, zlmsadmin.ADM_Grade.MaxAgeMargin, zlmsadmin.ADM_Grade.MaxAgeMarginUnit, zlmsadmin.ADM_Grade.CapacityGroup, zlmsadmin.ADM_Grade.MinAgeMargin2, zlmsadmin.ADM_Grade.MinAgeMarginUnit2, zlmsadmin.ADM_Grade.MaxAgeMargin2, zlmsadmin.ADM_Grade.MaxAgeMarginUnit2, zlmsadmin.ADM_Grade.ExternalId, zlmsadmin.ADM_Grade.CommunityTitlePrefix, zlmsadmin.ADM_Grade.AgeReferenceDate, zlmsadmin.ADM_Grade.VStartDate, zlmsadmin.ADM_Grade.UserStamp, zlmsadmin.ADM_Grade.TimeStamp,zlmsadmin.ADM_CourseDefStreamGrade.CourseDefStreamGrade_Id, zlmsadmin.ADM_CourseDefStreamGrade.CourseDef_Id, zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id, zlmsadmin.ADM_CourseDefStreamGrade.IsOptional, zlmsadmin.ADM_CourseDefStreamGrade.OptionalCourseGroup_Id,zlmsadmin.ADM_CourseDef.CourseDef_Id, zlmsadmin.ADM_CourseDef.EducationPathDef_Id, zlmsadmin.ADM_CourseDef.SessionDef_Id, zlmsadmin.ADM_CourseDef.TeachingSubject, zlmsadmin.ADM_CourseDef.TeachingLanguage, zlmsadmin.ADM_CourseDef.Title, zlmsadmin.ADM_CourseDef.NumberOfPeriods, zlmsadmin.ADM_CourseDef.NumberOfPeriodsPerWeek, zlmsadmin.ADM_CourseDef.PeriodDuration, zlmsadmin.ADM_CourseDef.PeriodDurationUnit, zlmsadmin.ADM_CourseDef.SlotColor, zlmsadmin.ADM_CourseDef.StudentGender, zlmsadmin.ADM_CourseDef.IsAcademic, zlmsadmin.ADM_CourseDef.Code, zlmsadmin.ADM_CourseDef.Position, zlmsadmin.ADM_CourseDef.CourseWeight, zlmsadmin.ADM_CourseDef.PassScore, zlmsadmin.ADM_CourseDef.OtherTitle, zlmsadmin.ADM_CourseDef.isTermBasedCourse, zlmsadmin.ADM_CourseDef.Department, zlmsadmin.ADM_CourseDef.UserStamp, zlmsadmin.ADM_CourseDef.TimeStamp,zmedcommon.COMM_ApplicationForm.ApplicationForm_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormNumber, zmedcommon.COMM_ApplicationForm.ApplicationDate, zmedcommon.COMM_ApplicationForm.Applicant_Id, zmedcommon.COMM_ApplicationForm.Workflow_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormType, zmedcommon.COMM_ApplicationForm.Note, zmedcommon.COMM_ApplicationForm.TimeStamp, zmedcommon.COMM_ApplicationForm.UserStamp,zlmsregistration.REG_StudentRegistration.StudentRegistration_Id, zlmsregistration.REG_StudentRegistration.ApplicationForm_Id, zlmsregistration.REG_StudentRegistration.Student_Id, zlmsregistration.REG_StudentRegistration.AcademicYear_Id, zlmsregistration.REG_StudentRegistration.EducationPath_Id, zlmsregistration.REG_StudentRegistration.Enrollment_Id, zlmsregistration.REG_StudentRegistration.EducationType, zlmsregistration.REG_StudentRegistration.EducationFocus, zlmsregistration.REG_StudentRegistration.StreamGrade, zlmsregistration.REG_StudentRegistration.School_Id, zlmsregistration.REG_StudentRegistration.IsTransportRequired, zlmsregistration.REG_StudentRegistration.ExamTime, zlmsregistration.REG_StudentRegistration.ExamScore, zlmsregistration.REG_StudentRegistration.InterviewTime, zlmsregistration.REG_StudentRegistration.DocumentList_Id, zlmsregistration.REG_StudentRegistration.CitizenshipStatus, zlmsregistration.REG_StudentRegistration.ParentWorkPlace, zlmsregistration.REG_StudentRegistration.IsSpecialNeed, zlmsregistration.REG_StudentRegistration.TimeStamp, zlmsregistration.REG_StudentRegistration.UserStamp, zlmsregistration.REG_StudentRegistration.InCatchmentArea, zlmsregistration.REG_StudentRegistration.ProgramCategory_Id,zmedcommon.COMM_Workflow.Workflow_Id, zmedcommon.COMM_Workflow.Name, zmedcommon.COMM_Workflow.Code, zmedcommon.COMM_Workflow.Note,zmedcommon.COMM_ApplicationFormState.ApplicationFormState_Id, zmedcommon.COMM_ApplicationFormState.WorkflowState_Id, zmedcommon.COMM_ApplicationFormState.PrevWorkflowState_Id, zmedcommon.COMM_ApplicationFormState.StateStartDate, zmedcommon.COMM_ApplicationFormState.StateEndDate, zmedcommon.COMM_ApplicationFormState.PerformedByUser_Id, zmedcommon.COMM_ApplicationFormState.AttributeList_Id, zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id, zmedcommon.COMM_ApplicationFormState.IsCurrent, zmedcommon.COMM_ApplicationFormState.Note, zmedcommon.COMM_ApplicationFormState.TimeStamp, zmedcommon.COMM_ApplicationFormState.UserStamp,zmedcommon.COMM_WorkflowState.WorkflowState_Id, zmedcommon.COMM_WorkflowState.Workflow_Id, zmedcommon.COMM_WorkflowState.Name, zmedcommon.COMM_WorkflowState.StateCode, zmedcommon.COMM_WorkflowState.Note FROM zlmsadmin.ADM_ScenarioSelection JOIN zlmsadmin.ADM_Enrollment! ON zlmsadmin.ADM_ScenarioSelection.Enrollment_Id = zlmsadmin.ADM_Enrollment.Enrollment_Id JOIN zlmsadmin.ADM_Student! ON zlmsadmin.ADM_Enrollment.Student_Id = zlmsadmin.ADM_Student.Student_Id JOIN zlmsadmin.ADM_Session ON zlmsadmin.ADM_Enrollment.Session_Id = zlmsadmin.ADM_Session.Session_Id JOIN zlmsadmin.ADM_AcademicYear ON zlmsadmin.ADM_Session.AcademicYear_Id = zlmsadmin.ADM_AcademicYear.AcademicYear_Id JOIN zmedcommon.COMM_Person! ON (zlmsadmin.ADM_Student.Student_Id = zmedcommon.COMM_Person.Person_Id) JOIN zmedcommon.COMM_PhoneList ON zmedcommon.COMM_Person.PhoneList_Id = zmedcommon.COMM_PhoneList.PhoneList_Id JOIN zmedcommon.COMM_Phone ON zmedcommon.COMM_PhoneList.PhoneList_Id = zmedcommon.COMM_Phone.PhoneList_Id JOIN zlmsadmin.ADM_EduScenario ON zlmsadmin.ADM_ScenarioSelection.EduScenario_Id = zlmsadmin.ADM_EduScenario.EduScenario_Id LEFT OUTER JOIN zlmsadmin.ADM_SelectionDetails ON zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id = zlmsadmin.ADM_SelectionDetails.ScenarioSelection_Id JOIN zlmsadmin.ADM_EduScenarioOptionalGrp ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id JOIN zlmsadmin.ADM_OptionalCourseGroup ON zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id JOIN zlmsadmin.ADM_EduScenarioStreamGrade ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id JOIN zlmsadmin.ADM_StreamGrade ON (zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade = zlmsadmin.ADM_StreamGrade.Name) JOIN zlmsadmin.ADM_Grade ON zlmsadmin.ADM_StreamGrade.Grade_Id = zlmsadmin.ADM_Grade.Grade_Id JOIN zlmsadmin.ADM_CourseDefStreamGrade ON zlmsadmin.ADM_StreamGrade.StreamGrade_Id = zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id AND (((zlmsadmin.ADM_StreamGrade.StreamGrade_Id = zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id) AND (zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id = zlmsadmin.ADM_CourseDefStreamGrade.OptionalCourseGroup_Id))) JOIN zlmsadmin.ADM_CourseDef ON zlmsadmin.ADM_CourseDefStreamGrade.CourseDef_Id = zlmsadmin.ADM_CourseDef.CourseDef_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationForm ON zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id = zmedcommon.COMM_ApplicationForm.ApplicationForm_Id LEFT OUTER JOIN zlmsregistration.REG_StudentRegistration ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zlmsregistration.REG_StudentRegistration.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_Workflow ON zmedcommon.COMM_ApplicationForm.Workflow_Id = zmedcommon.COMM_Workflow.Workflow_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationFormState ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_WorkflowState ON zmedcommon.COMM_ApplicationFormState.WorkflowState_Id = zmedcommon.COMM_WorkflowState.WorkflowState_Id WHERE ((((zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198869) AND (zlmsadmin.ADM_Enrollment.School_Id IN(838))) AND (zlmsadmin.ADM_ScenarioSelection.ExitDate IS NULL) AND (zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment = 1)) AND (((zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (zmedcommon.COMM_ApplicationFormState.IsCurrent = 1) AND (zmedcommon.COMM_WorkflowState.StateCode <> 0)) OR (zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NULL)) AND (zlmsadmin.ADM_SelectionDetails.SelectionDetails_Id IS NULL));
20240806 11:59:45.054 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:45.054 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:45.054 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0014 - Allocated=10, Used=1
20240806 11:59:45.054 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0014 - SELECT ADM_ScenarioSelection.ScenarioSelection_Id, ADM_ScenarioSelection.EduScenario_Id, ADM_ScenarioSelection.ApplicationForm_Id, ADM_ScenarioSelection.Enrollment_Id, ADM_ScenarioSelection.SelectionStatus, ADM_ScenarioSelection.JoiningDate, ADM_ScenarioSelection.ExitDate, ADM_ScenarioSelection.UserStamp, ADM_ScenarioSelection.TimeStamp, ADM_ScenarioSelection.NoteHistory_Id, ADM_Enrollment.Enrollment_Id, ADM_Enrollment.School_Id, ADM_Enrollment.Student_Id, ADM_Enrollment.Session_Id, ADM_Enrollment.StreamGrade_Id, ADM_Enrollment.Community_Id, ADM_Enrollment.EnrollmentType, ADM_Enrollment.EntryType, ADM_Enrollment.EntryDate, ADM_Enrollment.TransferFromSchool_Id, ADM_Enrollment.TransferToSchool_Id, ADM_Enrollment.ExitType, ADM_Enrollment.ExitReason, ADM_Enrollment.ExitDate, ADM_Enrollment.Note, ADM_Enrollment.IsSpecialNeed, ADM_Enrollment.ExternalId, ADM_Enrollment.UserStamp, ADM_Enrollment.TimeStamp, ADM_Enrollment.RegistrationStatus, ADM_Enrollment.TransferFromEnrollment_Id, ADM_Enrollment.TransferToCommunity_Id, ADM_Enrollment.IsYearActiveEnrollment, ADM_Enrollment.RecomputePassFail, ADM_Enrollment.MandatoryEducation, ADM_Enrollment.IsWaitingList, ADM_Enrollment.CreateTimeStamp, ADM_Enrollment.IsNotOfficialEnrollment, ADM_Enrollment.UserNote, ADM_Enrollment.DeleteType, ADM_Enrollment.IsDeleted, ADM_Enrollment.CreationUser_Id, ADM_Student.Student_Id, ADM_Student.StudentNumber, ADM_Student.CreationDate, ADM_Student.CreationUser_Id, ADM_Student.UserStamp, ADM_Student.TimeStamp, ADM_Student.IsDeleted, ADM_Student.AttributeList_Id, ADM_Student.CitizenshipStatus, ADM_Session.Session_Id, ADM_Session.AcademicYear_Id, ADM_Session.SessionDef_Id, ADM_Session.Title, ADM_Session.Parent_Id, ADM_Session.StartDate, ADM_Session.EndDate, ADM_Session.Position, ADM_Session.UserStamp, ADM_Session.TimeStamp, ADM_AcademicYear.AcademicYear_Id, ADM_AcademicYear.Title, ADM_AcademicYear.IsCurrent, ADM_AcademicYear.Status, ADM_AcademicYear.POSITION, COMM_Person.Person_Id, COMM_Person.Civility, COMM_Person.IDNumber, COMM_Person.FirstName, COMM_Person.SecondName, COMM_Person.ThirdName, COMM_Person.FourthName, COMM_Person.FamilyName, COMM_Person.EnglishFirstName, COMM_Person.EnglishSecondName, COMM_Person.EnglishThirdName, COMM_Person.EnglishFourthName, COMM_Person.EnglishFamilyName, COMM_Person.BirthName, COMM_Person.BirthDate, COMM_Person.BirthCity, COMM_Person.EnglishBirthCity, COMM_Person.BirthCountry, COMM_Person.Nationality, COMM_Person.Gender, COMM_Person.MaritalStatus, COMM_Person.Photo_Id, COMM_Person.Religion, COMM_Person.ReligionSector, COMM_Person.PhoneList_Id, COMM_Person.AddressList_Id, COMM_Person.OtherIdList_Id, COMM_Person.IsDeleted, COMM_Person.ExternalId, COMM_Person.UserStamp, COMM_Person.TimeStamp, COMM_Person.User_Id, COMM_Person.InformationSource, COMM_Person.LastSyncTime, COMM_Person.IsTemporary, COMM_Person.VStartDate, COMM_PhoneList.PhoneList_Id, COMM_Phone.Phone_Id, COMM_Phone.PhoneList_Id, COMM_Phone.Name, COMM_Phone.Value, COMM_Phone.Note, COMM_Phone.IsPrivate, COMM_Phone.IsPrimary, COMM_Phone.ContactType, ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.ScenarioSelection_Id, ADM_SelectionDetails.EduScenarioOptionalGrp_Id, ADM_SelectionDetails.CourseDefCode, ADM_SelectionDetails.NumberOfPeriods, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp, ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, ADM_EduScenarioOptionalGrp.EduScenario_Id, ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, ADM_EduScenarioOptionalGrp.CourseDefCodes, ADM_EduScenarioOptionalGrp.NumberOfPeriods, ADM_EduScenarioOptionalGrp.type, ADM_OptionalCourseGroup.OptionalCourseGroup_Id, ADM_OptionalCourseGroup.Name, ADM_OptionalCourseGroup.MinimumSelectedCourse, ADM_OptionalCourseGroup.MaximumSelectedCourse, ADM_OptionalCourseGroup.IsSelectedByStudent, ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, ADM_EduScenarioStreamGrade.EduScenario_Id, ADM_EduScenarioStreamGrade.EducationType, ADM_EduScenarioStreamGrade.EducationPath_Id, ADM_EduScenarioStreamGrade.EducationFocus, ADM_EduScenarioStreamGrade.StreamGrade, ADM_StreamGrade.StreamGrade_Id, ADM_StreamGrade.Name, ADM_StreamGrade.Title, ADM_StreamGrade.Grade_Id, ADM_Grade.Grade_Id, ADM_Grade.EducationPathDef_Id, ADM_Grade.Name, ADM_Grade.Title, ADM_Grade.Position, ADM_Grade.SchoolLevel, ADM_Grade.MinAge, ADM_Grade.MinSpAge, ADM_Grade.MaxAge, ADM_Grade.MaxSpAge, ADM_Grade.MinAgeMargin, ADM_Grade.MinAgeMarginUnit, ADM_Grade.MaxAgeMargin, ADM_Grade.MaxAgeMarginUnit, ADM_Grade.CapacityGroup, ADM_Grade.MinAgeMargin2, ADM_Grade.MinAgeMarginUnit2, ADM_Grade.MaxAgeMargin2, ADM_Grade.MaxAgeMarginUnit2, ADM_Grade.ExternalId, ADM_Grade.CommunityTitlePrefix, ADM_Grade.AgeReferenceDate, ADM_Grade.VStartDate, ADM_Grade.UserStamp, ADM_Grade.TimeStamp, ADM_CourseDefStreamGrade.CourseDefStreamGrade_Id, ADM_CourseDefStreamGrade.CourseDef_Id, ADM_CourseDefStreamGrade.StreamGrade_Id, ADM_CourseDefStreamGrade.IsOptional, ADM_CourseDefStreamGrade.OptionalCourseGroup_Id, ADM_CourseDef.CourseDef_Id, ADM_CourseDef.EducationPathDef_Id, ADM_CourseDef.SessionDef_Id, ADM_CourseDef.TeachingSubject, ADM_CourseDef.TeachingLanguage, ADM_CourseDef.Title, ADM_CourseDef.NumberOfPeriods, ADM_CourseDef.NumberOfPeriodsPerWeek, ADM_CourseDef.PeriodDuration, ADM_CourseDef.PeriodDurationUnit, ADM_CourseDef.SlotColor, ADM_CourseDef.StudentGender, ADM_CourseDef.IsAcademic, ADM_CourseDef.Code, ADM_CourseDef.Position, ADM_CourseDef.CourseWeight, ADM_CourseDef.PassScore, ADM_CourseDef.OtherTitle, ADM_CourseDef.isTermBasedCourse, ADM_CourseDef.Department, ADM_CourseDef.UserStamp, ADM_CourseDef.TimeStamp, COMM_ApplicationForm.ApplicationForm_Id, COMM_ApplicationForm.ApplicationFormNumber, COMM_ApplicationForm.ApplicationDate, COMM_ApplicationForm.Applicant_Id, COMM_ApplicationForm.Workflow_Id, COMM_ApplicationForm.ApplicationFormType, COMM_ApplicationForm.Note, COMM_ApplicationForm.TimeStamp, COMM_ApplicationForm.UserStamp, REG_StudentRegistration.StudentRegistration_Id, REG_StudentRegistration.ApplicationForm_Id, REG_StudentRegistration.Student_Id, REG_StudentRegistration.AcademicYear_Id, REG_StudentRegistration.EducationPath_Id, REG_StudentRegistration.Enrollment_Id, REG_StudentRegistration.EducationType, REG_StudentRegistration.EducationFocus, REG_StudentRegistration.StreamGrade, REG_StudentRegistration.School_Id, REG_StudentRegistration.IsTransportRequired, REG_StudentRegistration.ExamTime, REG_StudentRegistration.ExamScore, REG_StudentRegistration.InterviewTime, REG_StudentRegistration.DocumentList_Id, REG_StudentRegistration.CitizenshipStatus, REG_StudentRegistration.ParentWorkPlace, REG_StudentRegistration.IsSpecialNeed, REG_StudentRegistration.TimeStamp, REG_StudentRegistration.UserStamp, REG_StudentRegistration.InCatchmentArea, REG_StudentRegistration.ProgramCategory_Id, COMM_Workflow.Workflow_Id, COMM_Workflow.Name, COMM_Workflow.Code, COMM_Workflow.Note, COMM_ApplicationFormState.ApplicationFormState_Id, COMM_ApplicationFormState.WorkflowState_Id, COMM_ApplicationFormState.PrevWorkflowState_Id, COMM_ApplicationFormState.StateStartDate, COMM_ApplicationFormState.StateEndDate, COMM_ApplicationFormState.PerformedByUser_Id, COMM_ApplicationFormState.AttributeList_Id, COMM_ApplicationFormState.ApplicationForm_Id, COMM_ApplicationFormState.IsCurrent, COMM_ApplicationFormState.Note, COMM_ApplicationFormState.TimeStamp, COMM_ApplicationFormState.UserStamp, COMM_WorkflowState.WorkflowState_Id, COMM_WorkflowState.Workflow_Id, COMM_WorkflowState.Name, COMM_WorkflowState.StateCode, COMM_WorkflowState.Note FROM ADM_ScenarioSelection JOIN ADM_Enrollment ON ((ADM_Enrollment.IsDeleted = 0)) AND ((ADM_ScenarioSelection.Enrollment_Id = ADM_Enrollment.Enrollment_Id)) JOIN ADM_Student ON ((ADM_Student.IsDeleted = 0)) AND ((ADM_Enrollment.Student_Id = ADM_Student.Student_Id)) JOIN ADM_Session ON (ADM_Enrollment.Session_Id = ADM_Session.Session_Id) JOIN ADM_AcademicYear ON (ADM_Session.AcademicYear_Id = ADM_AcademicYear.AcademicYear_Id) JOIN COMM_Person ON ((COMM_Person.IsDeleted = 0)) AND ((ADM_Student.Student_Id = COMM_Person.Person_Id)) JOIN COMM_PhoneList ON (COMM_Person.PhoneList_Id = COMM_PhoneList.PhoneList_Id) JOIN COMM_Phone ON (COMM_PhoneList.PhoneList_Id = COMM_Phone.PhoneList_Id) JOIN ADM_EduScenario ON (ADM_ScenarioSelection.EduScenario_Id = ADM_EduScenario.EduScenario_Id) LEFT OUTER JOIN ADM_SelectionDetails ON (ADM_ScenarioSelection.ScenarioSelection_Id = ADM_SelectionDetails.ScenarioSelection_Id) JOIN ADM_EduScenarioOptionalGrp ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioOptionalGrp.EduScenario_Id) JOIN ADM_OptionalCourseGroup ON (ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = ADM_OptionalCourseGroup.OptionalCourseGroup_Id) JOIN ADM_EduScenarioStreamGrade ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioStreamGrade.EduScenario_Id) JOIN ADM_StreamGrade ON (ADM_EduScenarioStreamGrade.StreamGrade = ADM_StreamGrade.Name) JOIN ADM_Grade ON (ADM_StreamGrade.Grade_Id = ADM_Grade.Grade_Id) JOIN ADM_CourseDefStreamGrade ON ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND (ADM_OptionalCourseGroup.OptionalCourseGroup_Id = ADM_CourseDefStreamGrade.OptionalCourseGroup_Id))) JOIN ADM_CourseDef ON (ADM_CourseDefStreamGrade.CourseDef_Id = ADM_CourseDef.CourseDef_Id) LEFT OUTER JOIN COMM_ApplicationForm ON (ADM_ScenarioSelection.ApplicationForm_Id = COMM_ApplicationForm.ApplicationForm_Id) LEFT OUTER JOIN REG_StudentRegistration ON (COMM_ApplicationForm.ApplicationForm_Id = REG_StudentRegistration.ApplicationForm_Id) LEFT OUTER JOIN COMM_Workflow ON (COMM_ApplicationForm.Workflow_Id = COMM_Workflow.Workflow_Id) LEFT OUTER JOIN COMM_ApplicationFormState ON (COMM_ApplicationForm.ApplicationForm_Id = COMM_ApplicationFormState.ApplicationForm_Id) LEFT OUTER JOIN COMM_WorkflowState ON (COMM_ApplicationFormState.WorkflowState_Id = COMM_WorkflowState.WorkflowState_Id) WHERE ((((((ADM_EduScenario.EduScenario_Id = ?) AND (ADM_Enrollment.School_Id IN(?))) AND (ADM_ScenarioSelection.ExitDate IS NULL)) AND (ADM_Enrollment.IsYearActiveEnrollment = ?)) AND ((((COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (COMM_ApplicationFormState.IsCurrent = ?)) AND (COMM_WorkflowState.StateCode <> ?)) OR (COMM_ApplicationForm.ApplicationForm_Id IS NULL))) AND (ADM_SelectionDetails.SelectionDetails_Id IS NULL))
20240806 11:59:45.055 006E =FUN= [ZQL.PhysicalConnection] Parameters: 622198869, 838, 1, 1, 0
20240806 11:59:45.055 006E =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:46.126 006E =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:46.126 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:46.271 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0014
20240806 11:59:46.271 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 251 columns, 252 rows
20240806 11:59:46.271 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0014
20240806 11:59:46.271 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0014
20240806 11:59:46.271 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:46.271 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:46.271 006E =WRN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: zcare.zdek.dbag.DBag.load took too much time: 1226 ms
20240806 11:59:46.271 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.dbag.DBag.load
20240806 11:59:46.272 006E =WRN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: zcare.zlms.educationalscenario.enrollment.dataset.ElectiveScenarioStudentListDetailDataSet$Handler.handleContextChange took too much time: 1582 ms
20240806 11:59:46.272 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 <- zcare.zlms.educationalscenario.enrollment.dataset.ElectiveScenarioStudentListDetailDataSet$Handler.handleContextChange
20240806 11:59:46.272 006E =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 11:59:46.272 006E =API= [CallClient] null: <= DBAG_COPY EduScenarioStudentsDetail0
20240806 11:59:46.274 006E =FUN= [CallFromClient] 1901330445:6934: InputMessage size 910
20240806 11:59:46.274 006E =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 12235
20240806 11:59:46.274 006E =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 11:59:46.379 007A =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=38)
20240806 11:59:46.379 007A =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:HEARTBEAT
20240806 11:59:46.379 007A =FUN= [CallFromClient] null: Parameter FILTER_LIST=0:SQL:zmedstructure.STRUCT_SiteType:
29:Hierarchy:
8:dictionary.DIC_DictionaryEntry:
39:
33::
8:common.COMM_WorkflowState:
20:MessageDelivery:
27::
20:ApplicationFormState:
35::
5:lmsregistration.REG_StudentRegistration:
8:admin.ADM_StreamGrade:
30:
19:essionDef:
25::
19:chool:
20:enarioSelection:
18:Grade:
18:Enrollment:
19:ducationPathDef:
35:
21:ScenarioStreamGrade:
41:
29:OptionalGrp:
29::
30:
18:CourseDefStreamGrade:
27::
24::
20:mmunityMember:
27::
1:CRIPT_CACHE_CLEAR_Filter:
20240806 11:59:46.379 007A =FUN= [CallFromClient] null: Parameter LAST_NOTIFICATION_TIME=20240806 11:57:48.720
20240806 11:59:46.379 007A =FUN= [CallFromClient] null: Parameter LAST_NOTIFICATION_ID=1901330437
20240806 11:59:46.379 007A =FUN= [CallFromClient] null: Parameter CurrentCallId=1695191359
20240806 11:59:46.379 007A =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 11:59:46.379 007A =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 11:59:46.379 007A =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 11:59:46.379 007A =API= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 3 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: administrator:1901330445
20240806 11:59:46.379 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:46.379 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0012 - Allocated=10, Used=1
20240806 11:59:46.379 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0012
20240806 11:59:46.413 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 11:59:46.413 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0012
20240806 11:59:46.413 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0012
20240806 11:59:46.413 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:46.413 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:46.413 007A =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 11:59:46.413 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT TOP 5000 zdeksystem.SYS_Notification.Notification_Id, zdeksystem.SYS_Notification.SenderSession_Id, zdeksystem.SYS_Notification.SenderUser_Id, zdeksystem.SYS_Notification.EmissionTime, zdeksystem.SYS_Notification.Subject, zdeksystem.SYS_Notification.Message FROM zdeksystem.SYS_Notification WHERE ((zdeksystem.SYS_Notification.EmissionTime >= '20240806 11:57:48.721') AND (zdeksystem.SYS_Notification.EmissionTime < '20240806 11:58:14.607')) ORDER BY zdeksystem.SYS_Notification.EmissionTime ASC, zdeksystem.SYS_Notification.Notification_Id ASC;
20240806 11:59:46.413 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:46.413 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:46.413 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0013 - Allocated=10, Used=1
20240806 11:59:46.413 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0013 - SELECT TOP 5000 SYS_Notification.Notification_Id, SYS_Notification.SenderSession_Id, SYS_Notification.SenderUser_Id, SYS_Notification.EmissionTime, SYS_Notification.Subject, SYS_Notification.Message FROM SYS_Notification WHERE ((SYS_Notification.EmissionTime >= ?) AND (SYS_Notification.EmissionTime < ?)) ORDER BY SYS_Notification.EmissionTime ASC, SYS_Notification.Notification_Id ASC
20240806 11:59:46.413 007A =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:57:48.721', '20240806 11:58:14.607'
20240806 11:59:46.413 007A =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:46.607 007A =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:46.607 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:46.607 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0013
20240806 11:59:46.607 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnection.endQuery : 6 columns, 0 rows
20240806 11:59:46.607 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0013
20240806 11:59:46.607 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0013
20240806 11:59:46.607 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:46.607 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:46.607 007A =FUN= [NotificationCache] null: Cache updated, now from 20240806 11:53:38.712 to 20240806 11:57:48.721
20240806 11:59:46.607 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:46.607 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0009 - Allocated=10, Used=1
20240806 11:59:46.607 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getCpuLoadFromDb
20240806 11:59:46.632 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getCpuLoadFromDb
20240806 11:59:46.632 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0009
20240806 11:59:46.632 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0009
20240806 11:59:46.632 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:46.632 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:46.632 007A =API= [ZDataAccess] ZDataServer: == ServerLoad: 42
20240806 11:59:46.633 007A =WRN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: zcare.zdataserver.ZDataAccess.getNotifications took too much time: 253 ms
20240806 11:59:46.633 007A =API= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 3 <- zcare.zdataserver.ZDataAccess.getNotifications
20240806 11:59:46.633 007A =API= [ZDataAccess] ZDataServer: == ServerLoad: 42
20240806 11:59:46.633 007A =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 11:59:46.633 007A =FUN= [CallFromClient] 1901330445:6934: InputMessage size 673
20240806 11:59:46.633 007A =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 139
20240806 11:59:46.633 007A =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 11:59:48.491 0071 =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=42)
20240806 11:59:48.491 0071 =API= [CallFromClient] null: => DBAG_COPY DIALOG_MANAGER_DATA
20240806 11:59:48.491 0071 =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:CONTEXT_CHANGES
20240806 11:59:48.491 0071 =FUN= [CallFromClient] null: Parameter FROM_CTX=S_Assign Students to Scenarios
20240806 11:59:48.491 0071 =FUN= [CallFromClient] null: Parameter DATA_SET=EduScenariosAssigmentBanner0
20240806 11:59:48.491 0071 =FUN= [CallFromClient] null: Parameter HANDLER_NAME=EDU_SCENARIO_ASSIGN_BANNER
20240806 11:59:48.491 0071 =FUN= [CallFromClient] null: Parameter P1=-2194|3|1|EDU_SCENARIO_ID|622198871
20240806 11:59:48.491 0071 =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 11:59:48.491 0071 =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 11:59:48.491 0071 =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 11:59:48.491 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 -> zcare.zdek.dbag.DBag.load
20240806 11:59:48.492 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationType, zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus, zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade FROM zlmsadmin.ADM_EduScenario JOIN zlmsadmin.ADM_EduScenarioStreamGrade ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id WHERE (zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198871);
20240806 11:59:48.492 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:48.493 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:48.493 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0008 - Allocated=10, Used=1
20240806 11:59:48.494 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0008 - SELECT ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, ADM_EduScenarioStreamGrade.EduScenario_Id, ADM_EduScenarioStreamGrade.EducationType, ADM_EduScenarioStreamGrade.EducationPath_Id, ADM_EduScenarioStreamGrade.EducationFocus, ADM_EduScenarioStreamGrade.StreamGrade FROM ADM_EduScenario JOIN ADM_EduScenarioStreamGrade ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioStreamGrade.EduScenario_Id) WHERE (ADM_EduScenario.EduScenario_Id = ?)
20240806 11:59:48.494 0071 =FUN= [ZQL.PhysicalConnection] Parameters: 622198871
20240806 11:59:48.494 0071 =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:48.650 0071 =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:48.651 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:48.651 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0008
20240806 11:59:48.651 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnection.endQuery : 14 columns, 1 rows
20240806 11:59:48.651 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0008
20240806 11:59:48.651 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0008
20240806 11:59:48.651 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:48.651 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:48.651 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 <- zcare.zdek.dbag.DBag.load
20240806 11:59:48.651 0071 =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 11:59:48.651 0071 =API= [CallClient] null: <= DBAG_COPY EduScenariosAssigmentBanner0
20240806 11:59:48.652 0071 =FUN= [CallFromClient] 1901330445:6934: InputMessage size 446
20240806 11:59:48.652 0071 =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 353
20240806 11:59:48.652 0071 =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 11:59:48.684 006B =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=42)
20240806 11:59:48.684 006B =API= [CallFromClient] null: => DBAG_COPY DIALOG_MANAGER_DATA
20240806 11:59:48.685 006B =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:CONTEXT_CHANGES
20240806 11:59:48.685 006B =FUN= [CallFromClient] null: Parameter FROM_CTX=D_EduScenarioStudentList0
20240806 11:59:48.685 006B =FUN= [CallFromClient] null: Parameter DATA_SET=EduScenariosAssigmentBanner0
20240806 11:59:48.685 006B =FUN= [CallFromClient] null: Parameter HANDLER_NAME=EDU_SCENARIO_ASSIGN_BANNER
20240806 11:59:48.685 006B =FUN= [CallFromClient] null: Parameter P1=-2194|3|1|EDU_SCENARIO_ID|622198871
20240806 11:59:48.685 006B =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 11:59:48.685 006B =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 11:59:48.685 006B =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 11:59:48.685 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 -> zcare.zdek.dbag.DBag.load
20240806 11:59:48.685 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationType, zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus, zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade FROM zlmsadmin.ADM_EduScenario JOIN zlmsadmin.ADM_EduScenarioStreamGrade ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id WHERE (zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198871);
20240806 11:59:48.685 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:48.685 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:48.685 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0002 - Allocated=10, Used=1
20240806 11:59:48.686 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0002 - SELECT ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, ADM_EduScenarioStreamGrade.EduScenario_Id, ADM_EduScenarioStreamGrade.EducationType, ADM_EduScenarioStreamGrade.EducationPath_Id, ADM_EduScenarioStreamGrade.EducationFocus, ADM_EduScenarioStreamGrade.StreamGrade FROM ADM_EduScenario JOIN ADM_EduScenarioStreamGrade ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioStreamGrade.EduScenario_Id) WHERE (ADM_EduScenario.EduScenario_Id = ?)
20240806 11:59:48.686 006B =FUN= [ZQL.PhysicalConnection] Parameters: 622198871
20240806 11:59:48.686 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:48.763 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:48.764 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:48.764 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0002
20240806 11:59:48.764 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnection.endQuery : 14 columns, 1 rows
20240806 11:59:48.764 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0002
20240806 11:59:48.764 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0002
20240806 11:59:48.764 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:48.764 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:48.764 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 <- zcare.zdek.dbag.DBag.load
20240806 11:59:48.765 006B =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 11:59:48.765 006B =API= [CallClient] null: <= DBAG_COPY EduScenariosAssigmentBanner0
20240806 11:59:48.765 006B =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:CONTEXT_CHANGES
20240806 11:59:48.765 006B =FUN= [CallFromClient] null: Parameter FROM_CTX=D_EduScenarioStudentList0
20240806 11:59:48.765 006B =FUN= [CallFromClient] null: Parameter DATA_SET=EduScenarioStudentsDetail0
20240806 11:59:48.765 006B =FUN= [CallFromClient] null: Parameter HANDLER_NAME=EDU_SCENARIO_STUDENTS_DETAIL
20240806 11:59:48.765 006B =FUN= [CallFromClient] null: Parameter P1=-2466|3|1|EDU_SCENARIO_ID|622198871
20240806 11:59:48.765 006B =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 11:59:48.765 006B =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 11:59:48.765 006B =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 11:59:48.766 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 -> zcare.zlms.educationalscenario.enrollment.dataset.ElectiveScenarioStudentListDetailDataSet$Handler.handleContextChange
20240806 11:59:48.780 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.dbag.DBag.load
20240806 11:59:48.780 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id, zlmsadmin.ADM_ScenarioSelection.EduScenario_Id, zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id, zlmsadmin.ADM_ScenarioSelection.Enrollment_Id, zlmsadmin.ADM_ScenarioSelection.SelectionStatus, zlmsadmin.ADM_ScenarioSelection.JoiningDate, zlmsadmin.ADM_ScenarioSelection.ExitDate, zlmsadmin.ADM_ScenarioSelection.UserStamp, zlmsadmin.ADM_ScenarioSelection.TimeStamp, zlmsadmin.ADM_ScenarioSelection.NoteHistory_Id,zlmsadmin.ADM_SelectionDetails.SelectionDetails_Id, zlmsadmin.ADM_SelectionDetails.ScenarioSelection_Id, zlmsadmin.ADM_SelectionDetails.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_SelectionDetails.CourseDefCode, zlmsadmin.ADM_SelectionDetails.NumberOfPeriods, zlmsadmin.ADM_SelectionDetails.UserStamp, zlmsadmin.ADM_SelectionDetails.TimeStamp,zlmsadmin.ADM_Enrollment.Enrollment_Id, zlmsadmin.ADM_Enrollment.School_Id, zlmsadmin.ADM_Enrollment.Student_Id, zlmsadmin.ADM_Enrollment.Session_Id, zlmsadmin.ADM_Enrollment.StreamGrade_Id, zlmsadmin.ADM_Enrollment.Community_Id, zlmsadmin.ADM_Enrollment.EnrollmentType, zlmsadmin.ADM_Enrollment.EntryType, zlmsadmin.ADM_Enrollment.EntryDate, zlmsadmin.ADM_Enrollment.TransferFromSchool_Id, zlmsadmin.ADM_Enrollment.TransferToSchool_Id, zlmsadmin.ADM_Enrollment.ExitType, zlmsadmin.ADM_Enrollment.ExitReason, zlmsadmin.ADM_Enrollment.ExitDate, zlmsadmin.ADM_Enrollment.Note, zlmsadmin.ADM_Enrollment.IsSpecialNeed, zlmsadmin.ADM_Enrollment.ExternalId, zlmsadmin.ADM_Enrollment.UserStamp, zlmsadmin.ADM_Enrollment.TimeStamp, zlmsadmin.ADM_Enrollment.RegistrationStatus, zlmsadmin.ADM_Enrollment.TransferFromEnrollment_Id, zlmsadmin.ADM_Enrollment.TransferToCommunity_Id, zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment, zlmsadmin.ADM_Enrollment.RecomputePassFail, zlmsadmin.ADM_Enrollment.MandatoryEducation, zlmsadmin.ADM_Enrollment.IsWaitingList, zlmsadmin.ADM_Enrollment.CreateTimeStamp, zlmsadmin.ADM_Enrollment.IsNotOfficialEnrollment, zlmsadmin.ADM_Enrollment.UserNote, zlmsadmin.ADM_Enrollment.DeleteType, zlmsadmin.ADM_Enrollment.IsDeleted, zlmsadmin.ADM_Enrollment.CreationUser_Id,zmedcommon.COMM_ApplicationForm.ApplicationForm_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormNumber, zmedcommon.COMM_ApplicationForm.ApplicationDate, zmedcommon.COMM_ApplicationForm.Applicant_Id, zmedcommon.COMM_ApplicationForm.Workflow_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormType, zmedcommon.COMM_ApplicationForm.Note, zmedcommon.COMM_ApplicationForm.TimeStamp, zmedcommon.COMM_ApplicationForm.UserStamp,zlmsregistration.REG_StudentRegistration.StudentRegistration_Id, zlmsregistration.REG_StudentRegistration.ApplicationForm_Id, zlmsregistration.REG_StudentRegistration.Student_Id, zlmsregistration.REG_StudentRegistration.AcademicYear_Id, zlmsregistration.REG_StudentRegistration.EducationPath_Id, zlmsregistration.REG_StudentRegistration.Enrollment_Id, zlmsregistration.REG_StudentRegistration.EducationType, zlmsregistration.REG_StudentRegistration.EducationFocus, zlmsregistration.REG_StudentRegistration.StreamGrade, zlmsregistration.REG_StudentRegistration.School_Id, zlmsregistration.REG_StudentRegistration.IsTransportRequired, zlmsregistration.REG_StudentRegistration.ExamTime, zlmsregistration.REG_StudentRegistration.ExamScore, zlmsregistration.REG_StudentRegistration.InterviewTime, zlmsregistration.REG_StudentRegistration.DocumentList_Id, zlmsregistration.REG_StudentRegistration.CitizenshipStatus, zlmsregistration.REG_StudentRegistration.ParentWorkPlace, zlmsregistration.REG_StudentRegistration.IsSpecialNeed, zlmsregistration.REG_StudentRegistration.TimeStamp, zlmsregistration.REG_StudentRegistration.UserStamp, zlmsregistration.REG_StudentRegistration.InCatchmentArea, zlmsregistration.REG_StudentRegistration.ProgramCategory_Id,zmedcommon.COMM_Workflow.Workflow_Id, zmedcommon.COMM_Workflow.Name, zmedcommon.COMM_Workflow.Code, zmedcommon.COMM_Workflow.Note,zmedcommon.COMM_ApplicationFormState.ApplicationFormState_Id, zmedcommon.COMM_ApplicationFormState.WorkflowState_Id, zmedcommon.COMM_ApplicationFormState.PrevWorkflowState_Id, zmedcommon.COMM_ApplicationFormState.StateStartDate, zmedcommon.COMM_ApplicationFormState.StateEndDate, zmedcommon.COMM_ApplicationFormState.PerformedByUser_Id, zmedcommon.COMM_ApplicationFormState.AttributeList_Id, zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id, zmedcommon.COMM_ApplicationFormState.IsCurrent, zmedcommon.COMM_ApplicationFormState.Note, zmedcommon.COMM_ApplicationFormState.TimeStamp, zmedcommon.COMM_ApplicationFormState.UserStamp,zmedcommon.COMM_WorkflowState.WorkflowState_Id, zmedcommon.COMM_WorkflowState.Workflow_Id, zmedcommon.COMM_WorkflowState.Name, zmedcommon.COMM_WorkflowState.StateCode, zmedcommon.COMM_WorkflowState.Note,zlmsadmin.ADM_Student.Student_Id, zlmsadmin.ADM_Student.StudentNumber, zlmsadmin.ADM_Student.CreationDate, zlmsadmin.ADM_Student.CreationUser_Id, zlmsadmin.ADM_Student.UserStamp, zlmsadmin.ADM_Student.TimeStamp, zlmsadmin.ADM_Student.IsDeleted, zlmsadmin.ADM_Student.AttributeList_Id, zlmsadmin.ADM_Student.CitizenshipStatus,zmedcommon.COMM_Person.Person_Id, zmedcommon.COMM_Person.Civility, zmedcommon.COMM_Person.IDNumber, zmedcommon.COMM_Person.FirstName, zmedcommon.COMM_Person.SecondName, zmedcommon.COMM_Person.ThirdName, zmedcommon.COMM_Person.FourthName, zmedcommon.COMM_Person.FamilyName, zmedcommon.COMM_Person.EnglishFirstName, zmedcommon.COMM_Person.EnglishSecondName, zmedcommon.COMM_Person.EnglishThirdName, zmedcommon.COMM_Person.EnglishFourthName, zmedcommon.COMM_Person.EnglishFamilyName, zmedcommon.COMM_Person.BirthName, zmedcommon.COMM_Person.BirthDate, zmedcommon.COMM_Person.BirthCity, zmedcommon.COMM_Person.EnglishBirthCity, zmedcommon.COMM_Person.BirthCountry, zmedcommon.COMM_Person.Nationality, zmedcommon.COMM_Person.Gender, zmedcommon.COMM_Person.MaritalStatus, zmedcommon.COMM_Person.Photo_Id, zmedcommon.COMM_Person.Religion, zmedcommon.COMM_Person.ReligionSector, zmedcommon.COMM_Person.PhoneList_Id, zmedcommon.COMM_Person.AddressList_Id, zmedcommon.COMM_Person.OtherIdList_Id, zmedcommon.COMM_Person.IsDeleted, zmedcommon.COMM_Person.ExternalId, zmedcommon.COMM_Person.UserStamp, zmedcommon.COMM_Person.TimeStamp, zmedcommon.COMM_Person.User_Id, zmedcommon.COMM_Person.InformationSource, zmedcommon.COMM_Person.LastSyncTime, zmedcommon.COMM_Person.IsTemporary, zmedcommon.COMM_Person.VStartDate,zmedcommon.COMM_PhoneList.PhoneList_Id,zmedcommon.COMM_Phone.Phone_Id, zmedcommon.COMM_Phone.PhoneList_Id, zmedcommon.COMM_Phone.Name, zmedcommon.COMM_Phone.Value, zmedcommon.COMM_Phone.Note, zmedcommon.COMM_Phone.IsPrivate, zmedcommon.COMM_Phone.IsPrimary, zmedcommon.COMM_Phone.ContactType,zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.CourseDefCodes, zlmsadmin.ADM_EduScenarioOptionalGrp.NumberOfPeriods, zlmsadmin.ADM_EduScenarioOptionalGrp.type,zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id, zlmsadmin.ADM_OptionalCourseGroup.Name, zlmsadmin.ADM_OptionalCourseGroup.MinimumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.MaximumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.IsSelectedByStudent,zlmsadmin.ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationType, zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus, zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade,zlmsadmin.ADM_StreamGrade.StreamGrade_Id, zlmsadmin.ADM_StreamGrade.Name, zlmsadmin.ADM_StreamGrade.Title, zlmsadmin.ADM_StreamGrade.Grade_Id,zlmsadmin.ADM_Grade.Grade_Id, zlmsadmin.ADM_Grade.EducationPathDef_Id, zlmsadmin.ADM_Grade.Name, zlmsadmin.ADM_Grade.Title, zlmsadmin.ADM_Grade.Position, zlmsadmin.ADM_Grade.SchoolLevel, zlmsadmin.ADM_Grade.MinAge, zlmsadmin.ADM_Grade.MinSpAge, zlmsadmin.ADM_Grade.MaxAge, zlmsadmin.ADM_Grade.MaxSpAge, zlmsadmin.ADM_Grade.MinAgeMargin, zlmsadmin.ADM_Grade.MinAgeMarginUnit, zlmsadmin.ADM_Grade.MaxAgeMargin, zlmsadmin.ADM_Grade.MaxAgeMarginUnit, zlmsadmin.ADM_Grade.CapacityGroup, zlmsadmin.ADM_Grade.MinAgeMargin2, zlmsadmin.ADM_Grade.MinAgeMarginUnit2, zlmsadmin.ADM_Grade.MaxAgeMargin2, zlmsadmin.ADM_Grade.MaxAgeMarginUnit2, zlmsadmin.ADM_Grade.ExternalId, zlmsadmin.ADM_Grade.CommunityTitlePrefix, zlmsadmin.ADM_Grade.AgeReferenceDate, zlmsadmin.ADM_Grade.VStartDate, zlmsadmin.ADM_Grade.UserStamp, zlmsadmin.ADM_Grade.TimeStamp,zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id, zlmsadmin.ADM_EducationPathDef.EducationPath_Id, zlmsadmin.ADM_EducationPathDef.StartDate, zlmsadmin.ADM_EducationPathDef.EndDate, zlmsadmin.ADM_EducationPathDef.IsActive, zlmsadmin.ADM_EducationPathDef.EducationType, zlmsadmin.ADM_EducationPathDef.EducationFocus,zlmsadmin.ADM_SessionDef.SessionDef_Id, zlmsadmin.ADM_SessionDef.EducationPathDef_Id, zlmsadmin.ADM_SessionDef.Title, zlmsadmin.ADM_SessionDef.SessionType, zlmsadmin.ADM_SessionDef.Duration, zlmsadmin.ADM_SessionDef.DurationUnit, zlmsadmin.ADM_SessionDef.Parent_Id, zlmsadmin.ADM_SessionDef.Position,zlmsadmin.ADM_Session.Session_Id, zlmsadmin.ADM_Session.AcademicYear_Id, zlmsadmin.ADM_Session.SessionDef_Id, zlmsadmin.ADM_Session.Title, zlmsadmin.ADM_Session.Parent_Id, zlmsadmin.ADM_Session.StartDate, zlmsadmin.ADM_Session.EndDate, zlmsadmin.ADM_Session.Position, zlmsadmin.ADM_Session.UserStamp, zlmsadmin.ADM_Session.TimeStamp,zlmsadmin.ADM_CourseDefStreamGrade.CourseDefStreamGrade_Id, zlmsadmin.ADM_CourseDefStreamGrade.CourseDef_Id, zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id, zlmsadmin.ADM_CourseDefStreamGrade.IsOptional, zlmsadmin.ADM_CourseDefStreamGrade.OptionalCourseGroup_Id,zlmsadmin.ADM_CourseDef.CourseDef_Id, zlmsadmin.ADM_CourseDef.EducationPathDef_Id, zlmsadmin.ADM_CourseDef.SessionDef_Id, zlmsadmin.ADM_CourseDef.TeachingSubject, zlmsadmin.ADM_CourseDef.TeachingLanguage, zlmsadmin.ADM_CourseDef.Title, zlmsadmin.ADM_CourseDef.NumberOfPeriods, zlmsadmin.ADM_CourseDef.NumberOfPeriodsPerWeek, zlmsadmin.ADM_CourseDef.PeriodDuration, zlmsadmin.ADM_CourseDef.PeriodDurationUnit, zlmsadmin.ADM_CourseDef.SlotColor, zlmsadmin.ADM_CourseDef.StudentGender, zlmsadmin.ADM_CourseDef.IsAcademic, zlmsadmin.ADM_CourseDef.Code, zlmsadmin.ADM_CourseDef.Position, zlmsadmin.ADM_CourseDef.CourseWeight, zlmsadmin.ADM_CourseDef.PassScore, zlmsadmin.ADM_CourseDef.OtherTitle, zlmsadmin.ADM_CourseDef.isTermBasedCourse, zlmsadmin.ADM_CourseDef.Department, zlmsadmin.ADM_CourseDef.UserStamp, zlmsadmin.ADM_CourseDef.TimeStamp,zlmsadmin.ADM_AcademicYear.AcademicYear_Id, zlmsadmin.ADM_AcademicYear.Title, zlmsadmin.ADM_AcademicYear.IsCurrent, zlmsadmin.ADM_AcademicYear.Status, zlmsadmin.ADM_AcademicYear.POSITION,zmedcommon.COMM_NoteHistory.NoteHistory_Id,zmedcommon.COMM_Note.Note_Id, zmedcommon.COMM_Note.NoteHistory_Id, zmedcommon.COMM_Note.Text, zmedcommon.COMM_Note.User_Id, zmedcommon.COMM_Note.NoteDate, zmedcommon.COMM_Note.Status, zmedcommon.COMM_Note.UserStamp, zmedcommon.COMM_Note.TimeStamp FROM zlmsadmin.ADM_ScenarioSelection JOIN zlmsadmin.ADM_SelectionDetails ON zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id = zlmsadmin.ADM_SelectionDetails.ScenarioSelection_Id JOIN zlmsadmin.ADM_Enrollment! ON zlmsadmin.ADM_ScenarioSelection.Enrollment_Id = zlmsadmin.ADM_Enrollment.Enrollment_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationForm ON zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id = zmedcommon.COMM_ApplicationForm.ApplicationForm_Id LEFT OUTER JOIN zlmsregistration.REG_StudentRegistration ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zlmsregistration.REG_StudentRegistration.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_Workflow ON zmedcommon.COMM_ApplicationForm.Workflow_Id = zmedcommon.COMM_Workflow.Workflow_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationFormState ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_WorkflowState ON zmedcommon.COMM_ApplicationFormState.WorkflowState_Id = zmedcommon.COMM_WorkflowState.WorkflowState_Id JOIN zlmsadmin.ADM_Student! ON zlmsadmin.ADM_Enrollment.Student_Id = zlmsadmin.ADM_Student.Student_Id JOIN zmedcommon.COMM_Person! ON (zlmsadmin.ADM_Student.Student_Id = zmedcommon.COMM_Person.Person_Id) JOIN zmedcommon.COMM_PhoneList ON zmedcommon.COMM_Person.PhoneList_Id = zmedcommon.COMM_PhoneList.PhoneList_Id JOIN zmedcommon.COMM_Phone ON zmedcommon.COMM_PhoneList.PhoneList_Id = zmedcommon.COMM_Phone.PhoneList_Id JOIN zlmsadmin.ADM_EduScenario ON zlmsadmin.ADM_ScenarioSelection.EduScenario_Id = zlmsadmin.ADM_EduScenario.EduScenario_Id JOIN zlmsadmin.ADM_EduScenarioOptionalGrp ON zlmsadmin.ADM_SelectionDetails.EduScenarioOptionalGrp_Id = zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id JOIN zlmsadmin.ADM_OptionalCourseGroup ON zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id JOIN zlmsadmin.ADM_EduScenarioStreamGrade ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id JOIN zlmsadmin.ADM_StreamGrade ON (zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade = zlmsadmin.ADM_StreamGrade.Name) JOIN zlmsadmin.ADM_Grade ON zlmsadmin.ADM_StreamGrade.Grade_Id = zlmsadmin.ADM_Grade.Grade_Id JOIN zlmsadmin.ADM_EducationPathDef ON ((zlmsadmin.ADM_EducationPathDef.EducationPath_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus = zlmsadmin.ADM_EducationPathDef.EducationFocus) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationType = zlmsadmin.ADM_EducationPathDef.EducationType)) JOIN zlmsadmin.ADM_SessionDef ON zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id = zlmsadmin.ADM_SessionDef.EducationPathDef_Id JOIN zlmsadmin.ADM_Session ON zlmsadmin.ADM_SessionDef.SessionDef_Id = zlmsadmin.ADM_Session.SessionDef_Id AND (((zlmsadmin.ADM_Session.AcademicYear_Id = zlmsadmin.ADM_EduScenario.AcademicYear_Id) AND (zlmsadmin.ADM_Grade.EducationPathDef_Id = zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id) AND (zlmsadmin.ADM_Session.Parent_Id IS NULL))) JOIN zlmsadmin.ADM_CourseDefStreamGrade ON zlmsadmin.ADM_StreamGrade.StreamGrade_Id = zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id AND (((zlmsadmin.ADM_StreamGrade.StreamGrade_Id = zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id) AND (zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id = zlmsadmin.ADM_CourseDefStreamGrade.OptionalCourseGroup_Id))) JOIN zlmsadmin.ADM_CourseDef ON zlmsadmin.ADM_CourseDefStreamGrade.CourseDef_Id = zlmsadmin.ADM_CourseDef.CourseDef_Id JOIN zlmsadmin.ADM_AcademicYear ON zlmsadmin.ADM_EduScenario.AcademicYear_Id = zlmsadmin.ADM_AcademicYear.AcademicYear_Id LEFT OUTER JOIN zmedcommon.COMM_NoteHistory ON zlmsadmin.ADM_ScenarioSelection.NoteHistory_Id = zmedcommon.COMM_NoteHistory.NoteHistory_Id LEFT OUTER JOIN zmedcommon.COMM_Note ON zmedcommon.COMM_NoteHistory.NoteHistory_Id = zmedcommon.COMM_Note.NoteHistory_Id WHERE ((((zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198871) AND (zlmsadmin.ADM_Enrollment.School_Id IN(838))) AND (zlmsadmin.ADM_ScenarioSelection.ExitDate IS NULL) AND (zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment = 1)) AND (((zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (zmedcommon.COMM_ApplicationFormState.IsCurrent = 1) AND (zmedcommon.COMM_WorkflowState.StateCode <> 0)) OR (zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NULL)));
20240806 11:59:48.787 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:48.787 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:48.787 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0007 - Allocated=10, Used=1
20240806 11:59:48.788 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0007 - SELECT ADM_ScenarioSelection.ScenarioSelection_Id, ADM_ScenarioSelection.EduScenario_Id, ADM_ScenarioSelection.ApplicationForm_Id, ADM_ScenarioSelection.Enrollment_Id, ADM_ScenarioSelection.SelectionStatus, ADM_ScenarioSelection.JoiningDate, ADM_ScenarioSelection.ExitDate, ADM_ScenarioSelection.UserStamp, ADM_ScenarioSelection.TimeStamp, ADM_ScenarioSelection.NoteHistory_Id, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.ScenarioSelection_Id, ADM_SelectionDetails.EduScenarioOptionalGrp_Id, ADM_SelectionDetails.CourseDefCode, ADM_SelectionDetails.NumberOfPeriods, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp, ADM_Enrollment.Enrollment_Id, ADM_Enrollment.School_Id, ADM_Enrollment.Student_Id, ADM_Enrollment.Session_Id, ADM_Enrollment.StreamGrade_Id, ADM_Enrollment.Community_Id, ADM_Enrollment.EnrollmentType, ADM_Enrollment.EntryType, ADM_Enrollment.EntryDate, ADM_Enrollment.TransferFromSchool_Id, ADM_Enrollment.TransferToSchool_Id, ADM_Enrollment.ExitType, ADM_Enrollment.ExitReason, ADM_Enrollment.ExitDate, ADM_Enrollment.Note, ADM_Enrollment.IsSpecialNeed, ADM_Enrollment.ExternalId, ADM_Enrollment.UserStamp, ADM_Enrollment.TimeStamp, ADM_Enrollment.RegistrationStatus, ADM_Enrollment.TransferFromEnrollment_Id, ADM_Enrollment.TransferToCommunity_Id, ADM_Enrollment.IsYearActiveEnrollment, ADM_Enrollment.RecomputePassFail, ADM_Enrollment.MandatoryEducation, ADM_Enrollment.IsWaitingList, ADM_Enrollment.CreateTimeStamp, ADM_Enrollment.IsNotOfficialEnrollment, ADM_Enrollment.UserNote, ADM_Enrollment.DeleteType, ADM_Enrollment.IsDeleted, ADM_Enrollment.CreationUser_Id, COMM_ApplicationForm.ApplicationForm_Id, COMM_ApplicationForm.ApplicationFormNumber, COMM_ApplicationForm.ApplicationDate, COMM_ApplicationForm.Applicant_Id, COMM_ApplicationForm.Workflow_Id, COMM_ApplicationForm.ApplicationFormType, COMM_ApplicationForm.Note, COMM_ApplicationForm.TimeStamp, COMM_ApplicationForm.UserStamp, REG_StudentRegistration.StudentRegistration_Id, REG_StudentRegistration.ApplicationForm_Id, REG_StudentRegistration.Student_Id, REG_StudentRegistration.AcademicYear_Id, REG_StudentRegistration.EducationPath_Id, REG_StudentRegistration.Enrollment_Id, REG_StudentRegistration.EducationType, REG_StudentRegistration.EducationFocus, REG_StudentRegistration.StreamGrade, REG_StudentRegistration.School_Id, REG_StudentRegistration.IsTransportRequired, REG_StudentRegistration.ExamTime, REG_StudentRegistration.ExamScore, REG_StudentRegistration.InterviewTime, REG_StudentRegistration.DocumentList_Id, REG_StudentRegistration.CitizenshipStatus, REG_StudentRegistration.ParentWorkPlace, REG_StudentRegistration.IsSpecialNeed, REG_StudentRegistration.TimeStamp, REG_StudentRegistration.UserStamp, REG_StudentRegistration.InCatchmentArea, REG_StudentRegistration.ProgramCategory_Id, COMM_Workflow.Workflow_Id, COMM_Workflow.Name, COMM_Workflow.Code, COMM_Workflow.Note, COMM_ApplicationFormState.ApplicationFormState_Id, COMM_ApplicationFormState.WorkflowState_Id, COMM_ApplicationFormState.PrevWorkflowState_Id, COMM_ApplicationFormState.StateStartDate, COMM_ApplicationFormState.StateEndDate, COMM_ApplicationFormState.PerformedByUser_Id, COMM_ApplicationFormState.AttributeList_Id, COMM_ApplicationFormState.ApplicationForm_Id, COMM_ApplicationFormState.IsCurrent, COMM_ApplicationFormState.Note, COMM_ApplicationFormState.TimeStamp, COMM_ApplicationFormState.UserStamp, COMM_WorkflowState.WorkflowState_Id, COMM_WorkflowState.Workflow_Id, COMM_WorkflowState.Name, COMM_WorkflowState.StateCode, COMM_WorkflowState.Note, ADM_Student.Student_Id, ADM_Student.StudentNumber, ADM_Student.CreationDate, ADM_Student.CreationUser_Id, ADM_Student.UserStamp, ADM_Student.TimeStamp, ADM_Student.IsDeleted, ADM_Student.AttributeList_Id, ADM_Student.CitizenshipStatus, COMM_Person.Person_Id, COMM_Person.Civility, COMM_Person.IDNumber, COMM_Person.FirstName, COMM_Person.SecondName, COMM_Person.ThirdName, COMM_Person.FourthName, COMM_Person.FamilyName, COMM_Person.EnglishFirstName, COMM_Person.EnglishSecondName, COMM_Person.EnglishThirdName, COMM_Person.EnglishFourthName, COMM_Person.EnglishFamilyName, COMM_Person.BirthName, COMM_Person.BirthDate, COMM_Person.BirthCity, COMM_Person.EnglishBirthCity, COMM_Person.BirthCountry, COMM_Person.Nationality, COMM_Person.Gender, COMM_Person.MaritalStatus, COMM_Person.Photo_Id, COMM_Person.Religion, COMM_Person.ReligionSector, COMM_Person.PhoneList_Id, COMM_Person.AddressList_Id, COMM_Person.OtherIdList_Id, COMM_Person.IsDeleted, COMM_Person.ExternalId, COMM_Person.UserStamp, COMM_Person.TimeStamp, COMM_Person.User_Id, COMM_Person.InformationSource, COMM_Person.LastSyncTime, COMM_Person.IsTemporary, COMM_Person.VStartDate, COMM_PhoneList.PhoneList_Id, COMM_Phone.Phone_Id, COMM_Phone.PhoneList_Id, COMM_Phone.Name, COMM_Phone.Value, COMM_Phone.Note, COMM_Phone.IsPrivate, COMM_Phone.IsPrimary, COMM_Phone.ContactType, ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, ADM_EduScenarioOptionalGrp.EduScenario_Id, ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, ADM_EduScenarioOptionalGrp.CourseDefCodes, ADM_EduScenarioOptionalGrp.NumberOfPeriods, ADM_EduScenarioOptionalGrp.type, ADM_OptionalCourseGroup.OptionalCourseGroup_Id, ADM_OptionalCourseGroup.Name, ADM_OptionalCourseGroup.MinimumSelectedCourse, ADM_OptionalCourseGroup.MaximumSelectedCourse, ADM_OptionalCourseGroup.IsSelectedByStudent, ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, ADM_EduScenarioStreamGrade.EduScenario_Id, ADM_EduScenarioStreamGrade.EducationType, ADM_EduScenarioStreamGrade.EducationPath_Id, ADM_EduScenarioStreamGrade.EducationFocus, ADM_EduScenarioStreamGrade.StreamGrade, ADM_StreamGrade.StreamGrade_Id, ADM_StreamGrade.Name, ADM_StreamGrade.Title, ADM_StreamGrade.Grade_Id, ADM_Grade.Grade_Id, ADM_Grade.EducationPathDef_Id, ADM_Grade.Name, ADM_Grade.Title, ADM_Grade.Position, ADM_Grade.SchoolLevel, ADM_Grade.MinAge, ADM_Grade.MinSpAge, ADM_Grade.MaxAge, ADM_Grade.MaxSpAge, ADM_Grade.MinAgeMargin, ADM_Grade.MinAgeMarginUnit, ADM_Grade.MaxAgeMargin, ADM_Grade.MaxAgeMarginUnit, ADM_Grade.CapacityGroup, ADM_Grade.MinAgeMargin2, ADM_Grade.MinAgeMarginUnit2, ADM_Grade.MaxAgeMargin2, ADM_Grade.MaxAgeMarginUnit2, ADM_Grade.ExternalId, ADM_Grade.CommunityTitlePrefix, ADM_Grade.AgeReferenceDate, ADM_Grade.VStartDate, ADM_Grade.UserStamp, ADM_Grade.TimeStamp, ADM_EducationPathDef.EducationPathDef_Id, ADM_EducationPathDef.EducationPath_Id, ADM_EducationPathDef.StartDate, ADM_EducationPathDef.EndDate, ADM_EducationPathDef.IsActive, ADM_EducationPathDef.EducationType, ADM_EducationPathDef.EducationFocus, ADM_SessionDef.SessionDef_Id, ADM_SessionDef.EducationPathDef_Id, ADM_SessionDef.Title, ADM_SessionDef.SessionType, ADM_SessionDef.Duration, ADM_SessionDef.DurationUnit, ADM_SessionDef.Parent_Id, ADM_SessionDef.Position, ADM_Session.Session_Id, ADM_Session.AcademicYear_Id, ADM_Session.SessionDef_Id, ADM_Session.Title, ADM_Session.Parent_Id, ADM_Session.StartDate, ADM_Session.EndDate, ADM_Session.Position, ADM_Session.UserStamp, ADM_Session.TimeStamp, ADM_CourseDefStreamGrade.CourseDefStreamGrade_Id, ADM_CourseDefStreamGrade.CourseDef_Id, ADM_CourseDefStreamGrade.StreamGrade_Id, ADM_CourseDefStreamGrade.IsOptional, ADM_CourseDefStreamGrade.OptionalCourseGroup_Id, ADM_CourseDef.CourseDef_Id, ADM_CourseDef.EducationPathDef_Id, ADM_CourseDef.SessionDef_Id, ADM_CourseDef.TeachingSubject, ADM_CourseDef.TeachingLanguage, ADM_CourseDef.Title, ADM_CourseDef.NumberOfPeriods, ADM_CourseDef.NumberOfPeriodsPerWeek, ADM_CourseDef.PeriodDuration, ADM_CourseDef.PeriodDurationUnit, ADM_CourseDef.SlotColor, ADM_CourseDef.StudentGender, ADM_CourseDef.IsAcademic, ADM_CourseDef.Code, ADM_CourseDef.Position, ADM_CourseDef.CourseWeight, ADM_CourseDef.PassScore, ADM_CourseDef.OtherTitle, ADM_CourseDef.isTermBasedCourse, ADM_CourseDef.Department, ADM_CourseDef.UserStamp, ADM_CourseDef.TimeStamp, ADM_AcademicYear.AcademicYear_Id, ADM_AcademicYear.Title, ADM_AcademicYear.IsCurrent, ADM_AcademicYear.Status, ADM_AcademicYear.POSITION, COMM_NoteHistory.NoteHistory_Id, COMM_Note.Note_Id, COMM_Note.NoteHistory_Id, COMM_Note.Text, COMM_Note.User_Id, COMM_Note.NoteDate, COMM_Note.Status, COMM_Note.UserStamp, COMM_Note.TimeStamp FROM ADM_ScenarioSelection JOIN ADM_SelectionDetails ON (ADM_ScenarioSelection.ScenarioSelection_Id = ADM_SelectionDetails.ScenarioSelection_Id) JOIN ADM_Enrollment ON ((ADM_Enrollment.IsDeleted = 0)) AND ((ADM_ScenarioSelection.Enrollment_Id = ADM_Enrollment.Enrollment_Id)) LEFT OUTER JOIN COMM_ApplicationForm ON (ADM_ScenarioSelection.ApplicationForm_Id = COMM_ApplicationForm.ApplicationForm_Id) LEFT OUTER JOIN REG_StudentRegistration ON (COMM_ApplicationForm.ApplicationForm_Id = REG_StudentRegistration.ApplicationForm_Id) LEFT OUTER JOIN COMM_Workflow ON (COMM_ApplicationForm.Workflow_Id = COMM_Workflow.Workflow_Id) LEFT OUTER JOIN COMM_ApplicationFormState ON (COMM_ApplicationForm.ApplicationForm_Id = COMM_ApplicationFormState.ApplicationForm_Id) LEFT OUTER JOIN COMM_WorkflowState ON (COMM_ApplicationFormState.WorkflowState_Id = COMM_WorkflowState.WorkflowState_Id) JOIN ADM_Student ON ((ADM_Student.IsDeleted = 0)) AND ((ADM_Enrollment.Student_Id = ADM_Student.Student_Id)) JOIN COMM_Person ON ((COMM_Person.IsDeleted = 0)) AND ((ADM_Student.Student_Id = COMM_Person.Person_Id)) JOIN COMM_PhoneList ON (COMM_Person.PhoneList_Id = COMM_PhoneList.PhoneList_Id) JOIN COMM_Phone ON (COMM_PhoneList.PhoneList_Id = COMM_Phone.PhoneList_Id) JOIN ADM_EduScenario ON (ADM_ScenarioSelection.EduScenario_Id = ADM_EduScenario.EduScenario_Id) JOIN ADM_EduScenarioOptionalGrp ON (ADM_SelectionDetails.EduScenarioOptionalGrp_Id = ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id) JOIN ADM_OptionalCourseGroup ON (ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = ADM_OptionalCourseGroup.OptionalCourseGroup_Id) JOIN ADM_EduScenarioStreamGrade ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioStreamGrade.EduScenario_Id) JOIN ADM_StreamGrade ON (ADM_EduScenarioStreamGrade.StreamGrade = ADM_StreamGrade.Name) JOIN ADM_Grade ON (ADM_StreamGrade.Grade_Id = ADM_Grade.Grade_Id) JOIN ADM_EducationPathDef ON (((ADM_EducationPathDef.EducationPath_Id = ADM_EduScenarioStreamGrade.EducationPath_Id) AND (ADM_EduScenarioStreamGrade.EducationFocus = ADM_EducationPathDef.EducationFocus)) AND (ADM_EduScenarioStreamGrade.EducationType = ADM_EducationPathDef.EducationType)) JOIN ADM_SessionDef ON (ADM_EducationPathDef.EducationPathDef_Id = ADM_SessionDef.EducationPathDef_Id) JOIN ADM_Session ON ((ADM_SessionDef.SessionDef_Id = ADM_Session.SessionDef_Id) AND (((ADM_Session.AcademicYear_Id = ADM_EduScenario.AcademicYear_Id) AND (ADM_Grade.EducationPathDef_Id = ADM_EducationPathDef.EducationPathDef_Id)) AND (ADM_Session.Parent_Id IS NULL))) JOIN ADM_CourseDefStreamGrade ON ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND (ADM_OptionalCourseGroup.OptionalCourseGroup_Id = ADM_CourseDefStreamGrade.OptionalCourseGroup_Id))) JOIN ADM_CourseDef ON (ADM_CourseDefStreamGrade.CourseDef_Id = ADM_CourseDef.CourseDef_Id) JOIN ADM_AcademicYear ON (ADM_EduScenario.AcademicYear_Id = ADM_AcademicYear.AcademicYear_Id) LEFT OUTER JOIN COMM_NoteHistory ON (ADM_ScenarioSelection.NoteHistory_Id = COMM_NoteHistory.NoteHistory_Id) LEFT OUTER JOIN COMM_Note ON (COMM_NoteHistory.NoteHistory_Id = COMM_Note.NoteHistory_Id) WHERE (((((ADM_EduScenario.EduScenario_Id = ?) AND (ADM_Enrollment.School_Id IN(?))) AND (ADM_ScenarioSelection.ExitDate IS NULL)) AND (ADM_Enrollment.IsYearActiveEnrollment = ?)) AND ((((COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (COMM_ApplicationFormState.IsCurrent = ?)) AND (COMM_WorkflowState.StateCode <> ?)) OR (COMM_ApplicationForm.ApplicationForm_Id IS NULL)))
20240806 11:59:48.788 006B =FUN= [ZQL.PhysicalConnection] Parameters: 622198871, 838, 1, 1, 0
20240806 11:59:48.788 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:48.887 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:48.887 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:49.468 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0007
20240806 11:59:49.468 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 275 columns, 625 rows
20240806 11:59:49.468 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0007
20240806 11:59:49.468 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0007
20240806 11:59:49.468 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:49.468 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:49.468 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.dbag.DBag.load
20240806 11:59:49.469 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.dbag.DBag.load
20240806 11:59:49.469 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id, zlmsadmin.ADM_ScenarioSelection.EduScenario_Id, zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id, zlmsadmin.ADM_ScenarioSelection.Enrollment_Id, zlmsadmin.ADM_ScenarioSelection.SelectionStatus, zlmsadmin.ADM_ScenarioSelection.JoiningDate, zlmsadmin.ADM_ScenarioSelection.ExitDate, zlmsadmin.ADM_ScenarioSelection.UserStamp, zlmsadmin.ADM_ScenarioSelection.TimeStamp, zlmsadmin.ADM_ScenarioSelection.NoteHistory_Id,zlmsadmin.ADM_Enrollment.Enrollment_Id, zlmsadmin.ADM_Enrollment.School_Id, zlmsadmin.ADM_Enrollment.Student_Id, zlmsadmin.ADM_Enrollment.Session_Id, zlmsadmin.ADM_Enrollment.StreamGrade_Id, zlmsadmin.ADM_Enrollment.Community_Id, zlmsadmin.ADM_Enrollment.EnrollmentType, zlmsadmin.ADM_Enrollment.EntryType, zlmsadmin.ADM_Enrollment.EntryDate, zlmsadmin.ADM_Enrollment.TransferFromSchool_Id, zlmsadmin.ADM_Enrollment.TransferToSchool_Id, zlmsadmin.ADM_Enrollment.ExitType, zlmsadmin.ADM_Enrollment.ExitReason, zlmsadmin.ADM_Enrollment.ExitDate, zlmsadmin.ADM_Enrollment.Note, zlmsadmin.ADM_Enrollment.IsSpecialNeed, zlmsadmin.ADM_Enrollment.ExternalId, zlmsadmin.ADM_Enrollment.UserStamp, zlmsadmin.ADM_Enrollment.TimeStamp, zlmsadmin.ADM_Enrollment.RegistrationStatus, zlmsadmin.ADM_Enrollment.TransferFromEnrollment_Id, zlmsadmin.ADM_Enrollment.TransferToCommunity_Id, zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment, zlmsadmin.ADM_Enrollment.RecomputePassFail, zlmsadmin.ADM_Enrollment.MandatoryEducation, zlmsadmin.ADM_Enrollment.IsWaitingList, zlmsadmin.ADM_Enrollment.CreateTimeStamp, zlmsadmin.ADM_Enrollment.IsNotOfficialEnrollment, zlmsadmin.ADM_Enrollment.UserNote, zlmsadmin.ADM_Enrollment.DeleteType, zlmsadmin.ADM_Enrollment.IsDeleted, zlmsadmin.ADM_Enrollment.CreationUser_Id,zlmsadmin.ADM_Student.Student_Id, zlmsadmin.ADM_Student.StudentNumber, zlmsadmin.ADM_Student.CreationDate, zlmsadmin.ADM_Student.CreationUser_Id, zlmsadmin.ADM_Student.UserStamp, zlmsadmin.ADM_Student.TimeStamp, zlmsadmin.ADM_Student.IsDeleted, zlmsadmin.ADM_Student.AttributeList_Id, zlmsadmin.ADM_Student.CitizenshipStatus,zlmsadmin.ADM_Session.Session_Id, zlmsadmin.ADM_Session.AcademicYear_Id, zlmsadmin.ADM_Session.SessionDef_Id, zlmsadmin.ADM_Session.Title, zlmsadmin.ADM_Session.Parent_Id, zlmsadmin.ADM_Session.StartDate, zlmsadmin.ADM_Session.EndDate, zlmsadmin.ADM_Session.Position, zlmsadmin.ADM_Session.UserStamp, zlmsadmin.ADM_Session.TimeStamp,zlmsadmin.ADM_AcademicYear.AcademicYear_Id, zlmsadmin.ADM_AcademicYear.Title, zlmsadmin.ADM_AcademicYear.IsCurrent, zlmsadmin.ADM_AcademicYear.Status, zlmsadmin.ADM_AcademicYear.POSITION,zmedcommon.COMM_Person.Person_Id, zmedcommon.COMM_Person.Civility, zmedcommon.COMM_Person.IDNumber, zmedcommon.COMM_Person.FirstName, zmedcommon.COMM_Person.SecondName, zmedcommon.COMM_Person.ThirdName, zmedcommon.COMM_Person.FourthName, zmedcommon.COMM_Person.FamilyName, zmedcommon.COMM_Person.EnglishFirstName, zmedcommon.COMM_Person.EnglishSecondName, zmedcommon.COMM_Person.EnglishThirdName, zmedcommon.COMM_Person.EnglishFourthName, zmedcommon.COMM_Person.EnglishFamilyName, zmedcommon.COMM_Person.BirthName, zmedcommon.COMM_Person.BirthDate, zmedcommon.COMM_Person.BirthCity, zmedcommon.COMM_Person.EnglishBirthCity, zmedcommon.COMM_Person.BirthCountry, zmedcommon.COMM_Person.Nationality, zmedcommon.COMM_Person.Gender, zmedcommon.COMM_Person.MaritalStatus, zmedcommon.COMM_Person.Photo_Id, zmedcommon.COMM_Person.Religion, zmedcommon.COMM_Person.ReligionSector, zmedcommon.COMM_Person.PhoneList_Id, zmedcommon.COMM_Person.AddressList_Id, zmedcommon.COMM_Person.OtherIdList_Id, zmedcommon.COMM_Person.IsDeleted, zmedcommon.COMM_Person.ExternalId, zmedcommon.COMM_Person.UserStamp, zmedcommon.COMM_Person.TimeStamp, zmedcommon.COMM_Person.User_Id, zmedcommon.COMM_Person.InformationSource, zmedcommon.COMM_Person.LastSyncTime, zmedcommon.COMM_Person.IsTemporary, zmedcommon.COMM_Person.VStartDate,zmedcommon.COMM_PhoneList.PhoneList_Id,zmedcommon.COMM_Phone.Phone_Id, zmedcommon.COMM_Phone.PhoneList_Id, zmedcommon.COMM_Phone.Name, zmedcommon.COMM_Phone.Value, zmedcommon.COMM_Phone.Note, zmedcommon.COMM_Phone.IsPrivate, zmedcommon.COMM_Phone.IsPrimary, zmedcommon.COMM_Phone.ContactType,zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_SelectionDetails.SelectionDetails_Id, zlmsadmin.ADM_SelectionDetails.ScenarioSelection_Id, zlmsadmin.ADM_SelectionDetails.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_SelectionDetails.CourseDefCode, zlmsadmin.ADM_SelectionDetails.NumberOfPeriods, zlmsadmin.ADM_SelectionDetails.UserStamp, zlmsadmin.ADM_SelectionDetails.TimeStamp,zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.CourseDefCodes, zlmsadmin.ADM_EduScenarioOptionalGrp.NumberOfPeriods, zlmsadmin.ADM_EduScenarioOptionalGrp.type,zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id, zlmsadmin.ADM_OptionalCourseGroup.Name, zlmsadmin.ADM_OptionalCourseGroup.MinimumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.MaximumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.IsSelectedByStudent,zlmsadmin.ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationType, zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus, zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade,zlmsadmin.ADM_StreamGrade.StreamGrade_Id, zlmsadmin.ADM_StreamGrade.Name, zlmsadmin.ADM_StreamGrade.Title, zlmsadmin.ADM_StreamGrade.Grade_Id,zlmsadmin.ADM_Grade.Grade_Id, zlmsadmin.ADM_Grade.EducationPathDef_Id, zlmsadmin.ADM_Grade.Name, zlmsadmin.ADM_Grade.Title, zlmsadmin.ADM_Grade.Position, zlmsadmin.ADM_Grade.SchoolLevel, zlmsadmin.ADM_Grade.MinAge, zlmsadmin.ADM_Grade.MinSpAge, zlmsadmin.ADM_Grade.MaxAge, zlmsadmin.ADM_Grade.MaxSpAge, zlmsadmin.ADM_Grade.MinAgeMargin, zlmsadmin.ADM_Grade.MinAgeMarginUnit, zlmsadmin.ADM_Grade.MaxAgeMargin, zlmsadmin.ADM_Grade.MaxAgeMarginUnit, zlmsadmin.ADM_Grade.CapacityGroup, zlmsadmin.ADM_Grade.MinAgeMargin2, zlmsadmin.ADM_Grade.MinAgeMarginUnit2, zlmsadmin.ADM_Grade.MaxAgeMargin2, zlmsadmin.ADM_Grade.MaxAgeMarginUnit2, zlmsadmin.ADM_Grade.ExternalId, zlmsadmin.ADM_Grade.CommunityTitlePrefix, zlmsadmin.ADM_Grade.AgeReferenceDate, zlmsadmin.ADM_Grade.VStartDate, zlmsadmin.ADM_Grade.UserStamp, zlmsadmin.ADM_Grade.TimeStamp,zlmsadmin.ADM_CourseDefStreamGrade.CourseDefStreamGrade_Id, zlmsadmin.ADM_CourseDefStreamGrade.CourseDef_Id, zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id, zlmsadmin.ADM_CourseDefStreamGrade.IsOptional, zlmsadmin.ADM_CourseDefStreamGrade.OptionalCourseGroup_Id,zlmsadmin.ADM_CourseDef.CourseDef_Id, zlmsadmin.ADM_CourseDef.EducationPathDef_Id, zlmsadmin.ADM_CourseDef.SessionDef_Id, zlmsadmin.ADM_CourseDef.TeachingSubject, zlmsadmin.ADM_CourseDef.TeachingLanguage, zlmsadmin.ADM_CourseDef.Title, zlmsadmin.ADM_CourseDef.NumberOfPeriods, zlmsadmin.ADM_CourseDef.NumberOfPeriodsPerWeek, zlmsadmin.ADM_CourseDef.PeriodDuration, zlmsadmin.ADM_CourseDef.PeriodDurationUnit, zlmsadmin.ADM_CourseDef.SlotColor, zlmsadmin.ADM_CourseDef.StudentGender, zlmsadmin.ADM_CourseDef.IsAcademic, zlmsadmin.ADM_CourseDef.Code, zlmsadmin.ADM_CourseDef.Position, zlmsadmin.ADM_CourseDef.CourseWeight, zlmsadmin.ADM_CourseDef.PassScore, zlmsadmin.ADM_CourseDef.OtherTitle, zlmsadmin.ADM_CourseDef.isTermBasedCourse, zlmsadmin.ADM_CourseDef.Department, zlmsadmin.ADM_CourseDef.UserStamp, zlmsadmin.ADM_CourseDef.TimeStamp,zmedcommon.COMM_ApplicationForm.ApplicationForm_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormNumber, zmedcommon.COMM_ApplicationForm.ApplicationDate, zmedcommon.COMM_ApplicationForm.Applicant_Id, zmedcommon.COMM_ApplicationForm.Workflow_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormType, zmedcommon.COMM_ApplicationForm.Note, zmedcommon.COMM_ApplicationForm.TimeStamp, zmedcommon.COMM_ApplicationForm.UserStamp,zlmsregistration.REG_StudentRegistration.StudentRegistration_Id, zlmsregistration.REG_StudentRegistration.ApplicationForm_Id, zlmsregistration.REG_StudentRegistration.Student_Id, zlmsregistration.REG_StudentRegistration.AcademicYear_Id, zlmsregistration.REG_StudentRegistration.EducationPath_Id, zlmsregistration.REG_StudentRegistration.Enrollment_Id, zlmsregistration.REG_StudentRegistration.EducationType, zlmsregistration.REG_StudentRegistration.EducationFocus, zlmsregistration.REG_StudentRegistration.StreamGrade, zlmsregistration.REG_StudentRegistration.School_Id, zlmsregistration.REG_StudentRegistration.IsTransportRequired, zlmsregistration.REG_StudentRegistration.ExamTime, zlmsregistration.REG_StudentRegistration.ExamScore, zlmsregistration.REG_StudentRegistration.InterviewTime, zlmsregistration.REG_StudentRegistration.DocumentList_Id, zlmsregistration.REG_StudentRegistration.CitizenshipStatus, zlmsregistration.REG_StudentRegistration.ParentWorkPlace, zlmsregistration.REG_StudentRegistration.IsSpecialNeed, zlmsregistration.REG_StudentRegistration.TimeStamp, zlmsregistration.REG_StudentRegistration.UserStamp, zlmsregistration.REG_StudentRegistration.InCatchmentArea, zlmsregistration.REG_StudentRegistration.ProgramCategory_Id,zmedcommon.COMM_Workflow.Workflow_Id, zmedcommon.COMM_Workflow.Name, zmedcommon.COMM_Workflow.Code, zmedcommon.COMM_Workflow.Note,zmedcommon.COMM_ApplicationFormState.ApplicationFormState_Id, zmedcommon.COMM_ApplicationFormState.WorkflowState_Id, zmedcommon.COMM_ApplicationFormState.PrevWorkflowState_Id, zmedcommon.COMM_ApplicationFormState.StateStartDate, zmedcommon.COMM_ApplicationFormState.StateEndDate, zmedcommon.COMM_ApplicationFormState.PerformedByUser_Id, zmedcommon.COMM_ApplicationFormState.AttributeList_Id, zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id, zmedcommon.COMM_ApplicationFormState.IsCurrent, zmedcommon.COMM_ApplicationFormState.Note, zmedcommon.COMM_ApplicationFormState.TimeStamp, zmedcommon.COMM_ApplicationFormState.UserStamp,zmedcommon.COMM_WorkflowState.WorkflowState_Id, zmedcommon.COMM_WorkflowState.Workflow_Id, zmedcommon.COMM_WorkflowState.Name, zmedcommon.COMM_WorkflowState.StateCode, zmedcommon.COMM_WorkflowState.Note FROM zlmsadmin.ADM_ScenarioSelection JOIN zlmsadmin.ADM_Enrollment! ON zlmsadmin.ADM_ScenarioSelection.Enrollment_Id = zlmsadmin.ADM_Enrollment.Enrollment_Id JOIN zlmsadmin.ADM_Student! ON zlmsadmin.ADM_Enrollment.Student_Id = zlmsadmin.ADM_Student.Student_Id JOIN zlmsadmin.ADM_Session ON zlmsadmin.ADM_Enrollment.Session_Id = zlmsadmin.ADM_Session.Session_Id JOIN zlmsadmin.ADM_AcademicYear ON zlmsadmin.ADM_Session.AcademicYear_Id = zlmsadmin.ADM_AcademicYear.AcademicYear_Id JOIN zmedcommon.COMM_Person! ON (zlmsadmin.ADM_Student.Student_Id = zmedcommon.COMM_Person.Person_Id) JOIN zmedcommon.COMM_PhoneList ON zmedcommon.COMM_Person.PhoneList_Id = zmedcommon.COMM_PhoneList.PhoneList_Id JOIN zmedcommon.COMM_Phone ON zmedcommon.COMM_PhoneList.PhoneList_Id = zmedcommon.COMM_Phone.PhoneList_Id JOIN zlmsadmin.ADM_EduScenario ON zlmsadmin.ADM_ScenarioSelection.EduScenario_Id = zlmsadmin.ADM_EduScenario.EduScenario_Id LEFT OUTER JOIN zlmsadmin.ADM_SelectionDetails ON zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id = zlmsadmin.ADM_SelectionDetails.ScenarioSelection_Id JOIN zlmsadmin.ADM_EduScenarioOptionalGrp ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id JOIN zlmsadmin.ADM_OptionalCourseGroup ON zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id JOIN zlmsadmin.ADM_EduScenarioStreamGrade ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id JOIN zlmsadmin.ADM_StreamGrade ON (zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade = zlmsadmin.ADM_StreamGrade.Name) JOIN zlmsadmin.ADM_Grade ON zlmsadmin.ADM_StreamGrade.Grade_Id = zlmsadmin.ADM_Grade.Grade_Id JOIN zlmsadmin.ADM_CourseDefStreamGrade ON zlmsadmin.ADM_StreamGrade.StreamGrade_Id = zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id AND (((zlmsadmin.ADM_StreamGrade.StreamGrade_Id = zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id) AND (zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id = zlmsadmin.ADM_CourseDefStreamGrade.OptionalCourseGroup_Id))) JOIN zlmsadmin.ADM_CourseDef ON zlmsadmin.ADM_CourseDefStreamGrade.CourseDef_Id = zlmsadmin.ADM_CourseDef.CourseDef_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationForm ON zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id = zmedcommon.COMM_ApplicationForm.ApplicationForm_Id LEFT OUTER JOIN zlmsregistration.REG_StudentRegistration ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zlmsregistration.REG_StudentRegistration.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_Workflow ON zmedcommon.COMM_ApplicationForm.Workflow_Id = zmedcommon.COMM_Workflow.Workflow_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationFormState ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_WorkflowState ON zmedcommon.COMM_ApplicationFormState.WorkflowState_Id = zmedcommon.COMM_WorkflowState.WorkflowState_Id WHERE ((((zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198871) AND (zlmsadmin.ADM_Enrollment.School_Id IN(838))) AND (zlmsadmin.ADM_ScenarioSelection.ExitDate IS NULL) AND (zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment = 1)) AND (((zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (zmedcommon.COMM_ApplicationFormState.IsCurrent = 1) AND (zmedcommon.COMM_WorkflowState.StateCode <> 0)) OR (zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NULL)) AND (zlmsadmin.ADM_SelectionDetails.SelectionDetails_Id IS NULL));
20240806 11:59:49.477 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:49.477 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:49.477 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0010 - Allocated=10, Used=1
20240806 11:59:49.477 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0010 - SELECT ADM_ScenarioSelection.ScenarioSelection_Id, ADM_ScenarioSelection.EduScenario_Id, ADM_ScenarioSelection.ApplicationForm_Id, ADM_ScenarioSelection.Enrollment_Id, ADM_ScenarioSelection.SelectionStatus, ADM_ScenarioSelection.JoiningDate, ADM_ScenarioSelection.ExitDate, ADM_ScenarioSelection.UserStamp, ADM_ScenarioSelection.TimeStamp, ADM_ScenarioSelection.NoteHistory_Id, ADM_Enrollment.Enrollment_Id, ADM_Enrollment.School_Id, ADM_Enrollment.Student_Id, ADM_Enrollment.Session_Id, ADM_Enrollment.StreamGrade_Id, ADM_Enrollment.Community_Id, ADM_Enrollment.EnrollmentType, ADM_Enrollment.EntryType, ADM_Enrollment.EntryDate, ADM_Enrollment.TransferFromSchool_Id, ADM_Enrollment.TransferToSchool_Id, ADM_Enrollment.ExitType, ADM_Enrollment.ExitReason, ADM_Enrollment.ExitDate, ADM_Enrollment.Note, ADM_Enrollment.IsSpecialNeed, ADM_Enrollment.ExternalId, ADM_Enrollment.UserStamp, ADM_Enrollment.TimeStamp, ADM_Enrollment.RegistrationStatus, ADM_Enrollment.TransferFromEnrollment_Id, ADM_Enrollment.TransferToCommunity_Id, ADM_Enrollment.IsYearActiveEnrollment, ADM_Enrollment.RecomputePassFail, ADM_Enrollment.MandatoryEducation, ADM_Enrollment.IsWaitingList, ADM_Enrollment.CreateTimeStamp, ADM_Enrollment.IsNotOfficialEnrollment, ADM_Enrollment.UserNote, ADM_Enrollment.DeleteType, ADM_Enrollment.IsDeleted, ADM_Enrollment.CreationUser_Id, ADM_Student.Student_Id, ADM_Student.StudentNumber, ADM_Student.CreationDate, ADM_Student.CreationUser_Id, ADM_Student.UserStamp, ADM_Student.TimeStamp, ADM_Student.IsDeleted, ADM_Student.AttributeList_Id, ADM_Student.CitizenshipStatus, ADM_Session.Session_Id, ADM_Session.AcademicYear_Id, ADM_Session.SessionDef_Id, ADM_Session.Title, ADM_Session.Parent_Id, ADM_Session.StartDate, ADM_Session.EndDate, ADM_Session.Position, ADM_Session.UserStamp, ADM_Session.TimeStamp, ADM_AcademicYear.AcademicYear_Id, ADM_AcademicYear.Title, ADM_AcademicYear.IsCurrent, ADM_AcademicYear.Status, ADM_AcademicYear.POSITION, COMM_Person.Person_Id, COMM_Person.Civility, COMM_Person.IDNumber, COMM_Person.FirstName, COMM_Person.SecondName, COMM_Person.ThirdName, COMM_Person.FourthName, COMM_Person.FamilyName, COMM_Person.EnglishFirstName, COMM_Person.EnglishSecondName, COMM_Person.EnglishThirdName, COMM_Person.EnglishFourthName, COMM_Person.EnglishFamilyName, COMM_Person.BirthName, COMM_Person.BirthDate, COMM_Person.BirthCity, COMM_Person.EnglishBirthCity, COMM_Person.BirthCountry, COMM_Person.Nationality, COMM_Person.Gender, COMM_Person.MaritalStatus, COMM_Person.Photo_Id, COMM_Person.Religion, COMM_Person.ReligionSector, COMM_Person.PhoneList_Id, COMM_Person.AddressList_Id, COMM_Person.OtherIdList_Id, COMM_Person.IsDeleted, COMM_Person.ExternalId, COMM_Person.UserStamp, COMM_Person.TimeStamp, COMM_Person.User_Id, COMM_Person.InformationSource, COMM_Person.LastSyncTime, COMM_Person.IsTemporary, COMM_Person.VStartDate, COMM_PhoneList.PhoneList_Id, COMM_Phone.Phone_Id, COMM_Phone.PhoneList_Id, COMM_Phone.Name, COMM_Phone.Value, COMM_Phone.Note, COMM_Phone.IsPrivate, COMM_Phone.IsPrimary, COMM_Phone.ContactType, ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.ScenarioSelection_Id, ADM_SelectionDetails.EduScenarioOptionalGrp_Id, ADM_SelectionDetails.CourseDefCode, ADM_SelectionDetails.NumberOfPeriods, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp, ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, ADM_EduScenarioOptionalGrp.EduScenario_Id, ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, ADM_EduScenarioOptionalGrp.CourseDefCodes, ADM_EduScenarioOptionalGrp.NumberOfPeriods, ADM_EduScenarioOptionalGrp.type, ADM_OptionalCourseGroup.OptionalCourseGroup_Id, ADM_OptionalCourseGroup.Name, ADM_OptionalCourseGroup.MinimumSelectedCourse, ADM_OptionalCourseGroup.MaximumSelectedCourse, ADM_OptionalCourseGroup.IsSelectedByStudent, ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, ADM_EduScenarioStreamGrade.EduScenario_Id, ADM_EduScenarioStreamGrade.EducationType, ADM_EduScenarioStreamGrade.EducationPath_Id, ADM_EduScenarioStreamGrade.EducationFocus, ADM_EduScenarioStreamGrade.StreamGrade, ADM_StreamGrade.StreamGrade_Id, ADM_StreamGrade.Name, ADM_StreamGrade.Title, ADM_StreamGrade.Grade_Id, ADM_Grade.Grade_Id, ADM_Grade.EducationPathDef_Id, ADM_Grade.Name, ADM_Grade.Title, ADM_Grade.Position, ADM_Grade.SchoolLevel, ADM_Grade.MinAge, ADM_Grade.MinSpAge, ADM_Grade.MaxAge, ADM_Grade.MaxSpAge, ADM_Grade.MinAgeMargin, ADM_Grade.MinAgeMarginUnit, ADM_Grade.MaxAgeMargin, ADM_Grade.MaxAgeMarginUnit, ADM_Grade.CapacityGroup, ADM_Grade.MinAgeMargin2, ADM_Grade.MinAgeMarginUnit2, ADM_Grade.MaxAgeMargin2, ADM_Grade.MaxAgeMarginUnit2, ADM_Grade.ExternalId, ADM_Grade.CommunityTitlePrefix, ADM_Grade.AgeReferenceDate, ADM_Grade.VStartDate, ADM_Grade.UserStamp, ADM_Grade.TimeStamp, ADM_CourseDefStreamGrade.CourseDefStreamGrade_Id, ADM_CourseDefStreamGrade.CourseDef_Id, ADM_CourseDefStreamGrade.StreamGrade_Id, ADM_CourseDefStreamGrade.IsOptional, ADM_CourseDefStreamGrade.OptionalCourseGroup_Id, ADM_CourseDef.CourseDef_Id, ADM_CourseDef.EducationPathDef_Id, ADM_CourseDef.SessionDef_Id, ADM_CourseDef.TeachingSubject, ADM_CourseDef.TeachingLanguage, ADM_CourseDef.Title, ADM_CourseDef.NumberOfPeriods, ADM_CourseDef.NumberOfPeriodsPerWeek, ADM_CourseDef.PeriodDuration, ADM_CourseDef.PeriodDurationUnit, ADM_CourseDef.SlotColor, ADM_CourseDef.StudentGender, ADM_CourseDef.IsAcademic, ADM_CourseDef.Code, ADM_CourseDef.Position, ADM_CourseDef.CourseWeight, ADM_CourseDef.PassScore, ADM_CourseDef.OtherTitle, ADM_CourseDef.isTermBasedCourse, ADM_CourseDef.Department, ADM_CourseDef.UserStamp, ADM_CourseDef.TimeStamp, COMM_ApplicationForm.ApplicationForm_Id, COMM_ApplicationForm.ApplicationFormNumber, COMM_ApplicationForm.ApplicationDate, COMM_ApplicationForm.Applicant_Id, COMM_ApplicationForm.Workflow_Id, COMM_ApplicationForm.ApplicationFormType, COMM_ApplicationForm.Note, COMM_ApplicationForm.TimeStamp, COMM_ApplicationForm.UserStamp, REG_StudentRegistration.StudentRegistration_Id, REG_StudentRegistration.ApplicationForm_Id, REG_StudentRegistration.Student_Id, REG_StudentRegistration.AcademicYear_Id, REG_StudentRegistration.EducationPath_Id, REG_StudentRegistration.Enrollment_Id, REG_StudentRegistration.EducationType, REG_StudentRegistration.EducationFocus, REG_StudentRegistration.StreamGrade, REG_StudentRegistration.School_Id, REG_StudentRegistration.IsTransportRequired, REG_StudentRegistration.ExamTime, REG_StudentRegistration.ExamScore, REG_StudentRegistration.InterviewTime, REG_StudentRegistration.DocumentList_Id, REG_StudentRegistration.CitizenshipStatus, REG_StudentRegistration.ParentWorkPlace, REG_StudentRegistration.IsSpecialNeed, REG_StudentRegistration.TimeStamp, REG_StudentRegistration.UserStamp, REG_StudentRegistration.InCatchmentArea, REG_StudentRegistration.ProgramCategory_Id, COMM_Workflow.Workflow_Id, COMM_Workflow.Name, COMM_Workflow.Code, COMM_Workflow.Note, COMM_ApplicationFormState.ApplicationFormState_Id, COMM_ApplicationFormState.WorkflowState_Id, COMM_ApplicationFormState.PrevWorkflowState_Id, COMM_ApplicationFormState.StateStartDate, COMM_ApplicationFormState.StateEndDate, COMM_ApplicationFormState.PerformedByUser_Id, COMM_ApplicationFormState.AttributeList_Id, COMM_ApplicationFormState.ApplicationForm_Id, COMM_ApplicationFormState.IsCurrent, COMM_ApplicationFormState.Note, COMM_ApplicationFormState.TimeStamp, COMM_ApplicationFormState.UserStamp, COMM_WorkflowState.WorkflowState_Id, COMM_WorkflowState.Workflow_Id, COMM_WorkflowState.Name, COMM_WorkflowState.StateCode, COMM_WorkflowState.Note FROM ADM_ScenarioSelection JOIN ADM_Enrollment ON ((ADM_Enrollment.IsDeleted = 0)) AND ((ADM_ScenarioSelection.Enrollment_Id = ADM_Enrollment.Enrollment_Id)) JOIN ADM_Student ON ((ADM_Student.IsDeleted = 0)) AND ((ADM_Enrollment.Student_Id = ADM_Student.Student_Id)) JOIN ADM_Session ON (ADM_Enrollment.Session_Id = ADM_Session.Session_Id) JOIN ADM_AcademicYear ON (ADM_Session.AcademicYear_Id = ADM_AcademicYear.AcademicYear_Id) JOIN COMM_Person ON ((COMM_Person.IsDeleted = 0)) AND ((ADM_Student.Student_Id = COMM_Person.Person_Id)) JOIN COMM_PhoneList ON (COMM_Person.PhoneList_Id = COMM_PhoneList.PhoneList_Id) JOIN COMM_Phone ON (COMM_PhoneList.PhoneList_Id = COMM_Phone.PhoneList_Id) JOIN ADM_EduScenario ON (ADM_ScenarioSelection.EduScenario_Id = ADM_EduScenario.EduScenario_Id) LEFT OUTER JOIN ADM_SelectionDetails ON (ADM_ScenarioSelection.ScenarioSelection_Id = ADM_SelectionDetails.ScenarioSelection_Id) JOIN ADM_EduScenarioOptionalGrp ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioOptionalGrp.EduScenario_Id) JOIN ADM_OptionalCourseGroup ON (ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = ADM_OptionalCourseGroup.OptionalCourseGroup_Id) JOIN ADM_EduScenarioStreamGrade ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioStreamGrade.EduScenario_Id) JOIN ADM_StreamGrade ON (ADM_EduScenarioStreamGrade.StreamGrade = ADM_StreamGrade.Name) JOIN ADM_Grade ON (ADM_StreamGrade.Grade_Id = ADM_Grade.Grade_Id) JOIN ADM_CourseDefStreamGrade ON ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND (ADM_OptionalCourseGroup.OptionalCourseGroup_Id = ADM_CourseDefStreamGrade.OptionalCourseGroup_Id))) JOIN ADM_CourseDef ON (ADM_CourseDefStreamGrade.CourseDef_Id = ADM_CourseDef.CourseDef_Id) LEFT OUTER JOIN COMM_ApplicationForm ON (ADM_ScenarioSelection.ApplicationForm_Id = COMM_ApplicationForm.ApplicationForm_Id) LEFT OUTER JOIN REG_StudentRegistration ON (COMM_ApplicationForm.ApplicationForm_Id = REG_StudentRegistration.ApplicationForm_Id) LEFT OUTER JOIN COMM_Workflow ON (COMM_ApplicationForm.Workflow_Id = COMM_Workflow.Workflow_Id) LEFT OUTER JOIN COMM_ApplicationFormState ON (COMM_ApplicationForm.ApplicationForm_Id = COMM_ApplicationFormState.ApplicationForm_Id) LEFT OUTER JOIN COMM_WorkflowState ON (COMM_ApplicationFormState.WorkflowState_Id = COMM_WorkflowState.WorkflowState_Id) WHERE ((((((ADM_EduScenario.EduScenario_Id = ?) AND (ADM_Enrollment.School_Id IN(?))) AND (ADM_ScenarioSelection.ExitDate IS NULL)) AND (ADM_Enrollment.IsYearActiveEnrollment = ?)) AND ((((COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (COMM_ApplicationFormState.IsCurrent = ?)) AND (COMM_WorkflowState.StateCode <> ?)) OR (COMM_ApplicationForm.ApplicationForm_Id IS NULL))) AND (ADM_SelectionDetails.SelectionDetails_Id IS NULL))
20240806 11:59:49.481 006B =FUN= [ZQL.PhysicalConnection] Parameters: 622198871, 838, 1, 1, 0
20240806 11:59:49.481 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:50.918 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:50.918 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:51.215 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0010
20240806 11:59:51.215 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 251 columns, 336 rows
20240806 11:59:51.215 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0010
20240806 11:59:51.216 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0010
20240806 11:59:51.216 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:51.216 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:51.216 006B =WRN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: zcare.zdek.dbag.DBag.load took too much time: 1747 ms
20240806 11:59:51.216 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.dbag.DBag.load
20240806 11:59:51.216 006B =WRN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: zcare.zlms.educationalscenario.enrollment.dataset.ElectiveScenarioStudentListDetailDataSet$Handler.handleContextChange took too much time: 2450 ms
20240806 11:59:51.216 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 <- zcare.zlms.educationalscenario.enrollment.dataset.ElectiveScenarioStudentListDetailDataSet$Handler.handleContextChange
20240806 11:59:51.216 006B =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 11:59:51.217 006B =API= [CallClient] null: <= DBAG_COPY EduScenarioStudentsDetail0
20240806 11:59:51.218 006B =FUN= [CallFromClient] 1901330445:6934: InputMessage size 910
20240806 11:59:51.218 006B =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 10713
20240806 11:59:51.218 006B =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 11:59:51.346 006F =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=42)
20240806 11:59:51.346 006F =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:HEARTBEAT
20240806 11:59:51.346 006F =FUN= [CallFromClient] null: Parameter FILTER_LIST=0:SQL:zmedstructure.STRUCT_SiteType:
29:Hierarchy:
8:dictionary.DIC_DictionaryEntry:
39:
33::
8:common.COMM_WorkflowState:
20:MessageDelivery:
27::
20:ApplicationFormState:
35::
5:lmsregistration.REG_StudentRegistration:
8:admin.ADM_StreamGrade:
30:
19:essionDef:
25::
19:chool:
20:enarioSelection:
18:Grade:
18:Enrollment:
19:ducationPathDef:
35:
21:ScenarioStreamGrade:
41:
29:OptionalGrp:
29::
30:
18:CourseDefStreamGrade:
27::
24::
20:mmunityMember:
27::
1:CRIPT_CACHE_CLEAR_Filter:
20240806 11:59:51.346 006F =FUN= [CallFromClient] null: Parameter LAST_NOTIFICATION_TIME=20240806 11:57:48.720
20240806 11:59:51.346 006F =FUN= [CallFromClient] null: Parameter LAST_NOTIFICATION_ID=1901330437
20240806 11:59:51.346 006F =FUN= [CallFromClient] null: Parameter CurrentCallId=-527312900
20240806 11:59:51.346 006F =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 11:59:51.347 006F =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 11:59:51.347 006F =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 11:59:51.347 006F =API= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 3 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: administrator:1901330445
20240806 11:59:51.347 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:51.347 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0003 - Allocated=10, Used=1
20240806 11:59:51.347 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0003
20240806 11:59:51.455 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 11:59:51.455 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0003
20240806 11:59:51.455 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0003
20240806 11:59:51.455 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:51.455 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:51.455 006F =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 11:59:51.456 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT TOP 5000 zdeksystem.SYS_Notification.Notification_Id, zdeksystem.SYS_Notification.SenderSession_Id, zdeksystem.SYS_Notification.SenderUser_Id, zdeksystem.SYS_Notification.EmissionTime, zdeksystem.SYS_Notification.Subject, zdeksystem.SYS_Notification.Message FROM zdeksystem.SYS_Notification WHERE ((zdeksystem.SYS_Notification.EmissionTime >= '20240806 11:57:48.721') AND (zdeksystem.SYS_Notification.EmissionTime < '20240806 11:58:19.617')) ORDER BY zdeksystem.SYS_Notification.EmissionTime ASC, zdeksystem.SYS_Notification.Notification_Id ASC;
20240806 11:59:51.456 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:51.456 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:51.456 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0011 - Allocated=10, Used=1
20240806 11:59:51.456 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0011 - SELECT TOP 5000 SYS_Notification.Notification_Id, SYS_Notification.SenderSession_Id, SYS_Notification.SenderUser_Id, SYS_Notification.EmissionTime, SYS_Notification.Subject, SYS_Notification.Message FROM SYS_Notification WHERE ((SYS_Notification.EmissionTime >= ?) AND (SYS_Notification.EmissionTime < ?)) ORDER BY SYS_Notification.EmissionTime ASC, SYS_Notification.Notification_Id ASC
20240806 11:59:51.456 006F =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:57:48.721', '20240806 11:58:19.617'
20240806 11:59:51.456 006F =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:51.645 006F =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:51.645 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:51.645 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0011
20240806 11:59:51.646 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnection.endQuery : 6 columns, 0 rows
20240806 11:59:51.646 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0011
20240806 11:59:51.646 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0011
20240806 11:59:51.646 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:51.646 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:51.646 006F =FUN= [NotificationCache] null: Cache updated, now from 20240806 11:53:38.712 to 20240806 11:57:48.721
20240806 11:59:51.652 006F =API= [ZDataAccess] ZDataServer: == ServerLoad: 42
20240806 11:59:51.652 006F =WRN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: zcare.zdataserver.ZDataAccess.getNotifications took too much time: 305 ms
20240806 11:59:51.652 006F =API= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 3 <- zcare.zdataserver.ZDataAccess.getNotifications
20240806 11:59:51.652 006F =API= [ZDataAccess] ZDataServer: == ServerLoad: 42
20240806 11:59:51.652 006F =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 11:59:51.653 006F =FUN= [CallFromClient] 1901330445:6934: InputMessage size 673
20240806 11:59:51.653 006F =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 139
20240806 11:59:51.653 006F =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 11:59:53.753 009B =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdataserver.SystemSession.heartbeat
20240806 11:59:53.753 009B =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.dbag.DBag.load
20240806 11:59:53.753 009B =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zdeksystem.SYS_Session.Session_Id, zdeksystem.SYS_Session.User_Id, zdeksystem.SYS_Session.UserName, zdeksystem.SYS_Session.Token, zdeksystem.SYS_Session.LastCallTime, zdeksystem.SYS_Session.ManagingServerName, zdeksystem.SYS_Session.ManagingServerPort, zdeksystem.SYS_Session.LastProcessedNotification_Id, zdeksystem.SYS_Session.LastProcessedNotificationTime, zdeksystem.SYS_Session.DataServerClientIP, zdeksystem.SYS_Session.DataServerClientDetails, zdeksystem.SYS_Session.OriginatorClientIP, zdeksystem.SYS_Session.OriginatorClientDetails, zdeksystem.SYS_Session.PermanentSession_Id, zdeksystem.SYS_Session.Locale, zdeksystem.SYS_Session.ValidationToken,zdeksystem.SYS_PermanentSession.PermanentSession_Id, zdeksystem.SYS_PermanentSession.Name, zdeksystem.SYS_PermanentSession.LastAcknowledegedNotif_Id, zdeksystem.SYS_PermanentSession.LastAcknowledgedNotifTime FROM zdeksystem.SYS_Session LEFT OUTER JOIN zdeksystem.SYS_PermanentSession ON zdeksystem.SYS_Session.PermanentSession_Id = zdeksystem.SYS_PermanentSession.PermanentSession_Id WHERE (zdeksystem.SYS_Session.Session_Id = 1901330433);
20240806 11:59:53.753 009B =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:53.753 009B =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:53.753 009B =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0014 - Allocated=10, Used=1
20240806 11:59:53.754 009B =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0014 - SELECT SYS_Session.Session_Id, SYS_Session.User_Id, SYS_Session.UserName, SYS_Session.Token, SYS_Session.LastCallTime, SYS_Session.ManagingServerName, SYS_Session.ManagingServerPort, SYS_Session.LastProcessedNotification_Id, SYS_Session.LastProcessedNotificationTime, SYS_Session.DataServerClientIP, SYS_Session.DataServerClientDetails, SYS_Session.OriginatorClientIP, SYS_Session.OriginatorClientDetails, SYS_Session.PermanentSession_Id, SYS_Session.Locale, SYS_Session.ValidationToken, SYS_PermanentSession.PermanentSession_Id, SYS_PermanentSession.Name, SYS_PermanentSession.LastAcknowledegedNotif_Id, SYS_PermanentSession.LastAcknowledgedNotifTime FROM SYS_Session LEFT OUTER JOIN SYS_PermanentSession ON (SYS_Session.PermanentSession_Id = SYS_PermanentSession.PermanentSession_Id) WHERE (SYS_Session.Session_Id = ?)
20240806 11:59:53.754 009B =FUN= [ZQL.PhysicalConnection] Parameters: 1901330433
20240806 11:59:53.754 009B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:53.790 009B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:53.790 009B =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:53.790 009B =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0014
20240806 11:59:53.790 009B =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.endQuery : 20 columns, 1 rows
20240806 11:59:53.790 009B =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0014
20240806 11:59:53.790 009B =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0014
20240806 11:59:53.790 009B =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:53.790 009B =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:53.790 009B =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.dbag.DBag.load
20240806 11:59:53.790 009B =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:53.790 009B =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0012 - Allocated=10, Used=1
20240806 11:59:53.790 009B =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0012
20240806 11:59:53.829 009B =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 11:59:53.829 009B =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0012
20240806 11:59:53.829 009B =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0012
20240806 11:59:53.829 009B =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:53.829 009B =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:53.829 009B =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 11:59:53.830 009B =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT TOP 5000 zdeksystem.SYS_Notification.Notification_Id, zdeksystem.SYS_Notification.SenderSession_Id, zdeksystem.SYS_Notification.SenderUser_Id, zdeksystem.SYS_Notification.EmissionTime, zdeksystem.SYS_Notification.Subject, zdeksystem.SYS_Notification.Message FROM zdeksystem.SYS_Notification WHERE ((zdeksystem.SYS_Notification.EmissionTime >= '20240806 11:57:48.721') AND (zdeksystem.SYS_Notification.EmissionTime < '20240806 11:58:21.996')) ORDER BY zdeksystem.SYS_Notification.EmissionTime ASC, zdeksystem.SYS_Notification.Notification_Id ASC;
20240806 11:59:53.830 009B =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 11:59:53.830 009B =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 11:59:53.830 009B =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0013 - Allocated=10, Used=1
20240806 11:59:53.830 009B =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0013 - SELECT TOP 5000 SYS_Notification.Notification_Id, SYS_Notification.SenderSession_Id, SYS_Notification.SenderUser_Id, SYS_Notification.EmissionTime, SYS_Notification.Subject, SYS_Notification.Message FROM SYS_Notification WHERE ((SYS_Notification.EmissionTime >= ?) AND (SYS_Notification.EmissionTime < ?)) ORDER BY SYS_Notification.EmissionTime ASC, SYS_Notification.Notification_Id ASC
20240806 11:59:53.830 009B =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:57:48.721', '20240806 11:58:21.996'
20240806 11:59:53.830 009B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 11:59:53.927 009B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 11:59:53.927 009B =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 11:59:53.927 009B =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0013
20240806 11:59:53.927 009B =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.endQuery : 6 columns, 0 rows
20240806 11:59:53.927 009B =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0013
20240806 11:59:53.927 009B =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0013
20240806 11:59:53.927 009B =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 11:59:53.927 009B =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 11:59:53.928 009B =FUN= [NotificationCache] null: Cache updated, now from 20240806 11:53:38.712 to 20240806 11:57:48.721
20240806 11:59:53.928 009B =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdataserver.SystemSession.heartbeat
20240806 12:00:13.938 0095 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdataserver.SystemSession.heartbeat
20240806 12:00:13.939 0095 =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.dbag.DBag.load
20240806 12:00:13.939 0095 =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zdeksystem.SYS_Session.Session_Id, zdeksystem.SYS_Session.User_Id, zdeksystem.SYS_Session.UserName, zdeksystem.SYS_Session.Token, zdeksystem.SYS_Session.LastCallTime, zdeksystem.SYS_Session.ManagingServerName, zdeksystem.SYS_Session.ManagingServerPort, zdeksystem.SYS_Session.LastProcessedNotification_Id, zdeksystem.SYS_Session.LastProcessedNotificationTime, zdeksystem.SYS_Session.DataServerClientIP, zdeksystem.SYS_Session.DataServerClientDetails, zdeksystem.SYS_Session.OriginatorClientIP, zdeksystem.SYS_Session.OriginatorClientDetails, zdeksystem.SYS_Session.PermanentSession_Id, zdeksystem.SYS_Session.Locale, zdeksystem.SYS_Session.ValidationToken,zdeksystem.SYS_PermanentSession.PermanentSession_Id, zdeksystem.SYS_PermanentSession.Name, zdeksystem.SYS_PermanentSession.LastAcknowledegedNotif_Id, zdeksystem.SYS_PermanentSession.LastAcknowledgedNotifTime FROM zdeksystem.SYS_Session LEFT OUTER JOIN zdeksystem.SYS_PermanentSession ON zdeksystem.SYS_Session.PermanentSession_Id = zdeksystem.SYS_PermanentSession.PermanentSession_Id WHERE (zdeksystem.SYS_Session.Session_Id = 1901330433);
20240806 12:00:13.939 0095 =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:13.939 0095 =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:13.939 0095 =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0009 - Allocated=10, Used=1
20240806 12:00:13.939 0095 =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0009 - SELECT SYS_Session.Session_Id, SYS_Session.User_Id, SYS_Session.UserName, SYS_Session.Token, SYS_Session.LastCallTime, SYS_Session.ManagingServerName, SYS_Session.ManagingServerPort, SYS_Session.LastProcessedNotification_Id, SYS_Session.LastProcessedNotificationTime, SYS_Session.DataServerClientIP, SYS_Session.DataServerClientDetails, SYS_Session.OriginatorClientIP, SYS_Session.OriginatorClientDetails, SYS_Session.PermanentSession_Id, SYS_Session.Locale, SYS_Session.ValidationToken, SYS_PermanentSession.PermanentSession_Id, SYS_PermanentSession.Name, SYS_PermanentSession.LastAcknowledegedNotif_Id, SYS_PermanentSession.LastAcknowledgedNotifTime FROM SYS_Session LEFT OUTER JOIN SYS_PermanentSession ON (SYS_Session.PermanentSession_Id = SYS_PermanentSession.PermanentSession_Id) WHERE (SYS_Session.Session_Id = ?)
20240806 12:00:13.940 0095 =FUN= [ZQL.PhysicalConnection] Parameters: 1901330433
20240806 12:00:13.941 0095 =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:13.966 0095 =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:13.967 0095 =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:13.967 0095 =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0009
20240806 12:00:13.967 0095 =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.endQuery : 20 columns, 1 rows
20240806 12:00:13.967 0095 =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0009
20240806 12:00:13.967 0095 =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0009
20240806 12:00:13.967 0095 =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:13.967 0095 =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:13.970 0095 =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.dbag.DBag.load
20240806 12:00:13.971 0095 =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:13.971 0095 =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0008 - Allocated=10, Used=1
20240806 12:00:13.972 0095 =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0008
20240806 12:00:13.990 0095 =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 12:00:13.991 0095 =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0008
20240806 12:00:13.991 0095 =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0008
20240806 12:00:13.991 0095 =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:13.991 0095 =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:13.991 0095 =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 12:00:13.991 0095 =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT TOP 5000 zdeksystem.SYS_Notification.Notification_Id, zdeksystem.SYS_Notification.SenderSession_Id, zdeksystem.SYS_Notification.SenderUser_Id, zdeksystem.SYS_Notification.EmissionTime, zdeksystem.SYS_Notification.Subject, zdeksystem.SYS_Notification.Message FROM zdeksystem.SYS_Notification WHERE ((zdeksystem.SYS_Notification.EmissionTime >= '20240806 11:57:48.721') AND (zdeksystem.SYS_Notification.EmissionTime < '20240806 11:58:42.176')) ORDER BY zdeksystem.SYS_Notification.EmissionTime ASC, zdeksystem.SYS_Notification.Notification_Id ASC;
20240806 12:00:13.991 0095 =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:13.992 0095 =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:13.992 0095 =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0002 - Allocated=10, Used=1
20240806 12:00:13.992 0095 =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0002 - SELECT TOP 5000 SYS_Notification.Notification_Id, SYS_Notification.SenderSession_Id, SYS_Notification.SenderUser_Id, SYS_Notification.EmissionTime, SYS_Notification.Subject, SYS_Notification.Message FROM SYS_Notification WHERE ((SYS_Notification.EmissionTime >= ?) AND (SYS_Notification.EmissionTime < ?)) ORDER BY SYS_Notification.EmissionTime ASC, SYS_Notification.Notification_Id ASC
20240806 12:00:13.992 0095 =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:57:48.721', '20240806 11:58:42.176'
20240806 12:00:13.992 0095 =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:14.046 0095 =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:14.046 0095 =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:14.046 0095 =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0002
20240806 12:00:14.046 0095 =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.endQuery : 6 columns, 0 rows
20240806 12:00:14.047 0095 =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0002
20240806 12:00:14.047 0095 =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0002
20240806 12:00:14.047 0095 =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:14.047 0095 =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:14.047 0095 =FUN= [NotificationCache] null: Cache updated, now from 20240806 11:54:38.712 to 20240806 11:57:48.721
20240806 12:00:14.047 0095 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdataserver.SystemSession.heartbeat
20240806 12:00:15.181 007A =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=42)
20240806 12:00:15.181 007A =API= [FunctionCheck] <App. context>: 2 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: system:1901330435
20240806 12:00:15.181 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:15.181 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0007 - Allocated=10, Used=1
20240806 12:00:15.181 007A =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0007
20240806 12:00:15.217 007A =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 12:00:15.217 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0007
20240806 12:00:15.217 007A =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0007
20240806 12:00:15.217 007A =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:15.217 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:15.217 007A =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 12:00:15.218 007A =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT TOP 5000 zdeksystem.SYS_Notification.Notification_Id, zdeksystem.SYS_Notification.SenderSession_Id, zdeksystem.SYS_Notification.SenderUser_Id, zdeksystem.SYS_Notification.EmissionTime, zdeksystem.SYS_Notification.Subject, zdeksystem.SYS_Notification.Message FROM zdeksystem.SYS_Notification WHERE ((zdeksystem.SYS_Notification.EmissionTime >= '20240806 11:57:48.721') AND (zdeksystem.SYS_Notification.EmissionTime < '20240806 11:58:43.398')) ORDER BY zdeksystem.SYS_Notification.EmissionTime ASC, zdeksystem.SYS_Notification.Notification_Id ASC;
20240806 12:00:15.218 007A =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:15.218 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:15.218 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0010 - Allocated=10, Used=1
20240806 12:00:15.218 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0010 - SELECT TOP 5000 SYS_Notification.Notification_Id, SYS_Notification.SenderSession_Id, SYS_Notification.SenderUser_Id, SYS_Notification.EmissionTime, SYS_Notification.Subject, SYS_Notification.Message FROM SYS_Notification WHERE ((SYS_Notification.EmissionTime >= ?) AND (SYS_Notification.EmissionTime < ?)) ORDER BY SYS_Notification.EmissionTime ASC, SYS_Notification.Notification_Id ASC
20240806 12:00:15.218 007A =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:57:48.721', '20240806 11:58:43.398'
20240806 12:00:15.218 007A =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:15.278 007A =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:15.278 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:15.278 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0010
20240806 12:00:15.278 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.endQuery : 6 columns, 0 rows
20240806 12:00:15.278 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0010
20240806 12:00:15.278 007A =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0010
20240806 12:00:15.278 007A =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:15.278 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:15.278 007A =FUN= [NotificationCache] null: Cache updated, now from 20240806 11:54:38.712 to 20240806 11:57:48.721
20240806 12:00:15.278 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:15.278 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0003 - Allocated=10, Used=1
20240806 12:00:15.278 007A =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getCpuLoadFromDb
20240806 12:00:15.393 007A =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getCpuLoadFromDb
20240806 12:00:15.394 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0003
20240806 12:00:15.394 007A =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0003
20240806 12:00:15.394 007A =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:15.394 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:15.394 007A =API= [ZDataAccess] ZDataServer: == ServerLoad: 42
20240806 12:00:15.394 007A =WRN= [FunctionCheck] <App. context>: zcare.zdataserver.ZDataAccess.getNotifications took too much time: 213 ms
20240806 12:00:15.394 007A =API= [FunctionCheck] <App. context>: 2 <- zcare.zdataserver.ZDataAccess.getNotifications
20240806 12:00:15.394 007A =API= [ZDataAccess] ZDataServer: == ServerLoad: 42
20240806 12:00:15.394 007A =API= [FunctionCheck] <App. context>: 2 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: system:1901330437
20240806 12:00:15.394 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:15.394 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0011 - Allocated=10, Used=1
20240806 12:00:15.394 007A =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0011
20240806 12:00:15.396 0096 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:15.396 0096 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0014 - Allocated=10, Used=2
20240806 12:00:15.396 0096 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0014 - UPDATE SYS_Session SET LastCallTime = '20240806 12:00:15.394' WHERE Session_Id IN ( 1901330437)
20240806 12:00:15.417 007A =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 12:00:15.418 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0011
20240806 12:00:15.418 007A =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0011
20240806 12:00:15.418 007A =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:15.418 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 12:00:15.418 007A =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 12:00:15.482 0096 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 12:00:15.482 0096 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0014
20240806 12:00:15.482 0096 =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0014
20240806 12:00:15.482 0096 =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:15.482 0096 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:15.712 007A =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT TOP 5000 zdeksystem.SYS_Notification.Notification_Id, zdeksystem.SYS_Notification.SenderSession_Id, zdeksystem.SYS_Notification.SenderUser_Id, zdeksystem.SYS_Notification.EmissionTime, zdeksystem.SYS_Notification.Subject, zdeksystem.SYS_Notification.Message FROM zdeksystem.SYS_Notification WHERE ((zdeksystem.SYS_Notification.EmissionTime >= '20240806 11:57:48.721') AND (zdeksystem.SYS_Notification.EmissionTime < '20240806 11:58:43.899')) ORDER BY zdeksystem.SYS_Notification.EmissionTime ASC, zdeksystem.SYS_Notification.Notification_Id ASC;
20240806 12:00:15.713 007A =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:15.713 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:15.713 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0012 - Allocated=10, Used=1
20240806 12:00:15.713 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0012 - SELECT TOP 5000 SYS_Notification.Notification_Id, SYS_Notification.SenderSession_Id, SYS_Notification.SenderUser_Id, SYS_Notification.EmissionTime, SYS_Notification.Subject, SYS_Notification.Message FROM SYS_Notification WHERE ((SYS_Notification.EmissionTime >= ?) AND (SYS_Notification.EmissionTime < ?)) ORDER BY SYS_Notification.EmissionTime ASC, SYS_Notification.Notification_Id ASC
20240806 12:00:15.713 007A =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:57:48.721', '20240806 11:58:43.899'
20240806 12:00:15.713 007A =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:15.857 007A =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:15.857 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:15.857 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0012
20240806 12:00:15.858 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.endQuery : 6 columns, 0 rows
20240806 12:00:15.858 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0012
20240806 12:00:15.858 007A =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0012
20240806 12:00:15.858 007A =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:15.858 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:15.858 007A =FUN= [NotificationCache] null: Cache updated, now from 20240806 11:54:38.712 to 20240806 11:57:48.721
20240806 12:00:15.859 007A =API= [ZDataAccess] ZDataServer: == ServerLoad: 42
20240806 12:00:15.859 007A =WRN= [FunctionCheck] <App. context>: zcare.zdataserver.ZDataAccess.getNotifications took too much time: 465 ms
20240806 12:00:15.859 007A =API= [FunctionCheck] <App. context>: 2 <- zcare.zdataserver.ZDataAccess.getNotifications
20240806 12:00:15.859 007A =API= [ZDataAccess] ZDataServer: == ServerLoad: 42
20240806 12:00:15.859 007A =API= [FunctionCheck] <App. context>: 2 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: system:1901330439
20240806 12:00:15.860 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:15.860 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0013 - Allocated=10, Used=1
20240806 12:00:15.860 007A =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0013
20240806 12:00:15.861 00A0 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:15.861 00A0 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0009 - Allocated=10, Used=2
20240806 12:00:15.862 00A0 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0009 - UPDATE SYS_Session SET LastCallTime = '20240806 12:00:15.859' WHERE Session_Id IN ( 1901330439)
20240806 12:00:15.899 007A =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 12:00:15.900 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0013
20240806 12:00:15.900 007A =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0013
20240806 12:00:15.900 007A =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:15.900 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 12:00:15.900 007A =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 12:00:15.900 007A =API= [ZDataAccess] ZDataServer: == ServerLoad: 42
20240806 12:00:15.901 007A =API= [FunctionCheck] <App. context>: 2 <- zcare.zdataserver.ZDataAccess.getNotifications
20240806 12:00:15.901 007A =API= [ZDataAccess] ZDataServer: == ServerLoad: 42
20240806 12:00:15.901 007A =API= [FunctionCheck] <App. context>: 2 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: system:1901330441
20240806 12:00:15.901 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:15.902 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0008 - Allocated=10, Used=2
20240806 12:00:15.902 007A =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0008
20240806 12:00:15.904 009B =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:15.904 009B =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0002 - Allocated=10, Used=3
20240806 12:00:15.904 009B =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0002 - UPDATE SYS_Session SET LastCallTime = '20240806 12:00:15.901' WHERE Session_Id IN ( 1901330441)
20240806 12:00:15.957 00A0 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 12:00:15.957 00A0 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0009
20240806 12:00:15.957 00A0 =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0009
20240806 12:00:15.957 00A0 =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:15.957 00A0 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=2
20240806 12:00:16.005 009B =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 12:00:16.005 009B =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0002
20240806 12:00:16.005 007A =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 12:00:16.005 009B =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0002
20240806 12:00:16.005 009B =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:16.005 009B =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 12:00:16.005 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0008
20240806 12:00:16.005 007A =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0008
20240806 12:00:16.005 007A =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:16.005 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:16.006 007A =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 12:00:16.260 007A =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT TOP 5000 zdeksystem.SYS_Notification.Notification_Id, zdeksystem.SYS_Notification.SenderSession_Id, zdeksystem.SYS_Notification.SenderUser_Id, zdeksystem.SYS_Notification.EmissionTime, zdeksystem.SYS_Notification.Subject, zdeksystem.SYS_Notification.Message FROM zdeksystem.SYS_Notification WHERE ((zdeksystem.SYS_Notification.EmissionTime >= '20240806 11:57:48.721') AND (zdeksystem.SYS_Notification.EmissionTime < '20240806 11:58:44.400')) ORDER BY zdeksystem.SYS_Notification.EmissionTime ASC, zdeksystem.SYS_Notification.Notification_Id ASC;
20240806 12:00:16.260 007A =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:16.261 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:16.261 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0007 - Allocated=10, Used=1
20240806 12:00:16.261 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0007 - SELECT TOP 5000 SYS_Notification.Notification_Id, SYS_Notification.SenderSession_Id, SYS_Notification.SenderUser_Id, SYS_Notification.EmissionTime, SYS_Notification.Subject, SYS_Notification.Message FROM SYS_Notification WHERE ((SYS_Notification.EmissionTime >= ?) AND (SYS_Notification.EmissionTime < ?)) ORDER BY SYS_Notification.EmissionTime ASC, SYS_Notification.Notification_Id ASC
20240806 12:00:16.261 007A =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:57:48.721', '20240806 11:58:44.400'
20240806 12:00:16.261 007A =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:16.336 007A =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:16.337 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:16.337 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0007
20240806 12:00:16.337 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.endQuery : 6 columns, 0 rows
20240806 12:00:16.337 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0007
20240806 12:00:16.337 007A =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0007
20240806 12:00:16.337 007A =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:16.337 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:16.337 007A =FUN= [NotificationCache] null: Cache updated, now from 20240806 11:54:38.712 to 20240806 11:57:48.721
20240806 12:00:16.337 007A =API= [ZDataAccess] ZDataServer: == ServerLoad: 42
20240806 12:00:16.337 007A =WRN= [FunctionCheck] <App. context>: zcare.zdataserver.ZDataAccess.getNotifications took too much time: 436 ms
20240806 12:00:16.337 007A =API= [FunctionCheck] <App. context>: 2 <- zcare.zdataserver.ZDataAccess.getNotifications
20240806 12:00:16.337 007A =API= [ZDataAccess] ZDataServer: == ServerLoad: 42
20240806 12:00:16.337 007A =API= [FunctionCheck] <App. context>: 2 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: system:1901330443
20240806 12:00:16.337 009E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:16.337 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:16.338 009E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0010 - Allocated=10, Used=1
20240806 12:00:16.338 009E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0010 - UPDATE SYS_Session SET LastCallTime = '20240806 12:00:16.337' WHERE Session_Id IN ( 1901330443)
20240806 12:00:16.338 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0003 - Allocated=10, Used=2
20240806 12:00:16.338 007A =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0003
20240806 12:00:16.467 007A =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 12:00:16.467 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0003
20240806 12:00:16.468 007A =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0003
20240806 12:00:16.468 007A =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:16.468 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 12:00:16.468 007A =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 12:00:16.550 009E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 12:00:16.550 009E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0010
20240806 12:00:16.550 009E =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0010
20240806 12:00:16.550 009E =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:16.550 009E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:16.679 007A =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT TOP 5000 zdeksystem.SYS_Notification.Notification_Id, zdeksystem.SYS_Notification.SenderSession_Id, zdeksystem.SYS_Notification.SenderUser_Id, zdeksystem.SYS_Notification.EmissionTime, zdeksystem.SYS_Notification.Subject, zdeksystem.SYS_Notification.Message FROM zdeksystem.SYS_Notification WHERE ((zdeksystem.SYS_Notification.EmissionTime >= '20240806 11:57:48.721') AND (zdeksystem.SYS_Notification.EmissionTime < '20240806 11:58:44.900')) ORDER BY zdeksystem.SYS_Notification.EmissionTime ASC, zdeksystem.SYS_Notification.Notification_Id ASC;
20240806 12:00:16.679 007A =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:16.679 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:16.680 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0011 - Allocated=10, Used=1
20240806 12:00:16.680 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0011 - SELECT TOP 5000 SYS_Notification.Notification_Id, SYS_Notification.SenderSession_Id, SYS_Notification.SenderUser_Id, SYS_Notification.EmissionTime, SYS_Notification.Subject, SYS_Notification.Message FROM SYS_Notification WHERE ((SYS_Notification.EmissionTime >= ?) AND (SYS_Notification.EmissionTime < ?)) ORDER BY SYS_Notification.EmissionTime ASC, SYS_Notification.Notification_Id ASC
20240806 12:00:16.680 007A =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:57:48.721', '20240806 11:58:44.900'
20240806 12:00:16.680 007A =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:16.841 007A =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:16.841 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:16.841 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0011
20240806 12:00:16.842 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.endQuery : 6 columns, 0 rows
20240806 12:00:16.842 007A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0011
20240806 12:00:16.842 007A =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0011
20240806 12:00:16.842 007A =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:16.842 007A =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:16.842 007A =FUN= [NotificationCache] null: Cache updated, now from 20240806 11:54:38.712 to 20240806 11:57:48.721
20240806 12:00:16.842 007A =API= [ZDataAccess] ZDataServer: == ServerLoad: 42
20240806 12:00:16.843 007A =WRN= [FunctionCheck] <App. context>: zcare.zdataserver.ZDataAccess.getNotifications took too much time: 505 ms
20240806 12:00:16.843 007A =API= [FunctionCheck] <App. context>: 2 <- zcare.zdataserver.ZDataAccess.getNotifications
20240806 12:00:16.843 007A =API= [ZDataAccess] ZDataServer: == ServerLoad: 42
20240806 12:00:16.844 007A =API= [CallFromClient] null: => DBAG_COPY SurveyTriggerJob2
20240806 12:00:16.845 007A =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: SURVEY_TRIGGER_HANDLER:LOAD_SURVEY
20240806 12:00:16.845 007A =FUN= [CallFromClient] null: Parameter USER_ID=1
20240806 12:00:16.845 007A =FUN= [CallFromClient] null: Parameter DBAG_NAME=SurveyTriggerJob2
20240806 12:00:16.845 007A =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 12:00:16.845 007A =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 12:00:16.845 007A =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 12:00:16.845 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY: 3 -> zcare.zlms.handler.SurveyTriggerHandler.loadSurvey
20240806 12:00:16.853 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY: 4 -> zcare.zdek.dbag.DBag.load
20240806 12:00:16.854 007A =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zlmssurvey.SVY_Survey.Survey_Id, zlmssurvey.SVY_Survey.Template_Id, zlmssurvey.SVY_Survey.DurationToFillSurvey, zlmssurvey.SVY_Survey.IsMandatory, zlmssurvey.SVY_Survey.IsPausable, zlmssurvey.SVY_Survey.AttendAllQuestions, zlmssurvey.SVY_Survey.EffectiveStartDateTime, zlmssurvey.SVY_Survey.EffectiveExpiryDateTime, zlmssurvey.SVY_Survey.DistributedDateTime, zlmssurvey.SVY_Survey.AdministrationDateTime, zlmssurvey.SVY_Survey.CreationDate, zlmssurvey.SVY_Survey.TerminationDate, zlmssurvey.SVY_Survey.CreationUser_id, zlmssurvey.SVY_Survey.UserStamp, zlmssurvey.SVY_Survey.TimeStamp, zlmssurvey.SVY_Survey.CriteriaList_Id, zlmssurvey.SVY_Survey.PersonList_Id, zlmssurvey.SVY_Survey.Status, zlmssurvey.SVY_Survey.DeleteDateTime, zlmssurvey.SVY_Survey.AcademicYear_Id,zlmssurvey.SVY_SurveyParticipant.SurveyParticipant_Id, zlmssurvey.SVY_SurveyParticipant.Survey_Id, zlmssurvey.SVY_SurveyParticipant.Status, zlmssurvey.SVY_SurveyParticipant.AssignedUser_Id, zlmssurvey.SVY_SurveyParticipant.SubmittedDateTime FROM zlmssurvey.SVY_Survey JOIN zlmssurvey.SVY_SurveyParticipant ON zlmssurvey.SVY_Survey.Survey_Id = zlmssurvey.SVY_SurveyParticipant.Survey_Id WHERE ((((zlmssurvey.SVY_SurveyParticipant.AssignedUser_Id = 1) AND (zlmssurvey.SVY_SurveyParticipant.Status <> 3)) AND ((zlmssurvey.SVY_Survey.EffectiveStartDateTime <= '20240806 12:00:16.853') AND (zlmssurvey.SVY_Survey.EffectiveExpiryDateTime >= '20240806 12:00:16.853'))) AND (zlmssurvey.SVY_Survey.Status = 3));
20240806 12:00:16.854 007A =API= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY: 5 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: administrator:1901330445
20240806 12:00:16.854 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY: 6 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmssurvey.SVY_Survey.Survey_Id, zlmssurvey.SVY_Survey.Template_Id, zlmssurvey.SVY_Survey.DurationToFillSurvey, zlmssurvey.SVY_Survey.IsMandatory, zlmssurvey.SVY_Survey.IsPausable, zlmssurvey.SVY_Survey.AttendAllQuestions, zlmssurvey.SVY_Survey.EffectiveStartDateTime, zlmssurvey.SVY_Survey.EffectiveExpiryDateTime, zlmssurvey.SVY_Survey.DistributedDateTime, zlmssurvey.SVY_Survey.AdministrationDateTime, zlmssurvey.SVY_Survey.CreationDate, zlmssurvey.SVY_Survey.TerminationDate, zlmssurvey.SVY_Survey.CreationUser_id, zlmssurvey.SVY_Survey.UserStamp, zlmssurvey.SVY_Survey.TimeStamp, zlmssurvey.SVY_Survey.CriteriaList_Id, zlmssurvey.SVY_Survey.PersonList_Id, zlmssurvey.SVY_Survey.Status, zlmssurvey.SVY_Survey.DeleteDateTime, zlmssurvey.SVY_Survey.AcademicYear_Id,zlmssurvey.SVY_SurveyParticipant.SurveyParticipant_Id, zlmssurvey.SVY_SurveyParticipant.Survey_Id, zlmssurvey.SVY_SurveyParticipant.Status, zlmssurvey.SVY_SurveyParticipant.AssignedUser_Id, zlmssurvey.SVY_SurveyParticipant.SubmittedDateTime FROM zlmssurvey.SVY_Survey JOIN zlmssurvey.SVY_SurveyParticipant ON zlmssurvey.SVY_Survey.Survey_Id = zlmssurvey.SVY_SurveyParticipant.Survey_Id WHERE ((((zlmssurvey.SVY_SurveyParticipant.AssignedUser_Id = 1) AND (zlmssurvey.SVY_SurveyParticipant.Status <> 3)) AND ((zlmssurvey.SVY_Survey.EffectiveStartDateTime <= '20240806 12:00:16.853') AND (zlmssurvey.SVY_Survey.EffectiveExpiryDateTime >= '20240806 12:00:16.853'))) AND (zlmssurvey.SVY_Survey.Status = 3));
20240806 12:00:16.855 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY: 6 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:16.855 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY: 6 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:16.856 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY: 6 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0014 - Allocated=10, Used=1
20240806 12:00:16.856 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY: 6 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0014 - SELECT SVY_Survey.Survey_Id, SVY_Survey.Template_Id, SVY_Survey.DurationToFillSurvey, SVY_Survey.IsMandatory, SVY_Survey.IsPausable, SVY_Survey.AttendAllQuestions, SVY_Survey.EffectiveStartDateTime, SVY_Survey.EffectiveExpiryDateTime, SVY_Survey.DistributedDateTime, SVY_Survey.AdministrationDateTime, SVY_Survey.CreationDate, SVY_Survey.TerminationDate, SVY_Survey.CreationUser_id, SVY_Survey.UserStamp, SVY_Survey.TimeStamp, SVY_Survey.CriteriaList_Id, SVY_Survey.PersonList_Id, SVY_Survey.Status, SVY_Survey.DeleteDateTime, SVY_Survey.AcademicYear_Id, SVY_SurveyParticipant.SurveyParticipant_Id, SVY_SurveyParticipant.Survey_Id, SVY_SurveyParticipant.Status, SVY_SurveyParticipant.AssignedUser_Id, SVY_SurveyParticipant.SubmittedDateTime FROM SVY_Survey JOIN SVY_SurveyParticipant ON (SVY_Survey.Survey_Id = SVY_SurveyParticipant.Survey_Id) WHERE ((((SVY_SurveyParticipant.AssignedUser_Id = ?) AND (SVY_SurveyParticipant.Status <> ?)) AND ((SVY_Survey.EffectiveStartDateTime <= ?) AND (SVY_Survey.EffectiveExpiryDateTime >= ?))) AND (SVY_Survey.Status = ?))
20240806 12:00:16.856 007A =FUN= [ZQL.PhysicalConnection] Parameters: 1, 3, '20240806 12:00:16.853', '20240806 12:00:16.853', 3
20240806 12:00:16.856 007A =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:16.944 007A =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:16.944 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY: 6 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:16.944 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY: 6 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0014
20240806 12:00:16.945 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY: 6 <- zcare.zdek.zql.PhysicalConnection.endQuery : 25 columns, 0 rows
20240806 12:00:16.945 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY: 6 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0014
20240806 12:00:16.945 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY: 7 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0014
20240806 12:00:16.945 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY: 7 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:16.945 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY: 6 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:16.945 007A =API= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY: 5 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 12:00:16.945 007A =API= [DATAPROXY] sqlSelect:Result: 0: C, 25 cols, 0 rows
20240806 12:00:16.945 007A =DBG= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY: 4 <- zcare.zdek.dbag.DBag.load
20240806 12:00:16.946 007A =FUN= [FunctionCheck] 1901330445:6934 [1]-LOAD_SURVEY: 3 <- zcare.zlms.handler.SurveyTriggerHandler.loadSurvey
20240806 12:00:16.946 007A =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 12:00:16.946 007A =API= [CallClient] null: <= DBAG_UPDATE SurveyTriggerJob2
20240806 12:00:16.946 007A =FUN= [CallFromClient] 1901330445:6934: InputMessage size 150
20240806 12:00:16.946 007A =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 35
20240806 12:00:16.946 007A =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 12:00:18.055 006B =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=42)
20240806 12:00:18.056 006B =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:HEARTBEAT
20240806 12:00:18.056 006B =FUN= [CallFromClient] null: Parameter FILTER_LIST=0:SQL:zmedstructure.STRUCT_SiteType:
29:Hierarchy:
8:dictionary.DIC_DictionaryEntry:
39:
33::
8:common.COMM_WorkflowState:
20:MessageDelivery:
27::
20:ApplicationFormState:
35::
5:lmsregistration.REG_StudentRegistration:
8:admin.ADM_StreamGrade:
30:
19:essionDef:
25::
19:chool:
20:enarioSelection:
18:Grade:
18:Enrollment:
19:ducationPathDef:
35:
21:ScenarioStreamGrade:
41:
29:OptionalGrp:
29::
30:
18:CourseDefStreamGrade:
27::
24::
20:mmunityMember:
27::
1:CRIPT_CACHE_CLEAR_Filter:
20240806 12:00:18.056 006B =FUN= [CallFromClient] null: Parameter LAST_NOTIFICATION_TIME=20240806 11:57:48.720
20240806 12:00:18.056 006B =FUN= [CallFromClient] null: Parameter LAST_NOTIFICATION_ID=1901330437
20240806 12:00:18.056 006B =FUN= [CallFromClient] null: Parameter CurrentCallId=-1100271591
20240806 12:00:18.056 006B =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 12:00:18.056 006B =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 12:00:18.056 006B =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 12:00:18.056 006B =API= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 3 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: administrator:1901330445
20240806 12:00:18.056 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:18.057 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0012 - Allocated=10, Used=1
20240806 12:00:18.058 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0012
20240806 12:00:18.088 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 12:00:18.088 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0012
20240806 12:00:18.088 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0012
20240806 12:00:18.088 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:18.088 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:18.088 006B =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 12:00:18.088 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT TOP 5000 zdeksystem.SYS_Notification.Notification_Id, zdeksystem.SYS_Notification.SenderSession_Id, zdeksystem.SYS_Notification.SenderUser_Id, zdeksystem.SYS_Notification.EmissionTime, zdeksystem.SYS_Notification.Subject, zdeksystem.SYS_Notification.Message FROM zdeksystem.SYS_Notification WHERE ((zdeksystem.SYS_Notification.EmissionTime >= '20240806 11:57:48.721') AND (zdeksystem.SYS_Notification.EmissionTime < '20240806 11:58:46.265')) ORDER BY zdeksystem.SYS_Notification.EmissionTime ASC, zdeksystem.SYS_Notification.Notification_Id ASC;
20240806 12:00:18.088 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:18.088 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:18.089 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0013 - Allocated=10, Used=1
20240806 12:00:18.089 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0013 - SELECT TOP 5000 SYS_Notification.Notification_Id, SYS_Notification.SenderSession_Id, SYS_Notification.SenderUser_Id, SYS_Notification.EmissionTime, SYS_Notification.Subject, SYS_Notification.Message FROM SYS_Notification WHERE ((SYS_Notification.EmissionTime >= ?) AND (SYS_Notification.EmissionTime < ?)) ORDER BY SYS_Notification.EmissionTime ASC, SYS_Notification.Notification_Id ASC
20240806 12:00:18.089 006B =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:57:48.721', '20240806 11:58:46.265'
20240806 12:00:18.089 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:18.208 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:18.208 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:18.208 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0013
20240806 12:00:18.209 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnection.endQuery : 6 columns, 0 rows
20240806 12:00:18.209 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0013
20240806 12:00:18.209 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0013
20240806 12:00:18.209 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:18.209 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:18.209 006B =FUN= [NotificationCache] null: Cache updated, now from 20240806 11:54:38.712 to 20240806 11:57:48.721
20240806 12:00:18.209 006B =API= [ZDataAccess] ZDataServer: == ServerLoad: 42
20240806 12:00:18.209 006B =API= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 3 <- zcare.zdataserver.ZDataAccess.getNotifications
20240806 12:00:18.209 006B =API= [ZDataAccess] ZDataServer: == ServerLoad: 42
20240806 12:00:18.209 006B =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 12:00:18.209 006B =FUN= [CallFromClient] 1901330445:6934: InputMessage size 674
20240806 12:00:18.209 006B =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 139
20240806 12:00:18.210 006B =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 12:00:19.286 006F =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=42)
20240806 12:00:19.286 006F =API= [CallFromClient] null: => DBAG_COPY EduScenarioStudentsDetail0
20240806 12:00:19.287 006F =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:NO_OP
20240806 12:00:19.287 006F =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 12:00:19.288 006F =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: ELECTIVE_ONLINE_APPLICATION:updatePromotedScenarioSelections
20240806 12:00:19.288 006F =FUN= [CallFromClient] null: Parameter DATA_SET=ELECTIVE_ONLINE_APPLICATION0
20240806 12:00:19.288 006F =FUN= [CallFromClient] null: Parameter dbagName=EduScenarioStudentsDetail0
20240806 12:00:19.288 006F =FUN= [CallFromClient] null: Parameter scenarioSelectionIds=2060240451;209799052
20240806 12:00:19.288 006F =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 12:00:19.288 006F =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 12:00:19.288 006F =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 12:00:19.288 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:19.288 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0009 - Allocated=10, Used=1
20240806 12:00:19.289 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0009
20240806 12:00:19.352 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=1
20240806 12:00:19.352 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.ZqlParser.parseScript : INSERT INTO zmedcommon.COMM_NoteHistory() VALUES () AS $_COMM_NoteHistory_418;INSERT INTO zlmsadmin.ADM_SelectionDetails(ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods) VALUES (2060240451, 622199023, 'DRM_G12', 1) AS $_ADM_SelectionDetails_385;INSERT INTO zlmsadmin.ADM_SelectionDetails(ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods) VALUES (209799052, 622199021, 'GEN.BIO.M.101-B', 2) AS $_ADM_SelectionDetails_450;INSERT INTO zlmsadmin.ADM_SelectionDetails(ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods) VALUES (2060240451, 622199021, 'GEN.CHM.C.101', 3) AS $_ADM_SelectionDetails_337;INSERT INTO zlmsadmin.ADM_SelectionDetails(ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods) VALUES (2060240451, 622199023, 'MART_G12', 1) AS $_ADM_SelectionDetails_401;INSERT INTO zlmsadmin.ADM_SelectionDetails(ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods) VALUES (209799052, 622199023, 'MART_G12', 1) AS $_ADM_SelectionDetails_466;INSERT INTO zlmsadmin.ADM_SelectionDetails(ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods) VALUES (2060240451, 622199021, 'GEN.BIO.M.101-B', 2) AS $_ADM_SelectionDetails_353;INSERT INTO zlmsadmin.ADM_SelectionDetails(ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods) VALUES (209799052, 622199021, 'GEN.CHM.C.101', 3) AS $_ADM_SelectionDetails_482;INSERT INTO zlmsadmin.ADM_SelectionDetails(ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods) VALUES (2060240451, 622199023, 'VART_G12', 1) AS $_ADM_SelectionDetails_369;INSERT INTO zlmsadmin.ADM_SelectionDetails(ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods) VALUES (209799052, 622199023, 'VART_G12', 1) AS $_ADM_SelectionDetails_434;INSERT INTO zlmsadmin.ADM_SelectionDetails(ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods) VALUES (209799052, 622199023, 'DRM_G12', 1) AS $_ADM_SelectionDetails_498;UPDATE zlmsadmin.ADM_ScenarioSelection SET NoteHistory_Id = $_COMM_NoteHistory_418 WHERE ScenarioSelection_Id = 209799052;UPDATE zlmsadmin.ADM_ScenarioSelection SET EduScenario_Id = 622198871 WHERE ScenarioSelection_Id = 2060240451;
20240806 12:00:19.352 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:19.352 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0009
20240806 12:00:19.352 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=2
20240806 12:00:19.352 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnection.allocateSequenceValues : PDB0009
20240806 12:00:19.352 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_ADM_SELECTIONDETAILS, Need  10 
20240806 12:00:19.352 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330453 to 1901330473 and keep from 1901330473
20240806 12:00:19.352 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_COMM_NOTEHISTORY, Need  1 
20240806 12:00:19.352 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330435 to 1901330437 and keep from 1901330437
20240806 12:00:19.352 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnection.allocateSequenceValues
20240806 12:00:19.353 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0009
20240806 12:00:19.353 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_NoteHistory (COMM_NoteHistory.NoteHistory_Id)VALUES (1901330435)
20240806 12:00:19.353 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO ADM_SelectionDetails (ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp)VALUES (2060240451, 622199023, 'DRM_G12', 1, 1901330453, 1, '20240806 12:00:19.353')
20240806 12:00:19.353 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO ADM_SelectionDetails (ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp)VALUES (209799052, 622199021, 'GEN.BIO.M.101-B', 2, 1901330455, 1, '20240806 12:00:19.353')
20240806 12:00:19.353 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO ADM_SelectionDetails (ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp)VALUES (2060240451, 622199021, 'GEN.CHM.C.101', 3, 1901330457, 1, '20240806 12:00:19.353')
20240806 12:00:19.353 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO ADM_SelectionDetails (ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp)VALUES (2060240451, 622199023, 'MART_G12', 1, 1901330459, 1, '20240806 12:00:19.353')
20240806 12:00:19.354 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO ADM_SelectionDetails (ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp)VALUES (209799052, 622199023, 'MART_G12', 1, 1901330461, 1, '20240806 12:00:19.353')
20240806 12:00:19.354 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO ADM_SelectionDetails (ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp)VALUES (2060240451, 622199021, 'GEN.BIO.M.101-B', 2, 1901330463, 1, '20240806 12:00:19.353')
20240806 12:00:19.354 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO ADM_SelectionDetails (ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp)VALUES (209799052, 622199021, 'GEN.CHM.C.101', 3, 1901330465, 1, '20240806 12:00:19.353')
20240806 12:00:19.354 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO ADM_SelectionDetails (ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp)VALUES (2060240451, 622199023, 'VART_G12', 1, 1901330467, 1, '20240806 12:00:19.353')
20240806 12:00:19.354 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO ADM_SelectionDetails (ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp)VALUES (209799052, 622199023, 'VART_G12', 1, 1901330469, 1, '20240806 12:00:19.353')
20240806 12:00:19.354 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO ADM_SelectionDetails (ScenarioSelection_Id, EduScenarioOptionalGrp_Id, CourseDefCode, NumberOfPeriods, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp)VALUES (209799052, 622199023, 'DRM_G12', 1, 1901330471, 1, '20240806 12:00:19.353')
20240806 12:00:19.354 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: =>  UPDATE ADM_ScenarioSelection SET NoteHistory_Id = 1901330435, ADM_ScenarioSelection.UserStamp = 1, ADM_ScenarioSelection.TimeStamp = '20240806 12:00:19.353' WHERE (ScenarioSelection_Id = 209799052)
20240806 12:00:19.354 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: =>  UPDATE ADM_ScenarioSelection SET EduScenario_Id = 622198871, ADM_ScenarioSelection.UserStamp = 1, ADM_ScenarioSelection.TimeStamp = '20240806 12:00:19.353' WHERE (ScenarioSelection_Id = 2060240451)
20240806 12:00:19.481 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 12:00:19.481 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0009
20240806 12:00:19.481 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=1
20240806 12:00:19.481 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.ZqlParser.parseScript : INSERT INTO zdeksystem.SYS_Notification(SenderSession_Id, SenderUser_Id, Subject) VALUES (1901330445, 1, '*SQL:zlmsadmin.ADM_ScenarioSelection:U:209799052+12060240451');
20240806 12:00:19.481 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:19.481 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0009
20240806 12:00:19.481 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=2
20240806 12:00:19.481 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnection.allocateSequenceValues : PDB0009
20240806 12:00:19.481 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_SYS_NOTIFICATION, Need  1 
20240806 12:00:19.481 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330439 to 1901330441 and keep from 1901330441
20240806 12:00:19.481 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnection.allocateSequenceValues
20240806 12:00:19.483 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0009
20240806 12:00:19.483 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO SYS_Notification (SenderSession_Id, SenderUser_Id, Subject, SYS_Notification.Notification_Id)VALUES (1901330445, 1, '*SQL:zlmsadmin.ADM_ScenarioSelection:U:209799052+12060240451', 1901330439)
20240806 12:00:19.545 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 12:00:19.545 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0009
20240806 12:00:19.545 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=1
20240806 12:00:19.545 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0009
20240806 12:00:19.635 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=0
20240806 12:00:19.635 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0009
20240806 12:00:19.635 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0009
20240806 12:00:19.635 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:19.635 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:19.637 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.dbag.DBag.load
20240806 12:00:19.637 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zmedcommon.COMM_Person.Person_Id, zmedcommon.COMM_Person.Civility, zmedcommon.COMM_Person.IDNumber, zmedcommon.COMM_Person.FirstName, zmedcommon.COMM_Person.SecondName, zmedcommon.COMM_Person.ThirdName, zmedcommon.COMM_Person.FourthName, zmedcommon.COMM_Person.FamilyName, zmedcommon.COMM_Person.EnglishFirstName, zmedcommon.COMM_Person.EnglishSecondName, zmedcommon.COMM_Person.EnglishThirdName, zmedcommon.COMM_Person.EnglishFourthName, zmedcommon.COMM_Person.EnglishFamilyName, zmedcommon.COMM_Person.BirthName, zmedcommon.COMM_Person.BirthDate, zmedcommon.COMM_Person.BirthCity, zmedcommon.COMM_Person.EnglishBirthCity, zmedcommon.COMM_Person.BirthCountry, zmedcommon.COMM_Person.Nationality, zmedcommon.COMM_Person.Gender, zmedcommon.COMM_Person.MaritalStatus, zmedcommon.COMM_Person.Photo_Id, zmedcommon.COMM_Person.Religion, zmedcommon.COMM_Person.ReligionSector, zmedcommon.COMM_Person.PhoneList_Id, zmedcommon.COMM_Person.AddressList_Id, zmedcommon.COMM_Person.OtherIdList_Id, zmedcommon.COMM_Person.IsDeleted, zmedcommon.COMM_Person.ExternalId, zmedcommon.COMM_Person.UserStamp, zmedcommon.COMM_Person.TimeStamp, zmedcommon.COMM_Person.User_Id, zmedcommon.COMM_Person.InformationSource, zmedcommon.COMM_Person.LastSyncTime, zmedcommon.COMM_Person.IsTemporary, zmedcommon.COMM_Person.VStartDate,zdeksystem.SYS_User.User_Id, zdeksystem.SYS_User.UserName, zdeksystem.SYS_User.UserPassword, zdeksystem.SYS_User.LastLoginDate, zdeksystem.SYS_User.LastFailedLoginDate, zdeksystem.SYS_User.PasswordDate, zdeksystem.SYS_User.PasswordExpired, zdeksystem.SYS_User.UserIsEnabled, zdeksystem.SYS_User.NumberOfFailedLogins, zdeksystem.SYS_User.AutoDeclared,zmedcommon.COMM_PhoneList.PhoneList_Id,zmedcommon.COMM_Phone.Phone_Id, zmedcommon.COMM_Phone.PhoneList_Id, zmedcommon.COMM_Phone.Name, zmedcommon.COMM_Phone.Value, zmedcommon.COMM_Phone.Note, zmedcommon.COMM_Phone.IsPrivate, zmedcommon.COMM_Phone.IsPrimary, zmedcommon.COMM_Phone.ContactType FROM zmedcommon.COMM_Person! JOIN zdeksystem.SYS_User ON zmedcommon.COMM_Person.User_Id = zdeksystem.SYS_User.User_Id JOIN zmedcommon.COMM_PhoneList ON zmedcommon.COMM_Person.PhoneList_Id = zmedcommon.COMM_PhoneList.PhoneList_Id JOIN zmedcommon.COMM_Phone ON zmedcommon.COMM_PhoneList.PhoneList_Id = zmedcommon.COMM_Phone.PhoneList_Id WHERE (zmedcommon.COMM_Person.Person_Id = 644869);
20240806 12:00:19.637 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:19.637 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:19.637 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0002 - Allocated=10, Used=1
20240806 12:00:19.637 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0002 - SELECT COMM_Person.Person_Id, COMM_Person.Civility, COMM_Person.IDNumber, COMM_Person.FirstName, COMM_Person.SecondName, COMM_Person.ThirdName, COMM_Person.FourthName, COMM_Person.FamilyName, COMM_Person.EnglishFirstName, COMM_Person.EnglishSecondName, COMM_Person.EnglishThirdName, COMM_Person.EnglishFourthName, COMM_Person.EnglishFamilyName, COMM_Person.BirthName, COMM_Person.BirthDate, COMM_Person.BirthCity, COMM_Person.EnglishBirthCity, COMM_Person.BirthCountry, COMM_Person.Nationality, COMM_Person.Gender, COMM_Person.MaritalStatus, COMM_Person.Photo_Id, COMM_Person.Religion, COMM_Person.ReligionSector, COMM_Person.PhoneList_Id, COMM_Person.AddressList_Id, COMM_Person.OtherIdList_Id, COMM_Person.IsDeleted, COMM_Person.ExternalId, COMM_Person.UserStamp, COMM_Person.TimeStamp, COMM_Person.User_Id, COMM_Person.InformationSource, COMM_Person.LastSyncTime, COMM_Person.IsTemporary, COMM_Person.VStartDate, SYS_User.User_Id, SYS_User.UserName, SYS_User.UserPassword, SYS_User.LastLoginDate, SYS_User.LastFailedLoginDate, SYS_User.PasswordDate, SYS_User.PasswordExpired, SYS_User.UserIsEnabled, SYS_User.NumberOfFailedLogins, SYS_User.AutoDeclared, COMM_PhoneList.PhoneList_Id, COMM_Phone.Phone_Id, COMM_Phone.PhoneList_Id, COMM_Phone.Name, COMM_Phone.Value, COMM_Phone.Note, COMM_Phone.IsPrivate, COMM_Phone.IsPrimary, COMM_Phone.ContactType FROM COMM_Person JOIN SYS_User ON (COMM_Person.User_Id = SYS_User.User_Id) JOIN COMM_PhoneList ON (COMM_Person.PhoneList_Id = COMM_PhoneList.PhoneList_Id) JOIN COMM_Phone ON (COMM_PhoneList.PhoneList_Id = COMM_Phone.PhoneList_Id) WHERE ((COMM_Person.IsDeleted = 0)) AND ((COMM_Person.Person_Id = ?))
20240806 12:00:19.637 006F =FUN= [ZQL.PhysicalConnection] Parameters: 644869
20240806 12:00:19.637 006F =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:19.667 006F =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:19.667 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:19.667 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0002
20240806 12:00:19.669 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.endQuery : 55 columns, 5 rows
20240806 12:00:19.669 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0002
20240806 12:00:19.669 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0002
20240806 12:00:19.669 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:19.669 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:19.669 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.dbag.DBag.load
20240806 12:00:19.669 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.dbag.DBag.load
20240806 12:00:19.669 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.CourseDefCodes, zlmsadmin.ADM_EduScenarioOptionalGrp.NumberOfPeriods, zlmsadmin.ADM_EduScenarioOptionalGrp.type,zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id, zlmsadmin.ADM_OptionalCourseGroup.Name, zlmsadmin.ADM_OptionalCourseGroup.MinimumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.MaximumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.IsSelectedByStudent FROM zlmsadmin.ADM_EduScenario JOIN zlmsadmin.ADM_EduScenarioOptionalGrp ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id JOIN zlmsadmin.ADM_OptionalCourseGroup ON zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id WHERE (zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198871);
20240806 12:00:19.669 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:19.669 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:19.669 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0008 - Allocated=10, Used=1
20240806 12:00:19.669 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0008 - SELECT ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, ADM_EduScenarioOptionalGrp.EduScenario_Id, ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, ADM_EduScenarioOptionalGrp.CourseDefCodes, ADM_EduScenarioOptionalGrp.NumberOfPeriods, ADM_EduScenarioOptionalGrp.type, ADM_OptionalCourseGroup.OptionalCourseGroup_Id, ADM_OptionalCourseGroup.Name, ADM_OptionalCourseGroup.MinimumSelectedCourse, ADM_OptionalCourseGroup.MaximumSelectedCourse, ADM_OptionalCourseGroup.IsSelectedByStudent FROM ADM_EduScenario JOIN ADM_EduScenarioOptionalGrp ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioOptionalGrp.EduScenario_Id) JOIN ADM_OptionalCourseGroup ON (ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = ADM_OptionalCourseGroup.OptionalCourseGroup_Id) WHERE (ADM_EduScenario.EduScenario_Id = ?)
20240806 12:00:19.669 006F =FUN= [ZQL.PhysicalConnection] Parameters: 622198871
20240806 12:00:19.669 006F =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:19.830 006F =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:19.830 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:19.831 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0008
20240806 12:00:19.831 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.endQuery : 19 columns, 2 rows
20240806 12:00:19.831 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0008
20240806 12:00:19.831 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0008
20240806 12:00:19.831 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:19.831 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:19.831 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.dbag.DBag.load
20240806 12:00:19.998 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.dbag.DBag.load
20240806 12:00:19.998 006F =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.CourseDefCodes, zlmsadmin.ADM_EduScenarioOptionalGrp.NumberOfPeriods, zlmsadmin.ADM_EduScenarioOptionalGrp.type,zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id, zlmsadmin.ADM_OptionalCourseGroup.Name, zlmsadmin.ADM_OptionalCourseGroup.MinimumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.MaximumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.IsSelectedByStudent FROM zlmsadmin.ADM_EduScenario JOIN zlmsadmin.ADM_EduScenarioOptionalGrp ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id JOIN zlmsadmin.ADM_OptionalCourseGroup ON zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id WHERE (zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198871);
20240806 12:00:19.998 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: administrator:1901330445
20240806 12:00:19.998 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.CourseDefCodes, zlmsadmin.ADM_EduScenarioOptionalGrp.NumberOfPeriods, zlmsadmin.ADM_EduScenarioOptionalGrp.type,zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id, zlmsadmin.ADM_OptionalCourseGroup.Name, zlmsadmin.ADM_OptionalCourseGroup.MinimumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.MaximumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.IsSelectedByStudent FROM zlmsadmin.ADM_EduScenario JOIN zlmsadmin.ADM_EduScenarioOptionalGrp ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id JOIN zlmsadmin.ADM_OptionalCourseGroup ON zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id WHERE (zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198871);
20240806 12:00:19.998 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:19.999 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:19.999 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0007 - Allocated=10, Used=1
20240806 12:00:19.999 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0007 - SELECT ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, ADM_EduScenarioOptionalGrp.EduScenario_Id, ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, ADM_EduScenarioOptionalGrp.CourseDefCodes, ADM_EduScenarioOptionalGrp.NumberOfPeriods, ADM_EduScenarioOptionalGrp.type, ADM_OptionalCourseGroup.OptionalCourseGroup_Id, ADM_OptionalCourseGroup.Name, ADM_OptionalCourseGroup.MinimumSelectedCourse, ADM_OptionalCourseGroup.MaximumSelectedCourse, ADM_OptionalCourseGroup.IsSelectedByStudent FROM ADM_EduScenario JOIN ADM_EduScenarioOptionalGrp ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioOptionalGrp.EduScenario_Id) JOIN ADM_OptionalCourseGroup ON (ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = ADM_OptionalCourseGroup.OptionalCourseGroup_Id) WHERE (ADM_EduScenario.EduScenario_Id = ?)
20240806 12:00:19.999 006F =FUN= [ZQL.PhysicalConnection] Parameters: 622198871
20240806 12:00:19.999 006F =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:20.092 006F =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:20.092 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:20.092 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0007
20240806 12:00:20.092 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 19 columns, 2 rows
20240806 12:00:20.092 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0007
20240806 12:00:20.092 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0007
20240806 12:00:20.093 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:20.093 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:20.093 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 12:00:20.093 006F =API= [DATAPROXY] sqlSelect:Result: 0: C, 19 cols, 2 rows
20240806 12:00:20.093 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.dbag.DBag.load
20240806 12:00:20.093 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.dbag.DBag.load
20240806 12:00:20.093 006F =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zlmsadmin.ADM_CourseDef.CourseDef_Id, zlmsadmin.ADM_CourseDef.EducationPathDef_Id, zlmsadmin.ADM_CourseDef.SessionDef_Id, zlmsadmin.ADM_CourseDef.TeachingSubject, zlmsadmin.ADM_CourseDef.TeachingLanguage, zlmsadmin.ADM_CourseDef.Title, zlmsadmin.ADM_CourseDef.NumberOfPeriods, zlmsadmin.ADM_CourseDef.NumberOfPeriodsPerWeek, zlmsadmin.ADM_CourseDef.PeriodDuration, zlmsadmin.ADM_CourseDef.PeriodDurationUnit, zlmsadmin.ADM_CourseDef.SlotColor, zlmsadmin.ADM_CourseDef.StudentGender, zlmsadmin.ADM_CourseDef.IsAcademic, zlmsadmin.ADM_CourseDef.Code, zlmsadmin.ADM_CourseDef.Position, zlmsadmin.ADM_CourseDef.CourseWeight, zlmsadmin.ADM_CourseDef.PassScore, zlmsadmin.ADM_CourseDef.OtherTitle, zlmsadmin.ADM_CourseDef.isTermBasedCourse, zlmsadmin.ADM_CourseDef.Department, zlmsadmin.ADM_CourseDef.UserStamp, zlmsadmin.ADM_CourseDef.TimeStamp FROM zlmsadmin.ADM_CourseDef WHERE (zlmsadmin.ADM_CourseDef.CourseDef_Id IN(1199703617, 1199703621, 1199703629, 1199702491, 1199702495, 1199702493, 1199703595, 1199703083, 1199702507, 1199702505, 1199703081, 1199703599, 1199703087, 1199702511, 1199703597, 1199702509, 1199703085, 1199702515, 1199702513, 1199703089, 1199703607, 1199702519, 1199703611, 1199703099, 1199703609, 1199703615, 1199702527, 1199703613));
20240806 12:00:20.093 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: administrator:1901330445
20240806 12:00:20.093 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_CourseDef.CourseDef_Id, zlmsadmin.ADM_CourseDef.EducationPathDef_Id, zlmsadmin.ADM_CourseDef.SessionDef_Id, zlmsadmin.ADM_CourseDef.TeachingSubject, zlmsadmin.ADM_CourseDef.TeachingLanguage, zlmsadmin.ADM_CourseDef.Title, zlmsadmin.ADM_CourseDef.NumberOfPeriods, zlmsadmin.ADM_CourseDef.NumberOfPeriodsPerWeek, zlmsadmin.ADM_CourseDef.PeriodDuration, zlmsadmin.ADM_CourseDef.PeriodDurationUnit, zlmsadmin.ADM_CourseDef.SlotColor, zlmsadmin.ADM_CourseDef.StudentGender, zlmsadmin.ADM_CourseDef.IsAcademic, zlmsadmin.ADM_CourseDef.Code, zlmsadmin.ADM_CourseDef.Position, zlmsadmin.ADM_CourseDef.CourseWeight, zlmsadmin.ADM_CourseDef.PassScore, zlmsadmin.ADM_CourseDef.OtherTitle, zlmsadmin.ADM_CourseDef.isTermBasedCourse, zlmsadmin.ADM_CourseDef.Department, zlmsadmin.ADM_CourseDef.UserStamp, zlmsadmin.ADM_CourseDef.TimeStamp FROM zlmsadmin.ADM_CourseDef WHERE (zlmsadmin.ADM_CourseDef.CourseDef_Id IN(1199703617, 1199703621, 1199703629, 1199702491, 1199702495, 1199702493, 1199703595, 1199703083, 1199702507, 1199702505, 1199703081, 1199703599, 1199703087, 1199702511, 1199703597, 1199702509, 1199703085, 1199702515, 1199702513, 1199703089, 1199703607, 1199702519, 1199703611, 1199703099, 1199703609, 1199703615, 1199702527, 1199703613));
20240806 12:00:20.094 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:20.094 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:20.094 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0003 - Allocated=10, Used=1
20240806 12:00:20.094 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0003 - SELECT ADM_CourseDef.CourseDef_Id, ADM_CourseDef.EducationPathDef_Id, ADM_CourseDef.SessionDef_Id, ADM_CourseDef.TeachingSubject, ADM_CourseDef.TeachingLanguage, ADM_CourseDef.Title, ADM_CourseDef.NumberOfPeriods, ADM_CourseDef.NumberOfPeriodsPerWeek, ADM_CourseDef.PeriodDuration, ADM_CourseDef.PeriodDurationUnit, ADM_CourseDef.SlotColor, ADM_CourseDef.StudentGender, ADM_CourseDef.IsAcademic, ADM_CourseDef.Code, ADM_CourseDef.Position, ADM_CourseDef.CourseWeight, ADM_CourseDef.PassScore, ADM_CourseDef.OtherTitle, ADM_CourseDef.isTermBasedCourse, ADM_CourseDef.Department, ADM_CourseDef.UserStamp, ADM_CourseDef.TimeStamp FROM ADM_CourseDef WHERE (ADM_CourseDef.CourseDef_Id IN(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?))
20240806 12:00:20.094 006F =FUN= [ZQL.PhysicalConnection] Parameters: 1199703617, 1199703621, 1199703629, 1199702491, 1199702495, 1199702493, 1199703595, 1199703083, 1199702507, 1199702505, 1199703081, 1199703599, 1199703087, 1199702511, 1199703597, 1199702509, 1199703085, 1199702515, 1199702513, 1199703089, 1199703607, 1199702519, 1199703611, 1199703099, 1199703609, 1199703615, 1199702527, 1199703613
20240806 12:00:20.094 006F =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:20.127 006F =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:20.127 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:20.128 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0003
20240806 12:00:20.128 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 22 columns, 28 rows
20240806 12:00:20.128 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0003
20240806 12:00:20.128 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0003
20240806 12:00:20.128 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:20.128 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:20.128 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 12:00:20.128 006F =API= [DATAPROXY] sqlSelect:Result: 0: C, 22 cols, 28 rows
20240806 12:00:20.129 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.dbag.DBag.load
20240806 12:00:20.129 006F =API= [DATAPROXY] DSCall: -> Call blobCreate
20240806 12:00:20.247 006F =API= [DATAPROXY] DSCall: <- Call blobCreate
20240806 12:00:20.249 006F =API= [DATAPROXY] DSCall: -> Call blobPutNextPart
20240806 12:00:21.022 006F =API= [DATAPROXY] DSCall: <- Call blobPutNextPart
20240806 12:00:21.022 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.dbag.DBag.load
20240806 12:00:21.022 006F =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zmedcommon.COMM_MessageDelivery.MessageDelivery_Id, zmedcommon.COMM_MessageDelivery.Message_Id, zmedcommon.COMM_MessageDelivery.DestinationUser_Id, zmedcommon.COMM_MessageDelivery.ContactType, zmedcommon.COMM_MessageDelivery.DeliveryAddress, zmedcommon.COMM_MessageDelivery.Status, zmedcommon.COMM_MessageDelivery.StatusTimestamp, zmedcommon.COMM_MessageDelivery.DeliverySource, zmedcommon.COMM_MessageDelivery.MarkAsRead FROM zmedcommon.COMM_MessageDelivery WHERE ((zmedcommon.COMM_MessageDelivery.Message_Id = -514) AND (zmedcommon.COMM_MessageDelivery.DestinationUser_Id = 549824));
20240806 12:00:21.022 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: administrator:1901330445
20240806 12:00:21.023 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zmedcommon.COMM_MessageDelivery.MessageDelivery_Id, zmedcommon.COMM_MessageDelivery.Message_Id, zmedcommon.COMM_MessageDelivery.DestinationUser_Id, zmedcommon.COMM_MessageDelivery.ContactType, zmedcommon.COMM_MessageDelivery.DeliveryAddress, zmedcommon.COMM_MessageDelivery.Status, zmedcommon.COMM_MessageDelivery.StatusTimestamp, zmedcommon.COMM_MessageDelivery.DeliverySource, zmedcommon.COMM_MessageDelivery.MarkAsRead FROM zmedcommon.COMM_MessageDelivery WHERE ((zmedcommon.COMM_MessageDelivery.Message_Id = -514) AND (zmedcommon.COMM_MessageDelivery.DestinationUser_Id = 549824));
20240806 12:00:21.023 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:21.023 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:21.023 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0010 - Allocated=10, Used=1
20240806 12:00:21.023 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0010 - SELECT COMM_MessageDelivery.MessageDelivery_Id, COMM_MessageDelivery.Message_Id, COMM_MessageDelivery.DestinationUser_Id, COMM_MessageDelivery.ContactType, COMM_MessageDelivery.DeliveryAddress, COMM_MessageDelivery.Status, COMM_MessageDelivery.StatusTimestamp, COMM_MessageDelivery.DeliverySource, COMM_MessageDelivery.MarkAsRead FROM COMM_MessageDelivery WHERE ((COMM_MessageDelivery.Message_Id = ?) AND (COMM_MessageDelivery.DestinationUser_Id = ?))
20240806 12:00:21.023 006F =FUN= [ZQL.PhysicalConnection] Parameters: -514, 549824
20240806 12:00:21.023 006F =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:21.048 006F =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:21.048 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:21.048 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0010
20240806 12:00:21.048 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 9 columns, 0 rows
20240806 12:00:21.048 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0010
20240806 12:00:21.048 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0010
20240806 12:00:21.049 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:21.049 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:21.049 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 12:00:21.049 006F =API= [DATAPROXY] sqlSelect:Result: 0: C, 9 cols, 0 rows
20240806 12:00:21.049 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.dbag.DBag.load
20240806 12:00:21.049 006F =INF= [EmailMessageHandler_Logger] EmailMessageHandler.EmailMessageHandler: Send Email (Dear  &nbsp;RASHED ABDALLAH MURAD ALI,<br><b>Your elective application with the following details has been modified and approved by school,<br><br>new selection is <br></b><br><b>Scenario Name :</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Group Name</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Name</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Chemistry - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Drama</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Music Arts</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Visual Arts</td></tr></table><br><b>old selection was<br></b><br><b>Scenario Name :</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Group Name</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Name</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Chemistry - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Drama</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Music Arts</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Visual Arts</td></tr></table><br><br>Thanks <hr> <br>عزيزي &nbsp;راشد عبدالله مراد على,<br><b>تم تحديث طلبك بالمواد الاتية<br><br>الاختيار الجديد<br></b><br><b>: اسم السيناريو</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المجموعة</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المادة</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الكيمياء - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>المسرح</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون الموسيقية</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون البصرية</td></tr></table><br><b>الاختيار القديم<br></b><br><b>: اسم السيناريو</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المجموعة</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المادة</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الكيمياء - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>المسرح</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون الموسيقية</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون البصرية</td></tr></table><br><br>شكرا) to (test@test.com)
20240806 12:00:21.492 006F =WRN= [Exception] 1901330445:6934 [1]-updatePromotedScenarioSelections: Exception zcare.zdek.ZException: Error sending emailCould not connect to SMTP host: smtp-mail.outlook.com, port: 587 is thrown
20240806 12:00:21.492 006F =INF= [EmailMessageHandler_Logger] EmailMessageHandler.EmailMessageHandler: Send Email (Dear  &nbsp;RASHED ABDALLAH MURAD ALI,<br><b>Your elective application with the following details has been modified and approved by school,<br><br>new selection is <br></b><br><b>Scenario Name :</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Group Name</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Name</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Chemistry - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Drama</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Music Arts</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Visual Arts</td></tr></table><br><b>old selection was<br></b><br><b>Scenario Name :</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Group Name</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Name</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Chemistry - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Drama</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Music Arts</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Visual Arts</td></tr></table><br><br>Thanks <hr> <br>عزيزي &nbsp;راشد عبدالله مراد على,<br><b>تم تحديث طلبك بالمواد الاتية<br><br>الاختيار الجديد<br></b><br><b>: اسم السيناريو</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المجموعة</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المادة</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الكيمياء - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>المسرح</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون الموسيقية</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون البصرية</td></tr></table><br><b>الاختيار القديم<br></b><br><b>: اسم السيناريو</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المجموعة</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المادة</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الكيمياء - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>المسرح</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون الموسيقية</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون البصرية</td></tr></table><br><br>شكرا) to (test@test.com)
20240806 12:00:21.837 006F =WRN= [Exception] 1901330445:6934 [1]-updatePromotedScenarioSelections: Exception zcare.zdek.ZException: Error sending emailCould not connect to SMTP host: smtp-mail.outlook.com, port: 587 is thrown
20240806 12:00:21.840 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdataserver.ZDataAccess.sqlBeginTrans : Ticket: administrator:1901330445
20240806 12:00:21.840 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:21.840 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0011 - Allocated=10, Used=1
20240806 12:00:21.840 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0011
20240806 12:00:21.884 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=1
20240806 12:00:21.884 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdataserver.ZDataAccess.sqlBeginTrans
20240806 12:00:21.885 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdataserver.ZDataAccess.sqlExecute : Ticket: administrator:1901330445
20240806 12:00:21.885 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.ZqlParser.parseScript : INSERT INTO zmedcommon.COMM_Message(Sender_Id, SenderName, SenderCode, MessageType, CreationDateTime, Importance, Subject, Status) VALUES (NULL, N'Notification', N'NOTIF', 0, '20240806 12:00:19.832', 0, N'Elective Application', 2) AS $_COMM_Message_514;INSERT INTO zmedcommon.COMM_MessageDelivery(Message_Id, DestinationUser_Id, ContactType, Status, StatusTimestamp, DeliverySource, MarkAsRead) VALUES ($_COMM_Message_514, 549824, 100, 1, '20240806 12:00:21.049', 'zmedcommon.COMM_Person:644869', 0) AS $_COMM_MessageDelivery_546;INSERT INTO zmedcommon.COMM_MessageDelivery(Message_Id, DestinationUser_Id, ContactType, DeliveryAddress, Status, StatusTimestamp, DeliverySource, MarkAsRead) VALUES ($_COMM_Message_514, 549824, 4, N'test@test.com', 1, '20240806 12:00:21.049', 'zmedcommon.COMM_Person:644869', 0) AS $_COMM_MessageDelivery_562;INSERT INTO zmedcommon.COMM_MessageDelivery(Message_Id, DestinationUser_Id, ContactType, DeliveryAddress, Status, StatusTimestamp, DeliverySource, MarkAsRead) VALUES ($_COMM_Message_514, 549824, 4, N'test@test.com', 1, '20240806 12:00:21.492', 'zmedcommon.COMM_Person:644869', 0) AS $_COMM_MessageDelivery_578;INSERT INTO zmedcommon.COMM_MessageContent(Message_Id, Blob_Id, ContentType, Rank) VALUES ($_COMM_Message_514, 1033371653, 1, 1) AS $_COMM_MessageContent_530;
20240806 12:00:21.885 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:21.886 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0011
20240806 12:00:21.886 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=2
20240806 12:00:21.886 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.allocateSequenceValues : PDB0011
20240806 12:00:21.886 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_COMM_MESSAGEDELIVERY, Need  3 
20240806 12:00:21.886 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330445 to 1901330451 and keep from 1901330451
20240806 12:00:21.886 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_COMM_MESSAGE, Need  1 
20240806 12:00:21.886 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330437 to 1901330439 and keep from 1901330439
20240806 12:00:21.886 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_COMM_MESSAGECONTENT, Need  1 
20240806 12:00:21.886 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330437 to 1901330439 and keep from 1901330439
20240806 12:00:21.886 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.allocateSequenceValues
20240806 12:00:21.887 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0011
20240806 12:00:21.887 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_Message (Sender_Id, SenderName, SenderCode, MessageType, CreationDateTime, Importance, Subject, Status, COMM_Message.Message_Id)VALUES (NULL, N'Notification', N'NOTIF', 0, '20240806 12:00:19.832', 0, N'Elective Application', 2, 1901330437)
20240806 12:00:21.887 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_MessageDelivery (Message_Id, DestinationUser_Id, ContactType, Status, StatusTimestamp, DeliverySource, MarkAsRead, COMM_MessageDelivery.MessageDelivery_Id)VALUES (1901330437, 549824, 100, 1, '20240806 12:00:21.049', 'zmedcommon.COMM_Person:644869', 0, 1901330445)
20240806 12:00:21.887 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_MessageDelivery (Message_Id, DestinationUser_Id, ContactType, DeliveryAddress, Status, StatusTimestamp, DeliverySource, MarkAsRead, COMM_MessageDelivery.MessageDelivery_Id)VALUES (1901330437, 549824, 4, N'test@test.com', 1, '20240806 12:00:21.049', 'zmedcommon.COMM_Person:644869', 0, 1901330447)
20240806 12:00:21.887 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_MessageDelivery (Message_Id, DestinationUser_Id, ContactType, DeliveryAddress, Status, StatusTimestamp, DeliverySource, MarkAsRead, COMM_MessageDelivery.MessageDelivery_Id)VALUES (1901330437, 549824, 4, N'test@test.com', 1, '20240806 12:00:21.492', 'zmedcommon.COMM_Person:644869', 0, 1901330449)
20240806 12:00:21.887 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_MessageContent (Message_Id, Blob_Id, ContentType, Rank, COMM_MessageContent.MessageContent_Id)VALUES (1901330437, 1033371653, 1, 1, 1901330437)
20240806 12:00:21.945 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 12:00:21.946 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0011
20240806 12:00:21.946 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=1
20240806 12:00:21.946 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdataserver.ZDataAccess.sqlExecute
20240806 12:00:21.948 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdataserver.ZDataAccess.sqlCommit : Ticket: administrator:1901330445
20240806 12:00:21.948 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.ZqlParser.parseScript : INSERT INTO zdeksystem.SYS_Notification(SenderSession_Id, SenderUser_Id, Subject) VALUES (1901330445, 1, 'SQL:zmedcommon.COMM_Message:I:1901330437');
20240806 12:00:21.948 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:21.948 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0011
20240806 12:00:21.948 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=2
20240806 12:00:21.948 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.allocateSequenceValues : PDB0011
20240806 12:00:21.948 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_SYS_NOTIFICATION, Need  1 
20240806 12:00:21.948 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330441 to 1901330443 and keep from 1901330443
20240806 12:00:21.949 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.allocateSequenceValues
20240806 12:00:21.949 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0011
20240806 12:00:21.949 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO SYS_Notification (SenderSession_Id, SenderUser_Id, Subject, SYS_Notification.Notification_Id)VALUES (1901330445, 1, 'SQL:zmedcommon.COMM_Message:I:1901330437', 1901330441)
20240806 12:00:21.982 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 12:00:21.982 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0011
20240806 12:00:21.982 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=1
20240806 12:00:21.982 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0011
20240806 12:00:22.166 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=0
20240806 12:00:22.166 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0011
20240806 12:00:22.167 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0011
20240806 12:00:22.167 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:22.167 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:22.167 006F =WRN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: zcare.zdataserver.ZDataAccess.sqlCommit took too much time: 220 ms
20240806 12:00:22.167 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdataserver.ZDataAccess.sqlCommit
20240806 12:00:22.168 006F =WRN= [Exception] 1901330445:6934 [1]-updatePromotedScenarioSelections: Exception zcare.zdek.ZException: Error sending emailCould not connect to SMTP host: smtp-mail.outlook.com, port: 587 , Error sending emailCould not connect to SMTP host: smtp-mail.outlook.com, port: 587 is thrown
20240806 12:00:22.169 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.dbag.DBag.load
20240806 12:00:22.169 006F =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zlmsadmin.ADM_StudentLink.StudentLink_Id, zlmsadmin.ADM_StudentLink.StudentLinkType, zlmsadmin.ADM_StudentLink.StudentLinkSubType, zlmsadmin.ADM_StudentLink.Student_Id, zlmsadmin.ADM_StudentLink.LinkPerson_Id, zlmsadmin.ADM_StudentLink.Position, zlmsadmin.ADM_StudentLink.IsMain, zlmsadmin.ADM_StudentLink.Note, zlmsadmin.ADM_StudentLink.UserStamp, zlmsadmin.ADM_StudentLink.TimeStamp,zmedcommon.COMM_Person.Person_Id, zmedcommon.COMM_Person.Civility, zmedcommon.COMM_Person.IDNumber, zmedcommon.COMM_Person.FirstName, zmedcommon.COMM_Person.SecondName, zmedcommon.COMM_Person.ThirdName, zmedcommon.COMM_Person.FourthName, zmedcommon.COMM_Person.FamilyName, zmedcommon.COMM_Person.EnglishFirstName, zmedcommon.COMM_Person.EnglishSecondName, zmedcommon.COMM_Person.EnglishThirdName, zmedcommon.COMM_Person.EnglishFourthName, zmedcommon.COMM_Person.EnglishFamilyName, zmedcommon.COMM_Person.BirthName, zmedcommon.COMM_Person.BirthDate, zmedcommon.COMM_Person.BirthCity, zmedcommon.COMM_Person.EnglishBirthCity, zmedcommon.COMM_Person.BirthCountry, zmedcommon.COMM_Person.Nationality, zmedcommon.COMM_Person.Gender, zmedcommon.COMM_Person.MaritalStatus, zmedcommon.COMM_Person.Photo_Id, zmedcommon.COMM_Person.Religion, zmedcommon.COMM_Person.ReligionSector, zmedcommon.COMM_Person.PhoneList_Id, zmedcommon.COMM_Person.AddressList_Id, zmedcommon.COMM_Person.OtherIdList_Id, zmedcommon.COMM_Person.IsDeleted, zmedcommon.COMM_Person.ExternalId, zmedcommon.COMM_Person.UserStamp, zmedcommon.COMM_Person.TimeStamp, zmedcommon.COMM_Person.User_Id, zmedcommon.COMM_Person.InformationSource, zmedcommon.COMM_Person.LastSyncTime, zmedcommon.COMM_Person.IsTemporary, zmedcommon.COMM_Person.VStartDate,zdeksystem.SYS_User.User_Id, zdeksystem.SYS_User.UserName, zdeksystem.SYS_User.UserPassword, zdeksystem.SYS_User.LastLoginDate, zdeksystem.SYS_User.LastFailedLoginDate, zdeksystem.SYS_User.PasswordDate, zdeksystem.SYS_User.PasswordExpired, zdeksystem.SYS_User.UserIsEnabled, zdeksystem.SYS_User.NumberOfFailedLogins, zdeksystem.SYS_User.AutoDeclared,zmedcommon.COMM_PhoneList.PhoneList_Id,zmedcommon.COMM_Phone.Phone_Id, zmedcommon.COMM_Phone.PhoneList_Id, zmedcommon.COMM_Phone.Name, zmedcommon.COMM_Phone.Value, zmedcommon.COMM_Phone.Note, zmedcommon.COMM_Phone.IsPrivate, zmedcommon.COMM_Phone.IsPrimary, zmedcommon.COMM_Phone.ContactType FROM zlmsadmin.ADM_StudentLink JOIN zmedcommon.COMM_Person! ON zlmsadmin.ADM_StudentLink.LinkPerson_Id = zmedcommon.COMM_Person.Person_Id LEFT OUTER JOIN zdeksystem.SYS_User ON zmedcommon.COMM_Person.User_Id = zdeksystem.SYS_User.User_Id LEFT OUTER JOIN zmedcommon.COMM_PhoneList ON zmedcommon.COMM_Person.PhoneList_Id = zmedcommon.COMM_PhoneList.PhoneList_Id LEFT OUTER JOIN zmedcommon.COMM_Phone ON zmedcommon.COMM_PhoneList.PhoneList_Id = zmedcommon.COMM_Phone.PhoneList_Id WHERE ((zlmsadmin.ADM_StudentLink.Student_Id = 644869) AND (zlmsadmin.ADM_StudentLink.IsMain = 1) AND ((zlmsadmin.ADM_StudentLink.StudentLinkSubType = 1) OR (zlmsadmin.ADM_StudentLink.StudentLinkSubType = 2)));
20240806 12:00:22.169 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: administrator:1901330445
20240806 12:00:22.169 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_StudentLink.StudentLink_Id, zlmsadmin.ADM_StudentLink.StudentLinkType, zlmsadmin.ADM_StudentLink.StudentLinkSubType, zlmsadmin.ADM_StudentLink.Student_Id, zlmsadmin.ADM_StudentLink.LinkPerson_Id, zlmsadmin.ADM_StudentLink.Position, zlmsadmin.ADM_StudentLink.IsMain, zlmsadmin.ADM_StudentLink.Note, zlmsadmin.ADM_StudentLink.UserStamp, zlmsadmin.ADM_StudentLink.TimeStamp,zmedcommon.COMM_Person.Person_Id, zmedcommon.COMM_Person.Civility, zmedcommon.COMM_Person.IDNumber, zmedcommon.COMM_Person.FirstName, zmedcommon.COMM_Person.SecondName, zmedcommon.COMM_Person.ThirdName, zmedcommon.COMM_Person.FourthName, zmedcommon.COMM_Person.FamilyName, zmedcommon.COMM_Person.EnglishFirstName, zmedcommon.COMM_Person.EnglishSecondName, zmedcommon.COMM_Person.EnglishThirdName, zmedcommon.COMM_Person.EnglishFourthName, zmedcommon.COMM_Person.EnglishFamilyName, zmedcommon.COMM_Person.BirthName, zmedcommon.COMM_Person.BirthDate, zmedcommon.COMM_Person.BirthCity, zmedcommon.COMM_Person.EnglishBirthCity, zmedcommon.COMM_Person.BirthCountry, zmedcommon.COMM_Person.Nationality, zmedcommon.COMM_Person.Gender, zmedcommon.COMM_Person.MaritalStatus, zmedcommon.COMM_Person.Photo_Id, zmedcommon.COMM_Person.Religion, zmedcommon.COMM_Person.ReligionSector, zmedcommon.COMM_Person.PhoneList_Id, zmedcommon.COMM_Person.AddressList_Id, zmedcommon.COMM_Person.OtherIdList_Id, zmedcommon.COMM_Person.IsDeleted, zmedcommon.COMM_Person.ExternalId, zmedcommon.COMM_Person.UserStamp, zmedcommon.COMM_Person.TimeStamp, zmedcommon.COMM_Person.User_Id, zmedcommon.COMM_Person.InformationSource, zmedcommon.COMM_Person.LastSyncTime, zmedcommon.COMM_Person.IsTemporary, zmedcommon.COMM_Person.VStartDate,zdeksystem.SYS_User.User_Id, zdeksystem.SYS_User.UserName, zdeksystem.SYS_User.UserPassword, zdeksystem.SYS_User.LastLoginDate, zdeksystem.SYS_User.LastFailedLoginDate, zdeksystem.SYS_User.PasswordDate, zdeksystem.SYS_User.PasswordExpired, zdeksystem.SYS_User.UserIsEnabled, zdeksystem.SYS_User.NumberOfFailedLogins, zdeksystem.SYS_User.AutoDeclared,zmedcommon.COMM_PhoneList.PhoneList_Id,zmedcommon.COMM_Phone.Phone_Id, zmedcommon.COMM_Phone.PhoneList_Id, zmedcommon.COMM_Phone.Name, zmedcommon.COMM_Phone.Value, zmedcommon.COMM_Phone.Note, zmedcommon.COMM_Phone.IsPrivate, zmedcommon.COMM_Phone.IsPrimary, zmedcommon.COMM_Phone.ContactType FROM zlmsadmin.ADM_StudentLink JOIN zmedcommon.COMM_Person! ON zlmsadmin.ADM_StudentLink.LinkPerson_Id = zmedcommon.COMM_Person.Person_Id LEFT OUTER JOIN zdeksystem.SYS_User ON zmedcommon.COMM_Person.User_Id = zdeksystem.SYS_User.User_Id LEFT OUTER JOIN zmedcommon.COMM_PhoneList ON zmedcommon.COMM_Person.PhoneList_Id = zmedcommon.COMM_PhoneList.PhoneList_Id LEFT OUTER JOIN zmedcommon.COMM_Phone ON zmedcommon.COMM_PhoneList.PhoneList_Id = zmedcommon.COMM_Phone.PhoneList_Id WHERE ((zlmsadmin.ADM_StudentLink.Student_Id = 644869) AND (zlmsadmin.ADM_StudentLink.IsMain = 1) AND ((zlmsadmin.ADM_StudentLink.StudentLinkSubType = 1) OR (zlmsadmin.ADM_StudentLink.StudentLinkSubType = 2)));
20240806 12:00:22.170 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:22.170 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:22.170 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0014 - Allocated=10, Used=1
20240806 12:00:22.171 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0014 - SELECT ADM_StudentLink.StudentLink_Id, ADM_StudentLink.StudentLinkType, ADM_StudentLink.StudentLinkSubType, ADM_StudentLink.Student_Id, ADM_StudentLink.LinkPerson_Id, ADM_StudentLink.Position, ADM_StudentLink.IsMain, ADM_StudentLink.Note, ADM_StudentLink.UserStamp, ADM_StudentLink.TimeStamp, COMM_Person.Person_Id, COMM_Person.Civility, COMM_Person.IDNumber, COMM_Person.FirstName, COMM_Person.SecondName, COMM_Person.ThirdName, COMM_Person.FourthName, COMM_Person.FamilyName, COMM_Person.EnglishFirstName, COMM_Person.EnglishSecondName, COMM_Person.EnglishThirdName, COMM_Person.EnglishFourthName, COMM_Person.EnglishFamilyName, COMM_Person.BirthName, COMM_Person.BirthDate, COMM_Person.BirthCity, COMM_Person.EnglishBirthCity, COMM_Person.BirthCountry, COMM_Person.Nationality, COMM_Person.Gender, COMM_Person.MaritalStatus, COMM_Person.Photo_Id, COMM_Person.Religion, COMM_Person.ReligionSector, COMM_Person.PhoneList_Id, COMM_Person.AddressList_Id, COMM_Person.OtherIdList_Id, COMM_Person.IsDeleted, COMM_Person.ExternalId, COMM_Person.UserStamp, COMM_Person.TimeStamp, COMM_Person.User_Id, COMM_Person.InformationSource, COMM_Person.LastSyncTime, COMM_Person.IsTemporary, COMM_Person.VStartDate, SYS_User.User_Id, SYS_User.UserName, SYS_User.UserPassword, SYS_User.LastLoginDate, SYS_User.LastFailedLoginDate, SYS_User.PasswordDate, SYS_User.PasswordExpired, SYS_User.UserIsEnabled, SYS_User.NumberOfFailedLogins, SYS_User.AutoDeclared, COMM_PhoneList.PhoneList_Id, COMM_Phone.Phone_Id, COMM_Phone.PhoneList_Id, COMM_Phone.Name, COMM_Phone.Value, COMM_Phone.Note, COMM_Phone.IsPrivate, COMM_Phone.IsPrimary, COMM_Phone.ContactType FROM ADM_StudentLink JOIN COMM_Person ON ((COMM_Person.IsDeleted = 0)) AND ((ADM_StudentLink.LinkPerson_Id = COMM_Person.Person_Id)) LEFT OUTER JOIN SYS_User ON (COMM_Person.User_Id = SYS_User.User_Id) LEFT OUTER JOIN COMM_PhoneList ON (COMM_Person.PhoneList_Id = COMM_PhoneList.PhoneList_Id) LEFT OUTER JOIN COMM_Phone ON (COMM_PhoneList.PhoneList_Id = COMM_Phone.PhoneList_Id) WHERE (((ADM_StudentLink.Student_Id = ?) AND (ADM_StudentLink.IsMain = ?)) AND ((ADM_StudentLink.StudentLinkSubType = ?) OR (ADM_StudentLink.StudentLinkSubType = ?)))
20240806 12:00:22.171 006F =FUN= [ZQL.PhysicalConnection] Parameters: 644869, 1, 1, 2
20240806 12:00:22.171 006F =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:22.418 006F =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:22.419 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:22.419 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0014
20240806 12:00:22.419 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 65 columns, 3 rows
20240806 12:00:22.419 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0014
20240806 12:00:22.420 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0014
20240806 12:00:22.420 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:22.420 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:22.420 006F =WRN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: zcare.zdataserver.ZDataAccess.sqlSelect took too much time: 251 ms
20240806 12:00:22.420 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 12:00:22.420 006F =API= [DATAPROXY] sqlSelect:Result: 0: C, 65 cols, 3 rows
20240806 12:00:22.421 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.dbag.DBag.load
20240806 12:00:22.565 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.dbag.DBag.load
20240806 12:00:22.565 006F =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.CourseDefCodes, zlmsadmin.ADM_EduScenarioOptionalGrp.NumberOfPeriods, zlmsadmin.ADM_EduScenarioOptionalGrp.type,zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id, zlmsadmin.ADM_OptionalCourseGroup.Name, zlmsadmin.ADM_OptionalCourseGroup.MinimumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.MaximumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.IsSelectedByStudent FROM zlmsadmin.ADM_EduScenario JOIN zlmsadmin.ADM_EduScenarioOptionalGrp ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id JOIN zlmsadmin.ADM_OptionalCourseGroup ON zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id WHERE (zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198871);
20240806 12:00:22.565 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: administrator:1901330445
20240806 12:00:22.565 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.CourseDefCodes, zlmsadmin.ADM_EduScenarioOptionalGrp.NumberOfPeriods, zlmsadmin.ADM_EduScenarioOptionalGrp.type,zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id, zlmsadmin.ADM_OptionalCourseGroup.Name, zlmsadmin.ADM_OptionalCourseGroup.MinimumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.MaximumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.IsSelectedByStudent FROM zlmsadmin.ADM_EduScenario JOIN zlmsadmin.ADM_EduScenarioOptionalGrp ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id JOIN zlmsadmin.ADM_OptionalCourseGroup ON zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id WHERE (zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198871);
20240806 12:00:22.565 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:22.565 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:22.565 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0012 - Allocated=10, Used=1
20240806 12:00:22.565 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0012 - SELECT ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, ADM_EduScenarioOptionalGrp.EduScenario_Id, ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, ADM_EduScenarioOptionalGrp.CourseDefCodes, ADM_EduScenarioOptionalGrp.NumberOfPeriods, ADM_EduScenarioOptionalGrp.type, ADM_OptionalCourseGroup.OptionalCourseGroup_Id, ADM_OptionalCourseGroup.Name, ADM_OptionalCourseGroup.MinimumSelectedCourse, ADM_OptionalCourseGroup.MaximumSelectedCourse, ADM_OptionalCourseGroup.IsSelectedByStudent FROM ADM_EduScenario JOIN ADM_EduScenarioOptionalGrp ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioOptionalGrp.EduScenario_Id) JOIN ADM_OptionalCourseGroup ON (ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = ADM_OptionalCourseGroup.OptionalCourseGroup_Id) WHERE (ADM_EduScenario.EduScenario_Id = ?)
20240806 12:00:22.565 006F =FUN= [ZQL.PhysicalConnection] Parameters: 622198871
20240806 12:00:22.565 006F =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:22.792 006F =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:22.793 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:22.793 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0012
20240806 12:00:22.793 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 19 columns, 2 rows
20240806 12:00:22.793 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0012
20240806 12:00:22.793 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0012
20240806 12:00:22.794 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:22.794 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:22.794 006F =WRN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: zcare.zdataserver.ZDataAccess.sqlSelect took too much time: 229 ms
20240806 12:00:22.794 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 12:00:22.794 006F =API= [DATAPROXY] sqlSelect:Result: 0: C, 19 cols, 2 rows
20240806 12:00:22.794 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.dbag.DBag.load
20240806 12:00:22.795 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.dbag.DBag.load
20240806 12:00:22.795 006F =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zlmsadmin.ADM_CourseDef.CourseDef_Id, zlmsadmin.ADM_CourseDef.EducationPathDef_Id, zlmsadmin.ADM_CourseDef.SessionDef_Id, zlmsadmin.ADM_CourseDef.TeachingSubject, zlmsadmin.ADM_CourseDef.TeachingLanguage, zlmsadmin.ADM_CourseDef.Title, zlmsadmin.ADM_CourseDef.NumberOfPeriods, zlmsadmin.ADM_CourseDef.NumberOfPeriodsPerWeek, zlmsadmin.ADM_CourseDef.PeriodDuration, zlmsadmin.ADM_CourseDef.PeriodDurationUnit, zlmsadmin.ADM_CourseDef.SlotColor, zlmsadmin.ADM_CourseDef.StudentGender, zlmsadmin.ADM_CourseDef.IsAcademic, zlmsadmin.ADM_CourseDef.Code, zlmsadmin.ADM_CourseDef.Position, zlmsadmin.ADM_CourseDef.CourseWeight, zlmsadmin.ADM_CourseDef.PassScore, zlmsadmin.ADM_CourseDef.OtherTitle, zlmsadmin.ADM_CourseDef.isTermBasedCourse, zlmsadmin.ADM_CourseDef.Department, zlmsadmin.ADM_CourseDef.UserStamp, zlmsadmin.ADM_CourseDef.TimeStamp FROM zlmsadmin.ADM_CourseDef WHERE (zlmsadmin.ADM_CourseDef.CourseDef_Id IN(1199703617, 1199703621, 1199703629, 1199702491, 1199702495, 1199702493, 1199703595, 1199703083, 1199702507, 1199702505, 1199703081, 1199703599, 1199703087, 1199702511, 1199703597, 1199702509, 1199703085, 1199702515, 1199702513, 1199703089, 1199703607, 1199702519, 1199703611, 1199703099, 1199703609, 1199703615, 1199702527, 1199703613));
20240806 12:00:22.795 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: administrator:1901330445
20240806 12:00:22.795 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_CourseDef.CourseDef_Id, zlmsadmin.ADM_CourseDef.EducationPathDef_Id, zlmsadmin.ADM_CourseDef.SessionDef_Id, zlmsadmin.ADM_CourseDef.TeachingSubject, zlmsadmin.ADM_CourseDef.TeachingLanguage, zlmsadmin.ADM_CourseDef.Title, zlmsadmin.ADM_CourseDef.NumberOfPeriods, zlmsadmin.ADM_CourseDef.NumberOfPeriodsPerWeek, zlmsadmin.ADM_CourseDef.PeriodDuration, zlmsadmin.ADM_CourseDef.PeriodDurationUnit, zlmsadmin.ADM_CourseDef.SlotColor, zlmsadmin.ADM_CourseDef.StudentGender, zlmsadmin.ADM_CourseDef.IsAcademic, zlmsadmin.ADM_CourseDef.Code, zlmsadmin.ADM_CourseDef.Position, zlmsadmin.ADM_CourseDef.CourseWeight, zlmsadmin.ADM_CourseDef.PassScore, zlmsadmin.ADM_CourseDef.OtherTitle, zlmsadmin.ADM_CourseDef.isTermBasedCourse, zlmsadmin.ADM_CourseDef.Department, zlmsadmin.ADM_CourseDef.UserStamp, zlmsadmin.ADM_CourseDef.TimeStamp FROM zlmsadmin.ADM_CourseDef WHERE (zlmsadmin.ADM_CourseDef.CourseDef_Id IN(1199703617, 1199703621, 1199703629, 1199702491, 1199702495, 1199702493, 1199703595, 1199703083, 1199702507, 1199702505, 1199703081, 1199703599, 1199703087, 1199702511, 1199703597, 1199702509, 1199703085, 1199702515, 1199702513, 1199703089, 1199703607, 1199702519, 1199703611, 1199703099, 1199703609, 1199703615, 1199702527, 1199703613));
20240806 12:00:22.795 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:22.796 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:22.796 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0013 - Allocated=10, Used=1
20240806 12:00:22.796 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0013 - SELECT ADM_CourseDef.CourseDef_Id, ADM_CourseDef.EducationPathDef_Id, ADM_CourseDef.SessionDef_Id, ADM_CourseDef.TeachingSubject, ADM_CourseDef.TeachingLanguage, ADM_CourseDef.Title, ADM_CourseDef.NumberOfPeriods, ADM_CourseDef.NumberOfPeriodsPerWeek, ADM_CourseDef.PeriodDuration, ADM_CourseDef.PeriodDurationUnit, ADM_CourseDef.SlotColor, ADM_CourseDef.StudentGender, ADM_CourseDef.IsAcademic, ADM_CourseDef.Code, ADM_CourseDef.Position, ADM_CourseDef.CourseWeight, ADM_CourseDef.PassScore, ADM_CourseDef.OtherTitle, ADM_CourseDef.isTermBasedCourse, ADM_CourseDef.Department, ADM_CourseDef.UserStamp, ADM_CourseDef.TimeStamp FROM ADM_CourseDef WHERE (ADM_CourseDef.CourseDef_Id IN(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?))
20240806 12:00:22.797 006F =FUN= [ZQL.PhysicalConnection] Parameters: 1199703617, 1199703621, 1199703629, 1199702491, 1199702495, 1199702493, 1199703595, 1199703083, 1199702507, 1199702505, 1199703081, 1199703599, 1199703087, 1199702511, 1199703597, 1199702509, 1199703085, 1199702515, 1199702513, 1199703089, 1199703607, 1199702519, 1199703611, 1199703099, 1199703609, 1199703615, 1199702527, 1199703613
20240806 12:00:22.797 006F =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:22.866 006F =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:22.866 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:22.867 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0013
20240806 12:00:22.867 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 22 columns, 28 rows
20240806 12:00:22.867 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0013
20240806 12:00:22.867 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0013
20240806 12:00:22.867 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:22.867 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:22.867 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 12:00:22.867 006F =API= [DATAPROXY] sqlSelect:Result: 0: C, 22 cols, 28 rows
20240806 12:00:22.870 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.dbag.DBag.load
20240806 12:00:22.870 006F =API= [DATAPROXY] DSCall: -> Call blobCreate
20240806 12:00:23.105 006F =API= [DATAPROXY] DSCall: <- Call blobCreate
20240806 12:00:23.105 006F =API= [DATAPROXY] DSCall: -> Call blobPutNextPart
20240806 12:00:23.502 006F =API= [DATAPROXY] DSCall: <- Call blobPutNextPart
20240806 12:00:23.502 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdek.dbag.DBag.load
20240806 12:00:23.502 006F =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zmedcommon.COMM_MessageDelivery.MessageDelivery_Id, zmedcommon.COMM_MessageDelivery.Message_Id, zmedcommon.COMM_MessageDelivery.DestinationUser_Id, zmedcommon.COMM_MessageDelivery.ContactType, zmedcommon.COMM_MessageDelivery.DeliveryAddress, zmedcommon.COMM_MessageDelivery.Status, zmedcommon.COMM_MessageDelivery.StatusTimestamp, zmedcommon.COMM_MessageDelivery.DeliverySource, zmedcommon.COMM_MessageDelivery.MarkAsRead FROM zmedcommon.COMM_MessageDelivery WHERE ((zmedcommon.COMM_MessageDelivery.Message_Id = -594) AND (zmedcommon.COMM_MessageDelivery.DestinationUser_Id = 1441556));
20240806 12:00:23.503 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: administrator:1901330445
20240806 12:00:23.503 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zmedcommon.COMM_MessageDelivery.MessageDelivery_Id, zmedcommon.COMM_MessageDelivery.Message_Id, zmedcommon.COMM_MessageDelivery.DestinationUser_Id, zmedcommon.COMM_MessageDelivery.ContactType, zmedcommon.COMM_MessageDelivery.DeliveryAddress, zmedcommon.COMM_MessageDelivery.Status, zmedcommon.COMM_MessageDelivery.StatusTimestamp, zmedcommon.COMM_MessageDelivery.DeliverySource, zmedcommon.COMM_MessageDelivery.MarkAsRead FROM zmedcommon.COMM_MessageDelivery WHERE ((zmedcommon.COMM_MessageDelivery.Message_Id = -594) AND (zmedcommon.COMM_MessageDelivery.DestinationUser_Id = 1441556));
20240806 12:00:23.503 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:23.504 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:23.504 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0009 - Allocated=10, Used=1
20240806 12:00:23.504 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0009 - SELECT COMM_MessageDelivery.MessageDelivery_Id, COMM_MessageDelivery.Message_Id, COMM_MessageDelivery.DestinationUser_Id, COMM_MessageDelivery.ContactType, COMM_MessageDelivery.DeliveryAddress, COMM_MessageDelivery.Status, COMM_MessageDelivery.StatusTimestamp, COMM_MessageDelivery.DeliverySource, COMM_MessageDelivery.MarkAsRead FROM COMM_MessageDelivery WHERE ((COMM_MessageDelivery.Message_Id = ?) AND (COMM_MessageDelivery.DestinationUser_Id = ?))
20240806 12:00:23.504 006F =FUN= [ZQL.PhysicalConnection] Parameters: -594, 1441556
20240806 12:00:23.504 006F =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:23.598 006F =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:23.599 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:23.599 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0009
20240806 12:00:23.599 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 9 columns, 0 rows
20240806 12:00:23.599 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0009
20240806 12:00:23.599 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0009
20240806 12:00:23.599 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:23.599 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:23.600 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 12:00:23.600 006F =API= [DATAPROXY] sqlSelect:Result: 0: C, 9 cols, 0 rows
20240806 12:00:23.600 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdek.dbag.DBag.load
20240806 12:00:23.600 006F =INF= [EmailMessageHandler_Logger] EmailMessageHandler.EmailMessageHandler: Send Email (Dear  &nbsp;ABDALLAH MURAD ALI YOUSSEF,<br>this is to inform you, that student &nbsp;RASHED ABDALLAH MURAD ALI<br><b>'s elective application with the following details has been modified and approved by the school, as following<br><br>new selection is <br></b><br><b>Scenario Name :</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Group Name</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Name</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Chemistry - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Drama</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Music Arts</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Visual Arts</td></tr></table><br><b>old selection was<br></b><br><b>Scenario Name :</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Group Name</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Name</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Chemistry - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Drama</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Music Arts</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Visual Arts</td></tr></table><br><br>Thanks <hr> <br>عزيزي &nbsp;عبدالله مراد على يوسف,<br>هذا لإبلاغك ان الطالب&nbsp;راشد عبدالله مراد على<br><b>تم تعديل طلبك وقبوله بالمواد الاتية<br><br>الاختيار الجديد<br></b><br><b>: اسم السيناريو</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المجموعة</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المادة</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الكيمياء - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>المسرح</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون الموسيقية</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون البصرية</td></tr></table><br><b>الاختيار القديم<br></b><br><b>: اسم السيناريو</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المجموعة</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المادة</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الكيمياء - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>المسرح</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون الموسيقية</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون البصرية</td></tr></table><br><br>شكرا) to (test@test.com)
20240806 12:00:23.717 006F =WRN= [Exception] 1901330445:6934 [1]-updatePromotedScenarioSelections: Exception zcare.zdek.ZException: Error sending emailCould not connect to SMTP host: smtp-mail.outlook.com, port: 587 is thrown
20240806 12:00:23.718 006F =INF= [EmailMessageHandler_Logger] EmailMessageHandler.EmailMessageHandler: Send Email (Dear  &nbsp;ABDALLAH MURAD ALI YOUSSEF,<br>this is to inform you, that student &nbsp;RASHED ABDALLAH MURAD ALI<br><b>'s elective application with the following details has been modified and approved by the school, as following<br><br>new selection is <br></b><br><b>Scenario Name :</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Group Name</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Name</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Chemistry - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Drama</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Music Arts</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Visual Arts</td></tr></table><br><b>old selection was<br></b><br><b>Scenario Name :</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Group Name</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>Course Name</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Chemistry - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Scientific Courses "Optional Group 1"</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Drama</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Music Arts</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Optional Group 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Visual Arts</td></tr></table><br><br>Thanks <hr> <br>عزيزي &nbsp;عبدالله مراد على يوسف,<br>هذا لإبلاغك ان الطالب&nbsp;راشد عبدالله مراد على<br><b>تم تعديل طلبك وقبوله بالمواد الاتية<br><br>الاختيار الجديد<br></b><br><b>: اسم السيناريو</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المجموعة</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المادة</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الكيمياء - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>المسرح</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون الموسيقية</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون البصرية</td></tr></table><br><b>الاختيار القديم<br></b><br><b>: اسم السيناريو</b>&nbsp;test_promo33<br><table style='border:1px solid gray;border-collapse: collapse; width:100%;'><tr><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المجموعة</b></th><th style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'><b>اسم المادة</b></th></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الكيمياء - GEN.CHM.C.101</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 1 (المواد العلمية)</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>Biology - GEN.BIO.M.101-B</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>المسرح</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون الموسيقية</td></tr><tr><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>مجموعة المواد الاختيارية 2</td><td style='border:1px solid gray;border-collapse: collapse; text-align:center; padding-left: 20px; padding-right: 20px; width:20%;'>الفنون البصرية</td></tr></table><br><br>شكرا) to (test@test.com)
20240806 12:00:23.940 006F =WRN= [Exception] 1901330445:6934 [1]-updatePromotedScenarioSelections: Exception zcare.zdek.ZException: Error sending emailCould not connect to SMTP host: smtp-mail.outlook.com, port: 587 is thrown
20240806 12:00:23.943 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdataserver.ZDataAccess.sqlBeginTrans : Ticket: administrator:1901330445
20240806 12:00:23.943 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:23.943 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0002 - Allocated=10, Used=1
20240806 12:00:23.944 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0002
20240806 12:00:24.004 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=1
20240806 12:00:24.004 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdataserver.ZDataAccess.sqlBeginTrans
20240806 12:00:24.006 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdataserver.ZDataAccess.sqlExecute : Ticket: administrator:1901330445
20240806 12:00:24.007 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.ZqlParser.parseScript : INSERT INTO zmedcommon.COMM_Message(Sender_Id, SenderName, SenderCode, MessageType, CreationDateTime, Importance, Subject, Status) VALUES (NULL, N'Notification', N'NOTIF', 0, '20240806 12:00:22.421', 0, N'Elective Application', 2) AS $_COMM_Message_594;INSERT INTO zmedcommon.COMM_MessageDelivery(Message_Id, DestinationUser_Id, ContactType, Status, StatusTimestamp, DeliverySource, MarkAsRead) VALUES ($_COMM_Message_594, 1441556, 100, 1, '20240806 12:00:23.600', 'zmedcommon.COMM_Person:3505092', 0) AS $_COMM_MessageDelivery_626;INSERT INTO zmedcommon.COMM_MessageDelivery(Message_Id, DestinationUser_Id, ContactType, DeliveryAddress, Status, StatusTimestamp, DeliverySource, MarkAsRead) VALUES ($_COMM_Message_594, 1441556, 4, N'test@test.com', 1, '20240806 12:00:23.600', 'zmedcommon.COMM_Person:3505092', 0) AS $_COMM_MessageDelivery_642;INSERT INTO zmedcommon.COMM_MessageDelivery(Message_Id, DestinationUser_Id, ContactType, DeliveryAddress, Status, StatusTimestamp, DeliverySource, MarkAsRead) VALUES ($_COMM_Message_594, 1441556, 4, N'test@test.com', 1, '20240806 12:00:23.718', 'zmedcommon.COMM_Person:3505092', 0) AS $_COMM_MessageDelivery_658;INSERT INTO zmedcommon.COMM_MessageContent(Message_Id, Blob_Id, ContentType, Rank) VALUES ($_COMM_Message_594, 1033371655, 1, 1) AS $_COMM_MessageContent_610;
20240806 12:00:24.008 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:24.008 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0002
20240806 12:00:24.008 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=2
20240806 12:00:24.009 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.allocateSequenceValues : PDB0002
20240806 12:00:24.009 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_COMM_MESSAGEDELIVERY, Need  3 
20240806 12:00:24.009 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330451 to 1901330457 and keep from 1901330457
20240806 12:00:24.009 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_COMM_MESSAGE, Need  1 
20240806 12:00:24.009 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330439 to 1901330441 and keep from 1901330441
20240806 12:00:24.009 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_COMM_MESSAGECONTENT, Need  1 
20240806 12:00:24.009 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330439 to 1901330441 and keep from 1901330441
20240806 12:00:24.009 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.allocateSequenceValues
20240806 12:00:24.010 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0002
20240806 12:00:24.010 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_Message (Sender_Id, SenderName, SenderCode, MessageType, CreationDateTime, Importance, Subject, Status, COMM_Message.Message_Id)VALUES (NULL, N'Notification', N'NOTIF', 0, '20240806 12:00:22.421', 0, N'Elective Application', 2, 1901330439)
20240806 12:00:24.011 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_MessageDelivery (Message_Id, DestinationUser_Id, ContactType, Status, StatusTimestamp, DeliverySource, MarkAsRead, COMM_MessageDelivery.MessageDelivery_Id)VALUES (1901330439, 1441556, 100, 1, '20240806 12:00:23.600', 'zmedcommon.COMM_Person:3505092', 0, 1901330451)
20240806 12:00:24.012 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_MessageDelivery (Message_Id, DestinationUser_Id, ContactType, DeliveryAddress, Status, StatusTimestamp, DeliverySource, MarkAsRead, COMM_MessageDelivery.MessageDelivery_Id)VALUES (1901330439, 1441556, 4, N'test@test.com', 1, '20240806 12:00:23.600', 'zmedcommon.COMM_Person:3505092', 0, 1901330453)
20240806 12:00:24.012 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_MessageDelivery (Message_Id, DestinationUser_Id, ContactType, DeliveryAddress, Status, StatusTimestamp, DeliverySource, MarkAsRead, COMM_MessageDelivery.MessageDelivery_Id)VALUES (1901330439, 1441556, 4, N'test@test.com', 1, '20240806 12:00:23.718', 'zmedcommon.COMM_Person:3505092', 0, 1901330455)
20240806 12:00:24.012 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO COMM_MessageContent (Message_Id, Blob_Id, ContentType, Rank, COMM_MessageContent.MessageContent_Id)VALUES (1901330439, 1033371655, 1, 1, 1901330439)
20240806 12:00:24.125 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 12:00:24.125 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0002
20240806 12:00:24.125 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=1
20240806 12:00:24.125 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdataserver.ZDataAccess.sqlExecute
20240806 12:00:24.125 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 -> zcare.zdataserver.ZDataAccess.sqlCommit : Ticket: administrator:1901330445
20240806 12:00:24.126 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.ZqlParser.parseScript : INSERT INTO zdeksystem.SYS_Notification(SenderSession_Id, SenderUser_Id, Subject) VALUES (1901330445, 1, 'SQL:zmedcommon.COMM_Message:I:1901330439');
20240806 12:00:24.126 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:24.126 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0002
20240806 12:00:24.126 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=2
20240806 12:00:24.126 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.allocateSequenceValues : PDB0002
20240806 12:00:24.126 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: Sequence $TBL_SYS_NOTIFICATION, Need  1 
20240806 12:00:24.127 006F =DBG= [ZQL.PhysicalConnection] getNextSequenceValueFromMemory: In range 1901461505, take from 1901330443 to 1901330445 and keep from 1901330445
20240806 12:00:24.127 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.allocateSequenceValues
20240806 12:00:24.127 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0002
20240806 12:00:24.127 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections:         zcare.zdek.zql.PhysicalConnection.execute: => INSERT INTO SYS_Notification (SenderSession_Id, SenderUser_Id, Subject, SYS_Notification.Notification_Id)VALUES (1901330445, 1, 'SQL:zmedcommon.COMM_Message:I:1901330439', 1901330443)
20240806 12:00:24.184 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 12:00:24.184 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0002
20240806 12:00:24.185 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=1
20240806 12:00:24.185 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0002
20240806 12:00:24.228 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=0
20240806 12:00:24.228 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0002
20240806 12:00:24.228 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0002
20240806 12:00:24.228 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:24.229 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:24.229 006F =API= [FunctionCheck] 1901330445:6934 [1]-updatePromotedScenarioSelections: 3 <- zcare.zdataserver.ZDataAccess.sqlCommit
20240806 12:00:24.229 006F =WRN= [Exception] 1901330445:6934 [1]-updatePromotedScenarioSelections: Exception zcare.zdek.ZException: Error sending emailCould not connect to SMTP host: smtp-mail.outlook.com, port: 587 , Error sending emailCould not connect to SMTP host: smtp-mail.outlook.com, port: 587 is thrown
20240806 12:00:24.231 006F =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 12:00:24.231 006F =API= [CallClient] null: <= DBAG_UPDATE EduScenarioStudentsDetail0
20240806 12:00:24.234 006F =WRN= [CallClient] null: The output dbag is too big: DBAG_UPDATE:EduScenarioStudentsDetail0 = 3363428
20240806 12:00:24.234 006F =FUN= [CallFromClient] 1901330445:6934: InputMessage size 10655
20240806 12:00:24.234 006F =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 3363500
20240806 12:00:24.234 006F =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 12:00:24.297 0098 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:24.298 0098 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0008 - Allocated=10, Used=1
20240806 12:00:24.319 0098 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0008
20240806 12:00:24.319 0098 =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0008
20240806 12:00:24.319 0098 =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:24.319 0098 =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:24.750 008E =INF= [ZqlServer] : doServerHeartbeatInDb: 170047
20240806 12:00:24.750 008E =DBG= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zdeksystem.SYS_Server.Server_Id FROM zdeksystem.SYS_Server WHERE (zdeksystem.SYS_Server.Server_Id = 170047);
20240806 12:00:24.750 008E =DBG= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:24.750 008E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:24.750 008E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0007 - Allocated=10, Used=1
20240806 12:00:24.750 008E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0007 - SELECT SYS_Server.Server_Id FROM SYS_Server WHERE (SYS_Server.Server_Id = ?)
20240806 12:00:24.750 008E =FUN= [ZQL.PhysicalConnection] Parameters: 170047
20240806 12:00:24.750 008E =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:24.803 008E =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:24.803 008E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:24.803 008E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0007
20240806 12:00:24.803 008E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.endQuery : 1 columns, 1 rows
20240806 12:00:24.803 008E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0007
20240806 12:00:24.803 008E =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0007
20240806 12:00:24.803 008E =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:24.803 008E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:24.803 008E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:24.803 008E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0003 - Allocated=10, Used=1
20240806 12:00:24.803 008E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0003
20240806 12:00:24.845 008E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=1
20240806 12:00:24.846 008E =DBG= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.ZqlParser.parseScript : UPDATE zdeksystem.SYS_Server SET LastCallTime = '20240806 11:58:52.883' WHERE Server_Id = 170047;
20240806 12:00:24.846 008E =DBG= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:24.846 008E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0003
20240806 12:00:24.846 008E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=2
20240806 12:00:24.846 008E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0003
20240806 12:00:24.846 008E =FUN= [FunctionCheck] <App. context>:         zcare.zdek.zql.PhysicalConnection.execute: =>  UPDATE SYS_Server SET LastCallTime = '20240806 11:58:52.883' WHERE (Server_Id = 170047)
20240806 12:00:24.882 008E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 12:00:24.883 008E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0003
20240806 12:00:24.883 008E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=1
20240806 12:00:24.883 008E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0003
20240806 12:00:25.164 008E =WRN= [FunctionCheck] <App. context>: zcare.zdek.zql.PhysicalConnection.commitTrans took too much time: 280 ms
20240806 12:00:25.164 008E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=0
20240806 12:00:25.164 008E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0003
20240806 12:00:25.164 008E =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0003
20240806 12:00:25.164 008E =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:25.164 008E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:25.164 008E =INF= [ZqlServer] null: cleanupServersInDB
20240806 12:00:25.164 008E =API= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.DBLock$Type.createLock
20240806 12:00:25.164 008E =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:25.164 008E =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0010 - Allocated=10, Used=1
20240806 12:00:25.164 008E =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0010
20240806 12:00:25.257 008E =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=1
20240806 12:00:25.257 008E =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.ZqlParser.parseScript : UPDATE zdeksystem.SYS_NamedLock SET Message = 'Sequence cleanup performed by another server', ExpireAt = '20240806 11:59:53.297', Session_Id = 1901330433 WHERE ((zdeksystem.SYS_NamedLock.LockName = 'SequenceCleanup:SEQUENCE_CLEANUP') AND (zdeksystem.SYS_NamedLock.NamedLockType_ID = 20012) AND (zdeksystem.SYS_NamedLock.ExpireAt < '20240806 11:58:53.297'));
20240806 12:00:25.258 008E =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:25.258 008E =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0010
20240806 12:00:25.258 008E =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=2
20240806 12:00:25.258 008E =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0010
20240806 12:00:25.258 008E =FUN= [FunctionCheck] <App. context>:         zcare.zdek.zql.PhysicalConnection.execute: =>  UPDATE SYS_NamedLock SET Message = 'Sequence cleanup performed by another server', ExpireAt = '20240806 11:59:53.297', Session_Id = 1901330433 WHERE (((SYS_NamedLock.LockName = 'SequenceCleanup:SEQUENCE_CLEANUP') AND (SYS_NamedLock.NamedLockType_ID = 20012)) AND (SYS_NamedLock.ExpireAt < '20240806 11:58:53.297'))
20240806 12:00:25.277 008E =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 12:00:25.277 008E =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0010
20240806 12:00:25.277 008E =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=1
20240806 12:00:25.277 008E =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0010
20240806 12:00:25.359 008E =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=0
20240806 12:00:25.359 008E =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0010
20240806 12:00:25.359 008E =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0010
20240806 12:00:25.360 008E =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:25.360 008E =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:25.360 008E =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zdeksystem.SYS_NamedLock.Session_Id, zdeksystem.SYS_NamedLock.ExpireAt, zdeksystem.SYS_NamedLock.NamedLock_ID, zdeksystem.SYS_NamedLock.Message FROM zdeksystem.SYS_NamedLock WHERE ((zdeksystem.SYS_NamedLock.LockName = 'SequenceCleanup:SEQUENCE_CLEANUP') AND (zdeksystem.SYS_NamedLock.NamedLockType_ID = 20012));
20240806 12:00:25.360 008E =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:25.360 008E =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:25.360 008E =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0011 - Allocated=10, Used=1
20240806 12:00:25.360 008E =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0011 - SELECT SYS_NamedLock.Session_Id, SYS_NamedLock.ExpireAt, SYS_NamedLock.NamedLock_ID, SYS_NamedLock.Message FROM SYS_NamedLock WHERE ((SYS_NamedLock.LockName = ?) AND (SYS_NamedLock.NamedLockType_ID = ?))
20240806 12:00:25.360 008E =FUN= [ZQL.PhysicalConnection] Parameters: 'SequenceCleanup:SEQUENCE_CLEANUP', 20012
20240806 12:00:25.360 008E =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:25.414 008E =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:25.414 008E =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:25.414 008E =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0011
20240806 12:00:25.414 008E =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.endQuery : 4 columns, 1 rows
20240806 12:00:25.414 008E =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0011
20240806 12:00:25.414 008E =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0011
20240806 12:00:25.414 008E =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:25.414 008E =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:25.414 008E =WRN= [FunctionCheck] <App. context>: zcare.zdek.zql.DBLock$Type.createLock took too much time: 250 ms
20240806 12:00:25.414 008E =API= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.DBLock$Type.createLock
20240806 12:00:25.415 008E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:25.415 008E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0014 - Allocated=10, Used=1
20240806 12:00:25.415 008E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.executeWithParameters : PDB0014 - DELETE FROM SYS_Server WHERE LastCallTime < ?
20240806 12:00:25.415 008E =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:56:53.297'
20240806 12:00:25.460 008E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.executeWithParameters
20240806 12:00:25.461 008E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0014
20240806 12:00:25.461 008E =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0014
20240806 12:00:25.461 008E =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:25.461 008E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:25.461 008E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:25.461 008E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0012 - Allocated=10, Used=1
20240806 12:00:25.461 008E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0012
20240806 12:00:25.518 008E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=1
20240806 12:00:25.518 008E =DBG= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.ZqlParser.parseScript : UPDATE zdeksystem.SYS_NamedLock SET ExpireAt = '20240806 11:00:25.461' WHERE NamedLock_ID = 1922301973;
20240806 12:00:25.518 008E =DBG= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:25.518 008E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.beginTrans : PDB0012
20240806 12:00:25.518 008E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.beginTrans : depth=2
20240806 12:00:25.518 008E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.execute : PDB0012
20240806 12:00:25.518 008E =FUN= [FunctionCheck] <App. context>:         zcare.zdek.zql.PhysicalConnection.execute: =>  UPDATE SYS_NamedLock SET ExpireAt = '20240806 11:00:25.461', SYS_NamedLock.UserStamp = 2, SYS_NamedLock.TimeStamp = '20240806 12:00:25.518' WHERE (NamedLock_ID = 1922301973)
20240806 12:00:25.567 008E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.execute
20240806 12:00:25.567 008E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0012
20240806 12:00:25.567 008E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=1
20240806 12:00:25.567 008E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnection.commitTrans : PDB0012
20240806 12:00:25.589 006E =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=42)
20240806 12:00:25.590 006E =API= [CallFromClient] null: => DBAG_COPY DIALOG_MANAGER_DATA
20240806 12:00:25.590 006E =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:CONTEXT_CHANGES
20240806 12:00:25.590 006E =FUN= [CallFromClient] null: Parameter FROM_CTX=D_EduScenarioStudentsDetail0
20240806 12:00:25.590 006E =FUN= [CallFromClient] null: Parameter DATA_SET=EduScenarioStudentsDetail0
20240806 12:00:25.590 006E =FUN= [CallFromClient] null: Parameter HANDLER_NAME=EDU_SCENARIO_STUDENTS_DETAIL
20240806 12:00:25.590 006E =FUN= [CallFromClient] null: Parameter P1=-2466|3|1|EDU_SCENARIO_ID|622198871
20240806 12:00:25.590 006E =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 12:00:25.590 006E =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 12:00:25.590 006E =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 12:00:25.590 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 -> zcare.zlms.educationalscenario.enrollment.dataset.ElectiveScenarioStudentListDetailDataSet$Handler.handleContextChange
20240806 12:00:25.593 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.dbag.DBag.load
20240806 12:00:25.593 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id, zlmsadmin.ADM_ScenarioSelection.EduScenario_Id, zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id, zlmsadmin.ADM_ScenarioSelection.Enrollment_Id, zlmsadmin.ADM_ScenarioSelection.SelectionStatus, zlmsadmin.ADM_ScenarioSelection.JoiningDate, zlmsadmin.ADM_ScenarioSelection.ExitDate, zlmsadmin.ADM_ScenarioSelection.UserStamp, zlmsadmin.ADM_ScenarioSelection.TimeStamp, zlmsadmin.ADM_ScenarioSelection.NoteHistory_Id,zlmsadmin.ADM_SelectionDetails.SelectionDetails_Id, zlmsadmin.ADM_SelectionDetails.ScenarioSelection_Id, zlmsadmin.ADM_SelectionDetails.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_SelectionDetails.CourseDefCode, zlmsadmin.ADM_SelectionDetails.NumberOfPeriods, zlmsadmin.ADM_SelectionDetails.UserStamp, zlmsadmin.ADM_SelectionDetails.TimeStamp,zlmsadmin.ADM_Enrollment.Enrollment_Id, zlmsadmin.ADM_Enrollment.School_Id, zlmsadmin.ADM_Enrollment.Student_Id, zlmsadmin.ADM_Enrollment.Session_Id, zlmsadmin.ADM_Enrollment.StreamGrade_Id, zlmsadmin.ADM_Enrollment.Community_Id, zlmsadmin.ADM_Enrollment.EnrollmentType, zlmsadmin.ADM_Enrollment.EntryType, zlmsadmin.ADM_Enrollment.EntryDate, zlmsadmin.ADM_Enrollment.TransferFromSchool_Id, zlmsadmin.ADM_Enrollment.TransferToSchool_Id, zlmsadmin.ADM_Enrollment.ExitType, zlmsadmin.ADM_Enrollment.ExitReason, zlmsadmin.ADM_Enrollment.ExitDate, zlmsadmin.ADM_Enrollment.Note, zlmsadmin.ADM_Enrollment.IsSpecialNeed, zlmsadmin.ADM_Enrollment.ExternalId, zlmsadmin.ADM_Enrollment.UserStamp, zlmsadmin.ADM_Enrollment.TimeStamp, zlmsadmin.ADM_Enrollment.RegistrationStatus, zlmsadmin.ADM_Enrollment.TransferFromEnrollment_Id, zlmsadmin.ADM_Enrollment.TransferToCommunity_Id, zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment, zlmsadmin.ADM_Enrollment.RecomputePassFail, zlmsadmin.ADM_Enrollment.MandatoryEducation, zlmsadmin.ADM_Enrollment.IsWaitingList, zlmsadmin.ADM_Enrollment.CreateTimeStamp, zlmsadmin.ADM_Enrollment.IsNotOfficialEnrollment, zlmsadmin.ADM_Enrollment.UserNote, zlmsadmin.ADM_Enrollment.DeleteType, zlmsadmin.ADM_Enrollment.IsDeleted, zlmsadmin.ADM_Enrollment.CreationUser_Id,zmedcommon.COMM_ApplicationForm.ApplicationForm_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormNumber, zmedcommon.COMM_ApplicationForm.ApplicationDate, zmedcommon.COMM_ApplicationForm.Applicant_Id, zmedcommon.COMM_ApplicationForm.Workflow_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormType, zmedcommon.COMM_ApplicationForm.Note, zmedcommon.COMM_ApplicationForm.TimeStamp, zmedcommon.COMM_ApplicationForm.UserStamp,zlmsregistration.REG_StudentRegistration.StudentRegistration_Id, zlmsregistration.REG_StudentRegistration.ApplicationForm_Id, zlmsregistration.REG_StudentRegistration.Student_Id, zlmsregistration.REG_StudentRegistration.AcademicYear_Id, zlmsregistration.REG_StudentRegistration.EducationPath_Id, zlmsregistration.REG_StudentRegistration.Enrollment_Id, zlmsregistration.REG_StudentRegistration.EducationType, zlmsregistration.REG_StudentRegistration.EducationFocus, zlmsregistration.REG_StudentRegistration.StreamGrade, zlmsregistration.REG_StudentRegistration.School_Id, zlmsregistration.REG_StudentRegistration.IsTransportRequired, zlmsregistration.REG_StudentRegistration.ExamTime, zlmsregistration.REG_StudentRegistration.ExamScore, zlmsregistration.REG_StudentRegistration.InterviewTime, zlmsregistration.REG_StudentRegistration.DocumentList_Id, zlmsregistration.REG_StudentRegistration.CitizenshipStatus, zlmsregistration.REG_StudentRegistration.ParentWorkPlace, zlmsregistration.REG_StudentRegistration.IsSpecialNeed, zlmsregistration.REG_StudentRegistration.TimeStamp, zlmsregistration.REG_StudentRegistration.UserStamp, zlmsregistration.REG_StudentRegistration.InCatchmentArea, zlmsregistration.REG_StudentRegistration.ProgramCategory_Id,zmedcommon.COMM_Workflow.Workflow_Id, zmedcommon.COMM_Workflow.Name, zmedcommon.COMM_Workflow.Code, zmedcommon.COMM_Workflow.Note,zmedcommon.COMM_ApplicationFormState.ApplicationFormState_Id, zmedcommon.COMM_ApplicationFormState.WorkflowState_Id, zmedcommon.COMM_ApplicationFormState.PrevWorkflowState_Id, zmedcommon.COMM_ApplicationFormState.StateStartDate, zmedcommon.COMM_ApplicationFormState.StateEndDate, zmedcommon.COMM_ApplicationFormState.PerformedByUser_Id, zmedcommon.COMM_ApplicationFormState.AttributeList_Id, zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id, zmedcommon.COMM_ApplicationFormState.IsCurrent, zmedcommon.COMM_ApplicationFormState.Note, zmedcommon.COMM_ApplicationFormState.TimeStamp, zmedcommon.COMM_ApplicationFormState.UserStamp,zmedcommon.COMM_WorkflowState.WorkflowState_Id, zmedcommon.COMM_WorkflowState.Workflow_Id, zmedcommon.COMM_WorkflowState.Name, zmedcommon.COMM_WorkflowState.StateCode, zmedcommon.COMM_WorkflowState.Note,zlmsadmin.ADM_Student.Student_Id, zlmsadmin.ADM_Student.StudentNumber, zlmsadmin.ADM_Student.CreationDate, zlmsadmin.ADM_Student.CreationUser_Id, zlmsadmin.ADM_Student.UserStamp, zlmsadmin.ADM_Student.TimeStamp, zlmsadmin.ADM_Student.IsDeleted, zlmsadmin.ADM_Student.AttributeList_Id, zlmsadmin.ADM_Student.CitizenshipStatus,zmedcommon.COMM_Person.Person_Id, zmedcommon.COMM_Person.Civility, zmedcommon.COMM_Person.IDNumber, zmedcommon.COMM_Person.FirstName, zmedcommon.COMM_Person.SecondName, zmedcommon.COMM_Person.ThirdName, zmedcommon.COMM_Person.FourthName, zmedcommon.COMM_Person.FamilyName, zmedcommon.COMM_Person.EnglishFirstName, zmedcommon.COMM_Person.EnglishSecondName, zmedcommon.COMM_Person.EnglishThirdName, zmedcommon.COMM_Person.EnglishFourthName, zmedcommon.COMM_Person.EnglishFamilyName, zmedcommon.COMM_Person.BirthName, zmedcommon.COMM_Person.BirthDate, zmedcommon.COMM_Person.BirthCity, zmedcommon.COMM_Person.EnglishBirthCity, zmedcommon.COMM_Person.BirthCountry, zmedcommon.COMM_Person.Nationality, zmedcommon.COMM_Person.Gender, zmedcommon.COMM_Person.MaritalStatus, zmedcommon.COMM_Person.Photo_Id, zmedcommon.COMM_Person.Religion, zmedcommon.COMM_Person.ReligionSector, zmedcommon.COMM_Person.PhoneList_Id, zmedcommon.COMM_Person.AddressList_Id, zmedcommon.COMM_Person.OtherIdList_Id, zmedcommon.COMM_Person.IsDeleted, zmedcommon.COMM_Person.ExternalId, zmedcommon.COMM_Person.UserStamp, zmedcommon.COMM_Person.TimeStamp, zmedcommon.COMM_Person.User_Id, zmedcommon.COMM_Person.InformationSource, zmedcommon.COMM_Person.LastSyncTime, zmedcommon.COMM_Person.IsTemporary, zmedcommon.COMM_Person.VStartDate,zmedcommon.COMM_PhoneList.PhoneList_Id,zmedcommon.COMM_Phone.Phone_Id, zmedcommon.COMM_Phone.PhoneList_Id, zmedcommon.COMM_Phone.Name, zmedcommon.COMM_Phone.Value, zmedcommon.COMM_Phone.Note, zmedcommon.COMM_Phone.IsPrivate, zmedcommon.COMM_Phone.IsPrimary, zmedcommon.COMM_Phone.ContactType,zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.CourseDefCodes, zlmsadmin.ADM_EduScenarioOptionalGrp.NumberOfPeriods, zlmsadmin.ADM_EduScenarioOptionalGrp.type,zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id, zlmsadmin.ADM_OptionalCourseGroup.Name, zlmsadmin.ADM_OptionalCourseGroup.MinimumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.MaximumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.IsSelectedByStudent,zlmsadmin.ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationType, zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus, zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade,zlmsadmin.ADM_StreamGrade.StreamGrade_Id, zlmsadmin.ADM_StreamGrade.Name, zlmsadmin.ADM_StreamGrade.Title, zlmsadmin.ADM_StreamGrade.Grade_Id,zlmsadmin.ADM_Grade.Grade_Id, zlmsadmin.ADM_Grade.EducationPathDef_Id, zlmsadmin.ADM_Grade.Name, zlmsadmin.ADM_Grade.Title, zlmsadmin.ADM_Grade.Position, zlmsadmin.ADM_Grade.SchoolLevel, zlmsadmin.ADM_Grade.MinAge, zlmsadmin.ADM_Grade.MinSpAge, zlmsadmin.ADM_Grade.MaxAge, zlmsadmin.ADM_Grade.MaxSpAge, zlmsadmin.ADM_Grade.MinAgeMargin, zlmsadmin.ADM_Grade.MinAgeMarginUnit, zlmsadmin.ADM_Grade.MaxAgeMargin, zlmsadmin.ADM_Grade.MaxAgeMarginUnit, zlmsadmin.ADM_Grade.CapacityGroup, zlmsadmin.ADM_Grade.MinAgeMargin2, zlmsadmin.ADM_Grade.MinAgeMarginUnit2, zlmsadmin.ADM_Grade.MaxAgeMargin2, zlmsadmin.ADM_Grade.MaxAgeMarginUnit2, zlmsadmin.ADM_Grade.ExternalId, zlmsadmin.ADM_Grade.CommunityTitlePrefix, zlmsadmin.ADM_Grade.AgeReferenceDate, zlmsadmin.ADM_Grade.VStartDate, zlmsadmin.ADM_Grade.UserStamp, zlmsadmin.ADM_Grade.TimeStamp,zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id, zlmsadmin.ADM_EducationPathDef.EducationPath_Id, zlmsadmin.ADM_EducationPathDef.StartDate, zlmsadmin.ADM_EducationPathDef.EndDate, zlmsadmin.ADM_EducationPathDef.IsActive, zlmsadmin.ADM_EducationPathDef.EducationType, zlmsadmin.ADM_EducationPathDef.EducationFocus,zlmsadmin.ADM_SessionDef.SessionDef_Id, zlmsadmin.ADM_SessionDef.EducationPathDef_Id, zlmsadmin.ADM_SessionDef.Title, zlmsadmin.ADM_SessionDef.SessionType, zlmsadmin.ADM_SessionDef.Duration, zlmsadmin.ADM_SessionDef.DurationUnit, zlmsadmin.ADM_SessionDef.Parent_Id, zlmsadmin.ADM_SessionDef.Position,zlmsadmin.ADM_Session.Session_Id, zlmsadmin.ADM_Session.AcademicYear_Id, zlmsadmin.ADM_Session.SessionDef_Id, zlmsadmin.ADM_Session.Title, zlmsadmin.ADM_Session.Parent_Id, zlmsadmin.ADM_Session.StartDate, zlmsadmin.ADM_Session.EndDate, zlmsadmin.ADM_Session.Position, zlmsadmin.ADM_Session.UserStamp, zlmsadmin.ADM_Session.TimeStamp,zlmsadmin.ADM_CourseDefStreamGrade.CourseDefStreamGrade_Id, zlmsadmin.ADM_CourseDefStreamGrade.CourseDef_Id, zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id, zlmsadmin.ADM_CourseDefStreamGrade.IsOptional, zlmsadmin.ADM_CourseDefStreamGrade.OptionalCourseGroup_Id,zlmsadmin.ADM_CourseDef.CourseDef_Id, zlmsadmin.ADM_CourseDef.EducationPathDef_Id, zlmsadmin.ADM_CourseDef.SessionDef_Id, zlmsadmin.ADM_CourseDef.TeachingSubject, zlmsadmin.ADM_CourseDef.TeachingLanguage, zlmsadmin.ADM_CourseDef.Title, zlmsadmin.ADM_CourseDef.NumberOfPeriods, zlmsadmin.ADM_CourseDef.NumberOfPeriodsPerWeek, zlmsadmin.ADM_CourseDef.PeriodDuration, zlmsadmin.ADM_CourseDef.PeriodDurationUnit, zlmsadmin.ADM_CourseDef.SlotColor, zlmsadmin.ADM_CourseDef.StudentGender, zlmsadmin.ADM_CourseDef.IsAcademic, zlmsadmin.ADM_CourseDef.Code, zlmsadmin.ADM_CourseDef.Position, zlmsadmin.ADM_CourseDef.CourseWeight, zlmsadmin.ADM_CourseDef.PassScore, zlmsadmin.ADM_CourseDef.OtherTitle, zlmsadmin.ADM_CourseDef.isTermBasedCourse, zlmsadmin.ADM_CourseDef.Department, zlmsadmin.ADM_CourseDef.UserStamp, zlmsadmin.ADM_CourseDef.TimeStamp,zlmsadmin.ADM_AcademicYear.AcademicYear_Id, zlmsadmin.ADM_AcademicYear.Title, zlmsadmin.ADM_AcademicYear.IsCurrent, zlmsadmin.ADM_AcademicYear.Status, zlmsadmin.ADM_AcademicYear.POSITION,zmedcommon.COMM_NoteHistory.NoteHistory_Id,zmedcommon.COMM_Note.Note_Id, zmedcommon.COMM_Note.NoteHistory_Id, zmedcommon.COMM_Note.Text, zmedcommon.COMM_Note.User_Id, zmedcommon.COMM_Note.NoteDate, zmedcommon.COMM_Note.Status, zmedcommon.COMM_Note.UserStamp, zmedcommon.COMM_Note.TimeStamp FROM zlmsadmin.ADM_ScenarioSelection JOIN zlmsadmin.ADM_SelectionDetails ON zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id = zlmsadmin.ADM_SelectionDetails.ScenarioSelection_Id JOIN zlmsadmin.ADM_Enrollment! ON zlmsadmin.ADM_ScenarioSelection.Enrollment_Id = zlmsadmin.ADM_Enrollment.Enrollment_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationForm ON zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id = zmedcommon.COMM_ApplicationForm.ApplicationForm_Id LEFT OUTER JOIN zlmsregistration.REG_StudentRegistration ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zlmsregistration.REG_StudentRegistration.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_Workflow ON zmedcommon.COMM_ApplicationForm.Workflow_Id = zmedcommon.COMM_Workflow.Workflow_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationFormState ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_WorkflowState ON zmedcommon.COMM_ApplicationFormState.WorkflowState_Id = zmedcommon.COMM_WorkflowState.WorkflowState_Id JOIN zlmsadmin.ADM_Student! ON zlmsadmin.ADM_Enrollment.Student_Id = zlmsadmin.ADM_Student.Student_Id JOIN zmedcommon.COMM_Person! ON (zlmsadmin.ADM_Student.Student_Id = zmedcommon.COMM_Person.Person_Id) JOIN zmedcommon.COMM_PhoneList ON zmedcommon.COMM_Person.PhoneList_Id = zmedcommon.COMM_PhoneList.PhoneList_Id JOIN zmedcommon.COMM_Phone ON zmedcommon.COMM_PhoneList.PhoneList_Id = zmedcommon.COMM_Phone.PhoneList_Id JOIN zlmsadmin.ADM_EduScenario ON zlmsadmin.ADM_ScenarioSelection.EduScenario_Id = zlmsadmin.ADM_EduScenario.EduScenario_Id JOIN zlmsadmin.ADM_EduScenarioOptionalGrp ON zlmsadmin.ADM_SelectionDetails.EduScenarioOptionalGrp_Id = zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id JOIN zlmsadmin.ADM_OptionalCourseGroup ON zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id JOIN zlmsadmin.ADM_EduScenarioStreamGrade ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id JOIN zlmsadmin.ADM_StreamGrade ON (zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade = zlmsadmin.ADM_StreamGrade.Name) JOIN zlmsadmin.ADM_Grade ON zlmsadmin.ADM_StreamGrade.Grade_Id = zlmsadmin.ADM_Grade.Grade_Id JOIN zlmsadmin.ADM_EducationPathDef ON ((zlmsadmin.ADM_EducationPathDef.EducationPath_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus = zlmsadmin.ADM_EducationPathDef.EducationFocus) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationType = zlmsadmin.ADM_EducationPathDef.EducationType)) JOIN zlmsadmin.ADM_SessionDef ON zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id = zlmsadmin.ADM_SessionDef.EducationPathDef_Id JOIN zlmsadmin.ADM_Session ON zlmsadmin.ADM_SessionDef.SessionDef_Id = zlmsadmin.ADM_Session.SessionDef_Id AND (((zlmsadmin.ADM_Session.AcademicYear_Id = zlmsadmin.ADM_EduScenario.AcademicYear_Id) AND (zlmsadmin.ADM_Grade.EducationPathDef_Id = zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id) AND (zlmsadmin.ADM_Session.Parent_Id IS NULL))) JOIN zlmsadmin.ADM_CourseDefStreamGrade ON zlmsadmin.ADM_StreamGrade.StreamGrade_Id = zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id AND (((zlmsadmin.ADM_StreamGrade.StreamGrade_Id = zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id) AND (zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id = zlmsadmin.ADM_CourseDefStreamGrade.OptionalCourseGroup_Id))) JOIN zlmsadmin.ADM_CourseDef ON zlmsadmin.ADM_CourseDefStreamGrade.CourseDef_Id = zlmsadmin.ADM_CourseDef.CourseDef_Id JOIN zlmsadmin.ADM_AcademicYear ON zlmsadmin.ADM_EduScenario.AcademicYear_Id = zlmsadmin.ADM_AcademicYear.AcademicYear_Id LEFT OUTER JOIN zmedcommon.COMM_NoteHistory ON zlmsadmin.ADM_ScenarioSelection.NoteHistory_Id = zmedcommon.COMM_NoteHistory.NoteHistory_Id LEFT OUTER JOIN zmedcommon.COMM_Note ON zmedcommon.COMM_NoteHistory.NoteHistory_Id = zmedcommon.COMM_Note.NoteHistory_Id WHERE ((((zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198871) AND (zlmsadmin.ADM_Enrollment.School_Id IN(838))) AND (zlmsadmin.ADM_ScenarioSelection.ExitDate IS NULL) AND (zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment = 1)) AND (((zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (zmedcommon.COMM_ApplicationFormState.IsCurrent = 1) AND (zmedcommon.COMM_WorkflowState.StateCode <> 0)) OR (zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NULL)));
20240806 12:00:25.594 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:25.594 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:25.594 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0013 - Allocated=10, Used=2
20240806 12:00:25.594 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0013 - SELECT ADM_ScenarioSelection.ScenarioSelection_Id, ADM_ScenarioSelection.EduScenario_Id, ADM_ScenarioSelection.ApplicationForm_Id, ADM_ScenarioSelection.Enrollment_Id, ADM_ScenarioSelection.SelectionStatus, ADM_ScenarioSelection.JoiningDate, ADM_ScenarioSelection.ExitDate, ADM_ScenarioSelection.UserStamp, ADM_ScenarioSelection.TimeStamp, ADM_ScenarioSelection.NoteHistory_Id, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.ScenarioSelection_Id, ADM_SelectionDetails.EduScenarioOptionalGrp_Id, ADM_SelectionDetails.CourseDefCode, ADM_SelectionDetails.NumberOfPeriods, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp, ADM_Enrollment.Enrollment_Id, ADM_Enrollment.School_Id, ADM_Enrollment.Student_Id, ADM_Enrollment.Session_Id, ADM_Enrollment.StreamGrade_Id, ADM_Enrollment.Community_Id, ADM_Enrollment.EnrollmentType, ADM_Enrollment.EntryType, ADM_Enrollment.EntryDate, ADM_Enrollment.TransferFromSchool_Id, ADM_Enrollment.TransferToSchool_Id, ADM_Enrollment.ExitType, ADM_Enrollment.ExitReason, ADM_Enrollment.ExitDate, ADM_Enrollment.Note, ADM_Enrollment.IsSpecialNeed, ADM_Enrollment.ExternalId, ADM_Enrollment.UserStamp, ADM_Enrollment.TimeStamp, ADM_Enrollment.RegistrationStatus, ADM_Enrollment.TransferFromEnrollment_Id, ADM_Enrollment.TransferToCommunity_Id, ADM_Enrollment.IsYearActiveEnrollment, ADM_Enrollment.RecomputePassFail, ADM_Enrollment.MandatoryEducation, ADM_Enrollment.IsWaitingList, ADM_Enrollment.CreateTimeStamp, ADM_Enrollment.IsNotOfficialEnrollment, ADM_Enrollment.UserNote, ADM_Enrollment.DeleteType, ADM_Enrollment.IsDeleted, ADM_Enrollment.CreationUser_Id, COMM_ApplicationForm.ApplicationForm_Id, COMM_ApplicationForm.ApplicationFormNumber, COMM_ApplicationForm.ApplicationDate, COMM_ApplicationForm.Applicant_Id, COMM_ApplicationForm.Workflow_Id, COMM_ApplicationForm.ApplicationFormType, COMM_ApplicationForm.Note, COMM_ApplicationForm.TimeStamp, COMM_ApplicationForm.UserStamp, REG_StudentRegistration.StudentRegistration_Id, REG_StudentRegistration.ApplicationForm_Id, REG_StudentRegistration.Student_Id, REG_StudentRegistration.AcademicYear_Id, REG_StudentRegistration.EducationPath_Id, REG_StudentRegistration.Enrollment_Id, REG_StudentRegistration.EducationType, REG_StudentRegistration.EducationFocus, REG_StudentRegistration.StreamGrade, REG_StudentRegistration.School_Id, REG_StudentRegistration.IsTransportRequired, REG_StudentRegistration.ExamTime, REG_StudentRegistration.ExamScore, REG_StudentRegistration.InterviewTime, REG_StudentRegistration.DocumentList_Id, REG_StudentRegistration.CitizenshipStatus, REG_StudentRegistration.ParentWorkPlace, REG_StudentRegistration.IsSpecialNeed, REG_StudentRegistration.TimeStamp, REG_StudentRegistration.UserStamp, REG_StudentRegistration.InCatchmentArea, REG_StudentRegistration.ProgramCategory_Id, COMM_Workflow.Workflow_Id, COMM_Workflow.Name, COMM_Workflow.Code, COMM_Workflow.Note, COMM_ApplicationFormState.ApplicationFormState_Id, COMM_ApplicationFormState.WorkflowState_Id, COMM_ApplicationFormState.PrevWorkflowState_Id, COMM_ApplicationFormState.StateStartDate, COMM_ApplicationFormState.StateEndDate, COMM_ApplicationFormState.PerformedByUser_Id, COMM_ApplicationFormState.AttributeList_Id, COMM_ApplicationFormState.ApplicationForm_Id, COMM_ApplicationFormState.IsCurrent, COMM_ApplicationFormState.Note, COMM_ApplicationFormState.TimeStamp, COMM_ApplicationFormState.UserStamp, COMM_WorkflowState.WorkflowState_Id, COMM_WorkflowState.Workflow_Id, COMM_WorkflowState.Name, COMM_WorkflowState.StateCode, COMM_WorkflowState.Note, ADM_Student.Student_Id, ADM_Student.StudentNumber, ADM_Student.CreationDate, ADM_Student.CreationUser_Id, ADM_Student.UserStamp, ADM_Student.TimeStamp, ADM_Student.IsDeleted, ADM_Student.AttributeList_Id, ADM_Student.CitizenshipStatus, COMM_Person.Person_Id, COMM_Person.Civility, COMM_Person.IDNumber, COMM_Person.FirstName, COMM_Person.SecondName, COMM_Person.ThirdName, COMM_Person.FourthName, COMM_Person.FamilyName, COMM_Person.EnglishFirstName, COMM_Person.EnglishSecondName, COMM_Person.EnglishThirdName, COMM_Person.EnglishFourthName, COMM_Person.EnglishFamilyName, COMM_Person.BirthName, COMM_Person.BirthDate, COMM_Person.BirthCity, COMM_Person.EnglishBirthCity, COMM_Person.BirthCountry, COMM_Person.Nationality, COMM_Person.Gender, COMM_Person.MaritalStatus, COMM_Person.Photo_Id, COMM_Person.Religion, COMM_Person.ReligionSector, COMM_Person.PhoneList_Id, COMM_Person.AddressList_Id, COMM_Person.OtherIdList_Id, COMM_Person.IsDeleted, COMM_Person.ExternalId, COMM_Person.UserStamp, COMM_Person.TimeStamp, COMM_Person.User_Id, COMM_Person.InformationSource, COMM_Person.LastSyncTime, COMM_Person.IsTemporary, COMM_Person.VStartDate, COMM_PhoneList.PhoneList_Id, COMM_Phone.Phone_Id, COMM_Phone.PhoneList_Id, COMM_Phone.Name, COMM_Phone.Value, COMM_Phone.Note, COMM_Phone.IsPrivate, COMM_Phone.IsPrimary, COMM_Phone.ContactType, ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, ADM_EduScenarioOptionalGrp.EduScenario_Id, ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, ADM_EduScenarioOptionalGrp.CourseDefCodes, ADM_EduScenarioOptionalGrp.NumberOfPeriods, ADM_EduScenarioOptionalGrp.type, ADM_OptionalCourseGroup.OptionalCourseGroup_Id, ADM_OptionalCourseGroup.Name, ADM_OptionalCourseGroup.MinimumSelectedCourse, ADM_OptionalCourseGroup.MaximumSelectedCourse, ADM_OptionalCourseGroup.IsSelectedByStudent, ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, ADM_EduScenarioStreamGrade.EduScenario_Id, ADM_EduScenarioStreamGrade.EducationType, ADM_EduScenarioStreamGrade.EducationPath_Id, ADM_EduScenarioStreamGrade.EducationFocus, ADM_EduScenarioStreamGrade.StreamGrade, ADM_StreamGrade.StreamGrade_Id, ADM_StreamGrade.Name, ADM_StreamGrade.Title, ADM_StreamGrade.Grade_Id, ADM_Grade.Grade_Id, ADM_Grade.EducationPathDef_Id, ADM_Grade.Name, ADM_Grade.Title, ADM_Grade.Position, ADM_Grade.SchoolLevel, ADM_Grade.MinAge, ADM_Grade.MinSpAge, ADM_Grade.MaxAge, ADM_Grade.MaxSpAge, ADM_Grade.MinAgeMargin, ADM_Grade.MinAgeMarginUnit, ADM_Grade.MaxAgeMargin, ADM_Grade.MaxAgeMarginUnit, ADM_Grade.CapacityGroup, ADM_Grade.MinAgeMargin2, ADM_Grade.MinAgeMarginUnit2, ADM_Grade.MaxAgeMargin2, ADM_Grade.MaxAgeMarginUnit2, ADM_Grade.ExternalId, ADM_Grade.CommunityTitlePrefix, ADM_Grade.AgeReferenceDate, ADM_Grade.VStartDate, ADM_Grade.UserStamp, ADM_Grade.TimeStamp, ADM_EducationPathDef.EducationPathDef_Id, ADM_EducationPathDef.EducationPath_Id, ADM_EducationPathDef.StartDate, ADM_EducationPathDef.EndDate, ADM_EducationPathDef.IsActive, ADM_EducationPathDef.EducationType, ADM_EducationPathDef.EducationFocus, ADM_SessionDef.SessionDef_Id, ADM_SessionDef.EducationPathDef_Id, ADM_SessionDef.Title, ADM_SessionDef.SessionType, ADM_SessionDef.Duration, ADM_SessionDef.DurationUnit, ADM_SessionDef.Parent_Id, ADM_SessionDef.Position, ADM_Session.Session_Id, ADM_Session.AcademicYear_Id, ADM_Session.SessionDef_Id, ADM_Session.Title, ADM_Session.Parent_Id, ADM_Session.StartDate, ADM_Session.EndDate, ADM_Session.Position, ADM_Session.UserStamp, ADM_Session.TimeStamp, ADM_CourseDefStreamGrade.CourseDefStreamGrade_Id, ADM_CourseDefStreamGrade.CourseDef_Id, ADM_CourseDefStreamGrade.StreamGrade_Id, ADM_CourseDefStreamGrade.IsOptional, ADM_CourseDefStreamGrade.OptionalCourseGroup_Id, ADM_CourseDef.CourseDef_Id, ADM_CourseDef.EducationPathDef_Id, ADM_CourseDef.SessionDef_Id, ADM_CourseDef.TeachingSubject, ADM_CourseDef.TeachingLanguage, ADM_CourseDef.Title, ADM_CourseDef.NumberOfPeriods, ADM_CourseDef.NumberOfPeriodsPerWeek, ADM_CourseDef.PeriodDuration, ADM_CourseDef.PeriodDurationUnit, ADM_CourseDef.SlotColor, ADM_CourseDef.StudentGender, ADM_CourseDef.IsAcademic, ADM_CourseDef.Code, ADM_CourseDef.Position, ADM_CourseDef.CourseWeight, ADM_CourseDef.PassScore, ADM_CourseDef.OtherTitle, ADM_CourseDef.isTermBasedCourse, ADM_CourseDef.Department, ADM_CourseDef.UserStamp, ADM_CourseDef.TimeStamp, ADM_AcademicYear.AcademicYear_Id, ADM_AcademicYear.Title, ADM_AcademicYear.IsCurrent, ADM_AcademicYear.Status, ADM_AcademicYear.POSITION, COMM_NoteHistory.NoteHistory_Id, COMM_Note.Note_Id, COMM_Note.NoteHistory_Id, COMM_Note.Text, COMM_Note.User_Id, COMM_Note.NoteDate, COMM_Note.Status, COMM_Note.UserStamp, COMM_Note.TimeStamp FROM ADM_ScenarioSelection JOIN ADM_SelectionDetails ON (ADM_ScenarioSelection.ScenarioSelection_Id = ADM_SelectionDetails.ScenarioSelection_Id) JOIN ADM_Enrollment ON ((ADM_Enrollment.IsDeleted = 0)) AND ((ADM_ScenarioSelection.Enrollment_Id = ADM_Enrollment.Enrollment_Id)) LEFT OUTER JOIN COMM_ApplicationForm ON (ADM_ScenarioSelection.ApplicationForm_Id = COMM_ApplicationForm.ApplicationForm_Id) LEFT OUTER JOIN REG_StudentRegistration ON (COMM_ApplicationForm.ApplicationForm_Id = REG_StudentRegistration.ApplicationForm_Id) LEFT OUTER JOIN COMM_Workflow ON (COMM_ApplicationForm.Workflow_Id = COMM_Workflow.Workflow_Id) LEFT OUTER JOIN COMM_ApplicationFormState ON (COMM_ApplicationForm.ApplicationForm_Id = COMM_ApplicationFormState.ApplicationForm_Id) LEFT OUTER JOIN COMM_WorkflowState ON (COMM_ApplicationFormState.WorkflowState_Id = COMM_WorkflowState.WorkflowState_Id) JOIN ADM_Student ON ((ADM_Student.IsDeleted = 0)) AND ((ADM_Enrollment.Student_Id = ADM_Student.Student_Id)) JOIN COMM_Person ON ((COMM_Person.IsDeleted = 0)) AND ((ADM_Student.Student_Id = COMM_Person.Person_Id)) JOIN COMM_PhoneList ON (COMM_Person.PhoneList_Id = COMM_PhoneList.PhoneList_Id) JOIN COMM_Phone ON (COMM_PhoneList.PhoneList_Id = COMM_Phone.PhoneList_Id) JOIN ADM_EduScenario ON (ADM_ScenarioSelection.EduScenario_Id = ADM_EduScenario.EduScenario_Id) JOIN ADM_EduScenarioOptionalGrp ON (ADM_SelectionDetails.EduScenarioOptionalGrp_Id = ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id) JOIN ADM_OptionalCourseGroup ON (ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = ADM_OptionalCourseGroup.OptionalCourseGroup_Id) JOIN ADM_EduScenarioStreamGrade ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioStreamGrade.EduScenario_Id) JOIN ADM_StreamGrade ON (ADM_EduScenarioStreamGrade.StreamGrade = ADM_StreamGrade.Name) JOIN ADM_Grade ON (ADM_StreamGrade.Grade_Id = ADM_Grade.Grade_Id) JOIN ADM_EducationPathDef ON (((ADM_EducationPathDef.EducationPath_Id = ADM_EduScenarioStreamGrade.EducationPath_Id) AND (ADM_EduScenarioStreamGrade.EducationFocus = ADM_EducationPathDef.EducationFocus)) AND (ADM_EduScenarioStreamGrade.EducationType = ADM_EducationPathDef.EducationType)) JOIN ADM_SessionDef ON (ADM_EducationPathDef.EducationPathDef_Id = ADM_SessionDef.EducationPathDef_Id) JOIN ADM_Session ON ((ADM_SessionDef.SessionDef_Id = ADM_Session.SessionDef_Id) AND (((ADM_Session.AcademicYear_Id = ADM_EduScenario.AcademicYear_Id) AND (ADM_Grade.EducationPathDef_Id = ADM_EducationPathDef.EducationPathDef_Id)) AND (ADM_Session.Parent_Id IS NULL))) JOIN ADM_CourseDefStreamGrade ON ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND (ADM_OptionalCourseGroup.OptionalCourseGroup_Id = ADM_CourseDefStreamGrade.OptionalCourseGroup_Id))) JOIN ADM_CourseDef ON (ADM_CourseDefStreamGrade.CourseDef_Id = ADM_CourseDef.CourseDef_Id) JOIN ADM_AcademicYear ON (ADM_EduScenario.AcademicYear_Id = ADM_AcademicYear.AcademicYear_Id) LEFT OUTER JOIN COMM_NoteHistory ON (ADM_ScenarioSelection.NoteHistory_Id = COMM_NoteHistory.NoteHistory_Id) LEFT OUTER JOIN COMM_Note ON (COMM_NoteHistory.NoteHistory_Id = COMM_Note.NoteHistory_Id) WHERE (((((ADM_EduScenario.EduScenario_Id = ?) AND (ADM_Enrollment.School_Id IN(?))) AND (ADM_ScenarioSelection.ExitDate IS NULL)) AND (ADM_Enrollment.IsYearActiveEnrollment = ?)) AND ((((COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (COMM_ApplicationFormState.IsCurrent = ?)) AND (COMM_WorkflowState.StateCode <> ?)) OR (COMM_ApplicationForm.ApplicationForm_Id IS NULL)))
20240806 12:00:25.594 006E =FUN= [ZQL.PhysicalConnection] Parameters: 622198871, 838, 1, 1, 0
20240806 12:00:25.594 006E =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:25.715 008E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnection.commitTrans : depth=0
20240806 12:00:25.715 008E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0012
20240806 12:00:25.715 008E =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0012
20240806 12:00:25.716 008E =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:25.716 008E =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=1
20240806 12:00:25.867 006E =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:25.868 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:26.167 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0013
20240806 12:00:26.167 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 275 columns, 868 rows
20240806 12:00:26.167 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0013
20240806 12:00:26.167 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0013
20240806 12:00:26.167 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:26.167 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:26.167 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.dbag.DBag.load
20240806 12:00:26.167 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.dbag.DBag.load
20240806 12:00:26.167 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id, zlmsadmin.ADM_ScenarioSelection.EduScenario_Id, zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id, zlmsadmin.ADM_ScenarioSelection.Enrollment_Id, zlmsadmin.ADM_ScenarioSelection.SelectionStatus, zlmsadmin.ADM_ScenarioSelection.JoiningDate, zlmsadmin.ADM_ScenarioSelection.ExitDate, zlmsadmin.ADM_ScenarioSelection.UserStamp, zlmsadmin.ADM_ScenarioSelection.TimeStamp, zlmsadmin.ADM_ScenarioSelection.NoteHistory_Id,zlmsadmin.ADM_Enrollment.Enrollment_Id, zlmsadmin.ADM_Enrollment.School_Id, zlmsadmin.ADM_Enrollment.Student_Id, zlmsadmin.ADM_Enrollment.Session_Id, zlmsadmin.ADM_Enrollment.StreamGrade_Id, zlmsadmin.ADM_Enrollment.Community_Id, zlmsadmin.ADM_Enrollment.EnrollmentType, zlmsadmin.ADM_Enrollment.EntryType, zlmsadmin.ADM_Enrollment.EntryDate, zlmsadmin.ADM_Enrollment.TransferFromSchool_Id, zlmsadmin.ADM_Enrollment.TransferToSchool_Id, zlmsadmin.ADM_Enrollment.ExitType, zlmsadmin.ADM_Enrollment.ExitReason, zlmsadmin.ADM_Enrollment.ExitDate, zlmsadmin.ADM_Enrollment.Note, zlmsadmin.ADM_Enrollment.IsSpecialNeed, zlmsadmin.ADM_Enrollment.ExternalId, zlmsadmin.ADM_Enrollment.UserStamp, zlmsadmin.ADM_Enrollment.TimeStamp, zlmsadmin.ADM_Enrollment.RegistrationStatus, zlmsadmin.ADM_Enrollment.TransferFromEnrollment_Id, zlmsadmin.ADM_Enrollment.TransferToCommunity_Id, zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment, zlmsadmin.ADM_Enrollment.RecomputePassFail, zlmsadmin.ADM_Enrollment.MandatoryEducation, zlmsadmin.ADM_Enrollment.IsWaitingList, zlmsadmin.ADM_Enrollment.CreateTimeStamp, zlmsadmin.ADM_Enrollment.IsNotOfficialEnrollment, zlmsadmin.ADM_Enrollment.UserNote, zlmsadmin.ADM_Enrollment.DeleteType, zlmsadmin.ADM_Enrollment.IsDeleted, zlmsadmin.ADM_Enrollment.CreationUser_Id,zlmsadmin.ADM_Student.Student_Id, zlmsadmin.ADM_Student.StudentNumber, zlmsadmin.ADM_Student.CreationDate, zlmsadmin.ADM_Student.CreationUser_Id, zlmsadmin.ADM_Student.UserStamp, zlmsadmin.ADM_Student.TimeStamp, zlmsadmin.ADM_Student.IsDeleted, zlmsadmin.ADM_Student.AttributeList_Id, zlmsadmin.ADM_Student.CitizenshipStatus,zlmsadmin.ADM_Session.Session_Id, zlmsadmin.ADM_Session.AcademicYear_Id, zlmsadmin.ADM_Session.SessionDef_Id, zlmsadmin.ADM_Session.Title, zlmsadmin.ADM_Session.Parent_Id, zlmsadmin.ADM_Session.StartDate, zlmsadmin.ADM_Session.EndDate, zlmsadmin.ADM_Session.Position, zlmsadmin.ADM_Session.UserStamp, zlmsadmin.ADM_Session.TimeStamp,zlmsadmin.ADM_AcademicYear.AcademicYear_Id, zlmsadmin.ADM_AcademicYear.Title, zlmsadmin.ADM_AcademicYear.IsCurrent, zlmsadmin.ADM_AcademicYear.Status, zlmsadmin.ADM_AcademicYear.POSITION,zmedcommon.COMM_Person.Person_Id, zmedcommon.COMM_Person.Civility, zmedcommon.COMM_Person.IDNumber, zmedcommon.COMM_Person.FirstName, zmedcommon.COMM_Person.SecondName, zmedcommon.COMM_Person.ThirdName, zmedcommon.COMM_Person.FourthName, zmedcommon.COMM_Person.FamilyName, zmedcommon.COMM_Person.EnglishFirstName, zmedcommon.COMM_Person.EnglishSecondName, zmedcommon.COMM_Person.EnglishThirdName, zmedcommon.COMM_Person.EnglishFourthName, zmedcommon.COMM_Person.EnglishFamilyName, zmedcommon.COMM_Person.BirthName, zmedcommon.COMM_Person.BirthDate, zmedcommon.COMM_Person.BirthCity, zmedcommon.COMM_Person.EnglishBirthCity, zmedcommon.COMM_Person.BirthCountry, zmedcommon.COMM_Person.Nationality, zmedcommon.COMM_Person.Gender, zmedcommon.COMM_Person.MaritalStatus, zmedcommon.COMM_Person.Photo_Id, zmedcommon.COMM_Person.Religion, zmedcommon.COMM_Person.ReligionSector, zmedcommon.COMM_Person.PhoneList_Id, zmedcommon.COMM_Person.AddressList_Id, zmedcommon.COMM_Person.OtherIdList_Id, zmedcommon.COMM_Person.IsDeleted, zmedcommon.COMM_Person.ExternalId, zmedcommon.COMM_Person.UserStamp, zmedcommon.COMM_Person.TimeStamp, zmedcommon.COMM_Person.User_Id, zmedcommon.COMM_Person.InformationSource, zmedcommon.COMM_Person.LastSyncTime, zmedcommon.COMM_Person.IsTemporary, zmedcommon.COMM_Person.VStartDate,zmedcommon.COMM_PhoneList.PhoneList_Id,zmedcommon.COMM_Phone.Phone_Id, zmedcommon.COMM_Phone.PhoneList_Id, zmedcommon.COMM_Phone.Name, zmedcommon.COMM_Phone.Value, zmedcommon.COMM_Phone.Note, zmedcommon.COMM_Phone.IsPrivate, zmedcommon.COMM_Phone.IsPrimary, zmedcommon.COMM_Phone.ContactType,zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_SelectionDetails.SelectionDetails_Id, zlmsadmin.ADM_SelectionDetails.ScenarioSelection_Id, zlmsadmin.ADM_SelectionDetails.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_SelectionDetails.CourseDefCode, zlmsadmin.ADM_SelectionDetails.NumberOfPeriods, zlmsadmin.ADM_SelectionDetails.UserStamp, zlmsadmin.ADM_SelectionDetails.TimeStamp,zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.CourseDefCodes, zlmsadmin.ADM_EduScenarioOptionalGrp.NumberOfPeriods, zlmsadmin.ADM_EduScenarioOptionalGrp.type,zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id, zlmsadmin.ADM_OptionalCourseGroup.Name, zlmsadmin.ADM_OptionalCourseGroup.MinimumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.MaximumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.IsSelectedByStudent,zlmsadmin.ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationType, zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus, zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade,zlmsadmin.ADM_StreamGrade.StreamGrade_Id, zlmsadmin.ADM_StreamGrade.Name, zlmsadmin.ADM_StreamGrade.Title, zlmsadmin.ADM_StreamGrade.Grade_Id,zlmsadmin.ADM_Grade.Grade_Id, zlmsadmin.ADM_Grade.EducationPathDef_Id, zlmsadmin.ADM_Grade.Name, zlmsadmin.ADM_Grade.Title, zlmsadmin.ADM_Grade.Position, zlmsadmin.ADM_Grade.SchoolLevel, zlmsadmin.ADM_Grade.MinAge, zlmsadmin.ADM_Grade.MinSpAge, zlmsadmin.ADM_Grade.MaxAge, zlmsadmin.ADM_Grade.MaxSpAge, zlmsadmin.ADM_Grade.MinAgeMargin, zlmsadmin.ADM_Grade.MinAgeMarginUnit, zlmsadmin.ADM_Grade.MaxAgeMargin, zlmsadmin.ADM_Grade.MaxAgeMarginUnit, zlmsadmin.ADM_Grade.CapacityGroup, zlmsadmin.ADM_Grade.MinAgeMargin2, zlmsadmin.ADM_Grade.MinAgeMarginUnit2, zlmsadmin.ADM_Grade.MaxAgeMargin2, zlmsadmin.ADM_Grade.MaxAgeMarginUnit2, zlmsadmin.ADM_Grade.ExternalId, zlmsadmin.ADM_Grade.CommunityTitlePrefix, zlmsadmin.ADM_Grade.AgeReferenceDate, zlmsadmin.ADM_Grade.VStartDate, zlmsadmin.ADM_Grade.UserStamp, zlmsadmin.ADM_Grade.TimeStamp,zlmsadmin.ADM_CourseDefStreamGrade.CourseDefStreamGrade_Id, zlmsadmin.ADM_CourseDefStreamGrade.CourseDef_Id, zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id, zlmsadmin.ADM_CourseDefStreamGrade.IsOptional, zlmsadmin.ADM_CourseDefStreamGrade.OptionalCourseGroup_Id,zlmsadmin.ADM_CourseDef.CourseDef_Id, zlmsadmin.ADM_CourseDef.EducationPathDef_Id, zlmsadmin.ADM_CourseDef.SessionDef_Id, zlmsadmin.ADM_CourseDef.TeachingSubject, zlmsadmin.ADM_CourseDef.TeachingLanguage, zlmsadmin.ADM_CourseDef.Title, zlmsadmin.ADM_CourseDef.NumberOfPeriods, zlmsadmin.ADM_CourseDef.NumberOfPeriodsPerWeek, zlmsadmin.ADM_CourseDef.PeriodDuration, zlmsadmin.ADM_CourseDef.PeriodDurationUnit, zlmsadmin.ADM_CourseDef.SlotColor, zlmsadmin.ADM_CourseDef.StudentGender, zlmsadmin.ADM_CourseDef.IsAcademic, zlmsadmin.ADM_CourseDef.Code, zlmsadmin.ADM_CourseDef.Position, zlmsadmin.ADM_CourseDef.CourseWeight, zlmsadmin.ADM_CourseDef.PassScore, zlmsadmin.ADM_CourseDef.OtherTitle, zlmsadmin.ADM_CourseDef.isTermBasedCourse, zlmsadmin.ADM_CourseDef.Department, zlmsadmin.ADM_CourseDef.UserStamp, zlmsadmin.ADM_CourseDef.TimeStamp,zmedcommon.COMM_ApplicationForm.ApplicationForm_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormNumber, zmedcommon.COMM_ApplicationForm.ApplicationDate, zmedcommon.COMM_ApplicationForm.Applicant_Id, zmedcommon.COMM_ApplicationForm.Workflow_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormType, zmedcommon.COMM_ApplicationForm.Note, zmedcommon.COMM_ApplicationForm.TimeStamp, zmedcommon.COMM_ApplicationForm.UserStamp,zlmsregistration.REG_StudentRegistration.StudentRegistration_Id, zlmsregistration.REG_StudentRegistration.ApplicationForm_Id, zlmsregistration.REG_StudentRegistration.Student_Id, zlmsregistration.REG_StudentRegistration.AcademicYear_Id, zlmsregistration.REG_StudentRegistration.EducationPath_Id, zlmsregistration.REG_StudentRegistration.Enrollment_Id, zlmsregistration.REG_StudentRegistration.EducationType, zlmsregistration.REG_StudentRegistration.EducationFocus, zlmsregistration.REG_StudentRegistration.StreamGrade, zlmsregistration.REG_StudentRegistration.School_Id, zlmsregistration.REG_StudentRegistration.IsTransportRequired, zlmsregistration.REG_StudentRegistration.ExamTime, zlmsregistration.REG_StudentRegistration.ExamScore, zlmsregistration.REG_StudentRegistration.InterviewTime, zlmsregistration.REG_StudentRegistration.DocumentList_Id, zlmsregistration.REG_StudentRegistration.CitizenshipStatus, zlmsregistration.REG_StudentRegistration.ParentWorkPlace, zlmsregistration.REG_StudentRegistration.IsSpecialNeed, zlmsregistration.REG_StudentRegistration.TimeStamp, zlmsregistration.REG_StudentRegistration.UserStamp, zlmsregistration.REG_StudentRegistration.InCatchmentArea, zlmsregistration.REG_StudentRegistration.ProgramCategory_Id,zmedcommon.COMM_Workflow.Workflow_Id, zmedcommon.COMM_Workflow.Name, zmedcommon.COMM_Workflow.Code, zmedcommon.COMM_Workflow.Note,zmedcommon.COMM_ApplicationFormState.ApplicationFormState_Id, zmedcommon.COMM_ApplicationFormState.WorkflowState_Id, zmedcommon.COMM_ApplicationFormState.PrevWorkflowState_Id, zmedcommon.COMM_ApplicationFormState.StateStartDate, zmedcommon.COMM_ApplicationFormState.StateEndDate, zmedcommon.COMM_ApplicationFormState.PerformedByUser_Id, zmedcommon.COMM_ApplicationFormState.AttributeList_Id, zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id, zmedcommon.COMM_ApplicationFormState.IsCurrent, zmedcommon.COMM_ApplicationFormState.Note, zmedcommon.COMM_ApplicationFormState.TimeStamp, zmedcommon.COMM_ApplicationFormState.UserStamp,zmedcommon.COMM_WorkflowState.WorkflowState_Id, zmedcommon.COMM_WorkflowState.Workflow_Id, zmedcommon.COMM_WorkflowState.Name, zmedcommon.COMM_WorkflowState.StateCode, zmedcommon.COMM_WorkflowState.Note FROM zlmsadmin.ADM_ScenarioSelection JOIN zlmsadmin.ADM_Enrollment! ON zlmsadmin.ADM_ScenarioSelection.Enrollment_Id = zlmsadmin.ADM_Enrollment.Enrollment_Id JOIN zlmsadmin.ADM_Student! ON zlmsadmin.ADM_Enrollment.Student_Id = zlmsadmin.ADM_Student.Student_Id JOIN zlmsadmin.ADM_Session ON zlmsadmin.ADM_Enrollment.Session_Id = zlmsadmin.ADM_Session.Session_Id JOIN zlmsadmin.ADM_AcademicYear ON zlmsadmin.ADM_Session.AcademicYear_Id = zlmsadmin.ADM_AcademicYear.AcademicYear_Id JOIN zmedcommon.COMM_Person! ON (zlmsadmin.ADM_Student.Student_Id = zmedcommon.COMM_Person.Person_Id) JOIN zmedcommon.COMM_PhoneList ON zmedcommon.COMM_Person.PhoneList_Id = zmedcommon.COMM_PhoneList.PhoneList_Id JOIN zmedcommon.COMM_Phone ON zmedcommon.COMM_PhoneList.PhoneList_Id = zmedcommon.COMM_Phone.PhoneList_Id JOIN zlmsadmin.ADM_EduScenario ON zlmsadmin.ADM_ScenarioSelection.EduScenario_Id = zlmsadmin.ADM_EduScenario.EduScenario_Id LEFT OUTER JOIN zlmsadmin.ADM_SelectionDetails ON zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id = zlmsadmin.ADM_SelectionDetails.ScenarioSelection_Id JOIN zlmsadmin.ADM_EduScenarioOptionalGrp ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id JOIN zlmsadmin.ADM_OptionalCourseGroup ON zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id JOIN zlmsadmin.ADM_EduScenarioStreamGrade ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id JOIN zlmsadmin.ADM_StreamGrade ON (zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade = zlmsadmin.ADM_StreamGrade.Name) JOIN zlmsadmin.ADM_Grade ON zlmsadmin.ADM_StreamGrade.Grade_Id = zlmsadmin.ADM_Grade.Grade_Id JOIN zlmsadmin.ADM_CourseDefStreamGrade ON zlmsadmin.ADM_StreamGrade.StreamGrade_Id = zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id AND (((zlmsadmin.ADM_StreamGrade.StreamGrade_Id = zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id) AND (zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id = zlmsadmin.ADM_CourseDefStreamGrade.OptionalCourseGroup_Id))) JOIN zlmsadmin.ADM_CourseDef ON zlmsadmin.ADM_CourseDefStreamGrade.CourseDef_Id = zlmsadmin.ADM_CourseDef.CourseDef_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationForm ON zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id = zmedcommon.COMM_ApplicationForm.ApplicationForm_Id LEFT OUTER JOIN zlmsregistration.REG_StudentRegistration ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zlmsregistration.REG_StudentRegistration.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_Workflow ON zmedcommon.COMM_ApplicationForm.Workflow_Id = zmedcommon.COMM_Workflow.Workflow_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationFormState ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_WorkflowState ON zmedcommon.COMM_ApplicationFormState.WorkflowState_Id = zmedcommon.COMM_WorkflowState.WorkflowState_Id WHERE ((((zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198871) AND (zlmsadmin.ADM_Enrollment.School_Id IN(838))) AND (zlmsadmin.ADM_ScenarioSelection.ExitDate IS NULL) AND (zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment = 1)) AND (((zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (zmedcommon.COMM_ApplicationFormState.IsCurrent = 1) AND (zmedcommon.COMM_WorkflowState.StateCode <> 0)) OR (zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NULL)) AND (zlmsadmin.ADM_SelectionDetails.SelectionDetails_Id IS NULL));
20240806 12:00:26.168 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:26.168 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:26.168 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0009 - Allocated=10, Used=1
20240806 12:00:26.168 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0009 - SELECT ADM_ScenarioSelection.ScenarioSelection_Id, ADM_ScenarioSelection.EduScenario_Id, ADM_ScenarioSelection.ApplicationForm_Id, ADM_ScenarioSelection.Enrollment_Id, ADM_ScenarioSelection.SelectionStatus, ADM_ScenarioSelection.JoiningDate, ADM_ScenarioSelection.ExitDate, ADM_ScenarioSelection.UserStamp, ADM_ScenarioSelection.TimeStamp, ADM_ScenarioSelection.NoteHistory_Id, ADM_Enrollment.Enrollment_Id, ADM_Enrollment.School_Id, ADM_Enrollment.Student_Id, ADM_Enrollment.Session_Id, ADM_Enrollment.StreamGrade_Id, ADM_Enrollment.Community_Id, ADM_Enrollment.EnrollmentType, ADM_Enrollment.EntryType, ADM_Enrollment.EntryDate, ADM_Enrollment.TransferFromSchool_Id, ADM_Enrollment.TransferToSchool_Id, ADM_Enrollment.ExitType, ADM_Enrollment.ExitReason, ADM_Enrollment.ExitDate, ADM_Enrollment.Note, ADM_Enrollment.IsSpecialNeed, ADM_Enrollment.ExternalId, ADM_Enrollment.UserStamp, ADM_Enrollment.TimeStamp, ADM_Enrollment.RegistrationStatus, ADM_Enrollment.TransferFromEnrollment_Id, ADM_Enrollment.TransferToCommunity_Id, ADM_Enrollment.IsYearActiveEnrollment, ADM_Enrollment.RecomputePassFail, ADM_Enrollment.MandatoryEducation, ADM_Enrollment.IsWaitingList, ADM_Enrollment.CreateTimeStamp, ADM_Enrollment.IsNotOfficialEnrollment, ADM_Enrollment.UserNote, ADM_Enrollment.DeleteType, ADM_Enrollment.IsDeleted, ADM_Enrollment.CreationUser_Id, ADM_Student.Student_Id, ADM_Student.StudentNumber, ADM_Student.CreationDate, ADM_Student.CreationUser_Id, ADM_Student.UserStamp, ADM_Student.TimeStamp, ADM_Student.IsDeleted, ADM_Student.AttributeList_Id, ADM_Student.CitizenshipStatus, ADM_Session.Session_Id, ADM_Session.AcademicYear_Id, ADM_Session.SessionDef_Id, ADM_Session.Title, ADM_Session.Parent_Id, ADM_Session.StartDate, ADM_Session.EndDate, ADM_Session.Position, ADM_Session.UserStamp, ADM_Session.TimeStamp, ADM_AcademicYear.AcademicYear_Id, ADM_AcademicYear.Title, ADM_AcademicYear.IsCurrent, ADM_AcademicYear.Status, ADM_AcademicYear.POSITION, COMM_Person.Person_Id, COMM_Person.Civility, COMM_Person.IDNumber, COMM_Person.FirstName, COMM_Person.SecondName, COMM_Person.ThirdName, COMM_Person.FourthName, COMM_Person.FamilyName, COMM_Person.EnglishFirstName, COMM_Person.EnglishSecondName, COMM_Person.EnglishThirdName, COMM_Person.EnglishFourthName, COMM_Person.EnglishFamilyName, COMM_Person.BirthName, COMM_Person.BirthDate, COMM_Person.BirthCity, COMM_Person.EnglishBirthCity, COMM_Person.BirthCountry, COMM_Person.Nationality, COMM_Person.Gender, COMM_Person.MaritalStatus, COMM_Person.Photo_Id, COMM_Person.Religion, COMM_Person.ReligionSector, COMM_Person.PhoneList_Id, COMM_Person.AddressList_Id, COMM_Person.OtherIdList_Id, COMM_Person.IsDeleted, COMM_Person.ExternalId, COMM_Person.UserStamp, COMM_Person.TimeStamp, COMM_Person.User_Id, COMM_Person.InformationSource, COMM_Person.LastSyncTime, COMM_Person.IsTemporary, COMM_Person.VStartDate, COMM_PhoneList.PhoneList_Id, COMM_Phone.Phone_Id, COMM_Phone.PhoneList_Id, COMM_Phone.Name, COMM_Phone.Value, COMM_Phone.Note, COMM_Phone.IsPrivate, COMM_Phone.IsPrimary, COMM_Phone.ContactType, ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.ScenarioSelection_Id, ADM_SelectionDetails.EduScenarioOptionalGrp_Id, ADM_SelectionDetails.CourseDefCode, ADM_SelectionDetails.NumberOfPeriods, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp, ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, ADM_EduScenarioOptionalGrp.EduScenario_Id, ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, ADM_EduScenarioOptionalGrp.CourseDefCodes, ADM_EduScenarioOptionalGrp.NumberOfPeriods, ADM_EduScenarioOptionalGrp.type, ADM_OptionalCourseGroup.OptionalCourseGroup_Id, ADM_OptionalCourseGroup.Name, ADM_OptionalCourseGroup.MinimumSelectedCourse, ADM_OptionalCourseGroup.MaximumSelectedCourse, ADM_OptionalCourseGroup.IsSelectedByStudent, ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, ADM_EduScenarioStreamGrade.EduScenario_Id, ADM_EduScenarioStreamGrade.EducationType, ADM_EduScenarioStreamGrade.EducationPath_Id, ADM_EduScenarioStreamGrade.EducationFocus, ADM_EduScenarioStreamGrade.StreamGrade, ADM_StreamGrade.StreamGrade_Id, ADM_StreamGrade.Name, ADM_StreamGrade.Title, ADM_StreamGrade.Grade_Id, ADM_Grade.Grade_Id, ADM_Grade.EducationPathDef_Id, ADM_Grade.Name, ADM_Grade.Title, ADM_Grade.Position, ADM_Grade.SchoolLevel, ADM_Grade.MinAge, ADM_Grade.MinSpAge, ADM_Grade.MaxAge, ADM_Grade.MaxSpAge, ADM_Grade.MinAgeMargin, ADM_Grade.MinAgeMarginUnit, ADM_Grade.MaxAgeMargin, ADM_Grade.MaxAgeMarginUnit, ADM_Grade.CapacityGroup, ADM_Grade.MinAgeMargin2, ADM_Grade.MinAgeMarginUnit2, ADM_Grade.MaxAgeMargin2, ADM_Grade.MaxAgeMarginUnit2, ADM_Grade.ExternalId, ADM_Grade.CommunityTitlePrefix, ADM_Grade.AgeReferenceDate, ADM_Grade.VStartDate, ADM_Grade.UserStamp, ADM_Grade.TimeStamp, ADM_CourseDefStreamGrade.CourseDefStreamGrade_Id, ADM_CourseDefStreamGrade.CourseDef_Id, ADM_CourseDefStreamGrade.StreamGrade_Id, ADM_CourseDefStreamGrade.IsOptional, ADM_CourseDefStreamGrade.OptionalCourseGroup_Id, ADM_CourseDef.CourseDef_Id, ADM_CourseDef.EducationPathDef_Id, ADM_CourseDef.SessionDef_Id, ADM_CourseDef.TeachingSubject, ADM_CourseDef.TeachingLanguage, ADM_CourseDef.Title, ADM_CourseDef.NumberOfPeriods, ADM_CourseDef.NumberOfPeriodsPerWeek, ADM_CourseDef.PeriodDuration, ADM_CourseDef.PeriodDurationUnit, ADM_CourseDef.SlotColor, ADM_CourseDef.StudentGender, ADM_CourseDef.IsAcademic, ADM_CourseDef.Code, ADM_CourseDef.Position, ADM_CourseDef.CourseWeight, ADM_CourseDef.PassScore, ADM_CourseDef.OtherTitle, ADM_CourseDef.isTermBasedCourse, ADM_CourseDef.Department, ADM_CourseDef.UserStamp, ADM_CourseDef.TimeStamp, COMM_ApplicationForm.ApplicationForm_Id, COMM_ApplicationForm.ApplicationFormNumber, COMM_ApplicationForm.ApplicationDate, COMM_ApplicationForm.Applicant_Id, COMM_ApplicationForm.Workflow_Id, COMM_ApplicationForm.ApplicationFormType, COMM_ApplicationForm.Note, COMM_ApplicationForm.TimeStamp, COMM_ApplicationForm.UserStamp, REG_StudentRegistration.StudentRegistration_Id, REG_StudentRegistration.ApplicationForm_Id, REG_StudentRegistration.Student_Id, REG_StudentRegistration.AcademicYear_Id, REG_StudentRegistration.EducationPath_Id, REG_StudentRegistration.Enrollment_Id, REG_StudentRegistration.EducationType, REG_StudentRegistration.EducationFocus, REG_StudentRegistration.StreamGrade, REG_StudentRegistration.School_Id, REG_StudentRegistration.IsTransportRequired, REG_StudentRegistration.ExamTime, REG_StudentRegistration.ExamScore, REG_StudentRegistration.InterviewTime, REG_StudentRegistration.DocumentList_Id, REG_StudentRegistration.CitizenshipStatus, REG_StudentRegistration.ParentWorkPlace, REG_StudentRegistration.IsSpecialNeed, REG_StudentRegistration.TimeStamp, REG_StudentRegistration.UserStamp, REG_StudentRegistration.InCatchmentArea, REG_StudentRegistration.ProgramCategory_Id, COMM_Workflow.Workflow_Id, COMM_Workflow.Name, COMM_Workflow.Code, COMM_Workflow.Note, COMM_ApplicationFormState.ApplicationFormState_Id, COMM_ApplicationFormState.WorkflowState_Id, COMM_ApplicationFormState.PrevWorkflowState_Id, COMM_ApplicationFormState.StateStartDate, COMM_ApplicationFormState.StateEndDate, COMM_ApplicationFormState.PerformedByUser_Id, COMM_ApplicationFormState.AttributeList_Id, COMM_ApplicationFormState.ApplicationForm_Id, COMM_ApplicationFormState.IsCurrent, COMM_ApplicationFormState.Note, COMM_ApplicationFormState.TimeStamp, COMM_ApplicationFormState.UserStamp, COMM_WorkflowState.WorkflowState_Id, COMM_WorkflowState.Workflow_Id, COMM_WorkflowState.Name, COMM_WorkflowState.StateCode, COMM_WorkflowState.Note FROM ADM_ScenarioSelection JOIN ADM_Enrollment ON ((ADM_Enrollment.IsDeleted = 0)) AND ((ADM_ScenarioSelection.Enrollment_Id = ADM_Enrollment.Enrollment_Id)) JOIN ADM_Student ON ((ADM_Student.IsDeleted = 0)) AND ((ADM_Enrollment.Student_Id = ADM_Student.Student_Id)) JOIN ADM_Session ON (ADM_Enrollment.Session_Id = ADM_Session.Session_Id) JOIN ADM_AcademicYear ON (ADM_Session.AcademicYear_Id = ADM_AcademicYear.AcademicYear_Id) JOIN COMM_Person ON ((COMM_Person.IsDeleted = 0)) AND ((ADM_Student.Student_Id = COMM_Person.Person_Id)) JOIN COMM_PhoneList ON (COMM_Person.PhoneList_Id = COMM_PhoneList.PhoneList_Id) JOIN COMM_Phone ON (COMM_PhoneList.PhoneList_Id = COMM_Phone.PhoneList_Id) JOIN ADM_EduScenario ON (ADM_ScenarioSelection.EduScenario_Id = ADM_EduScenario.EduScenario_Id) LEFT OUTER JOIN ADM_SelectionDetails ON (ADM_ScenarioSelection.ScenarioSelection_Id = ADM_SelectionDetails.ScenarioSelection_Id) JOIN ADM_EduScenarioOptionalGrp ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioOptionalGrp.EduScenario_Id) JOIN ADM_OptionalCourseGroup ON (ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = ADM_OptionalCourseGroup.OptionalCourseGroup_Id) JOIN ADM_EduScenarioStreamGrade ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioStreamGrade.EduScenario_Id) JOIN ADM_StreamGrade ON (ADM_EduScenarioStreamGrade.StreamGrade = ADM_StreamGrade.Name) JOIN ADM_Grade ON (ADM_StreamGrade.Grade_Id = ADM_Grade.Grade_Id) JOIN ADM_CourseDefStreamGrade ON ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND (ADM_OptionalCourseGroup.OptionalCourseGroup_Id = ADM_CourseDefStreamGrade.OptionalCourseGroup_Id))) JOIN ADM_CourseDef ON (ADM_CourseDefStreamGrade.CourseDef_Id = ADM_CourseDef.CourseDef_Id) LEFT OUTER JOIN COMM_ApplicationForm ON (ADM_ScenarioSelection.ApplicationForm_Id = COMM_ApplicationForm.ApplicationForm_Id) LEFT OUTER JOIN REG_StudentRegistration ON (COMM_ApplicationForm.ApplicationForm_Id = REG_StudentRegistration.ApplicationForm_Id) LEFT OUTER JOIN COMM_Workflow ON (COMM_ApplicationForm.Workflow_Id = COMM_Workflow.Workflow_Id) LEFT OUTER JOIN COMM_ApplicationFormState ON (COMM_ApplicationForm.ApplicationForm_Id = COMM_ApplicationFormState.ApplicationForm_Id) LEFT OUTER JOIN COMM_WorkflowState ON (COMM_ApplicationFormState.WorkflowState_Id = COMM_WorkflowState.WorkflowState_Id) WHERE ((((((ADM_EduScenario.EduScenario_Id = ?) AND (ADM_Enrollment.School_Id IN(?))) AND (ADM_ScenarioSelection.ExitDate IS NULL)) AND (ADM_Enrollment.IsYearActiveEnrollment = ?)) AND ((((COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (COMM_ApplicationFormState.IsCurrent = ?)) AND (COMM_WorkflowState.StateCode <> ?)) OR (COMM_ApplicationForm.ApplicationForm_Id IS NULL))) AND (ADM_SelectionDetails.SelectionDetails_Id IS NULL))
20240806 12:00:26.168 006E =FUN= [ZQL.PhysicalConnection] Parameters: 622198871, 838, 1, 1, 0
20240806 12:00:26.168 006E =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:27.362 006E =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:27.363 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:27.376 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0009
20240806 12:00:27.377 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 251 columns, 84 rows
20240806 12:00:27.377 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0009
20240806 12:00:27.377 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0009
20240806 12:00:27.377 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:27.377 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:27.377 006E =WRN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: zcare.zdek.dbag.DBag.load took too much time: 1210 ms
20240806 12:00:27.377 006E =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.dbag.DBag.load
20240806 12:00:27.377 006E =WRN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: zcare.zlms.educationalscenario.enrollment.dataset.ElectiveScenarioStudentListDetailDataSet$Handler.handleContextChange took too much time: 1787 ms
20240806 12:00:27.377 006E =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 <- zcare.zlms.educationalscenario.enrollment.dataset.ElectiveScenarioStudentListDetailDataSet$Handler.handleContextChange
20240806 12:00:27.377 006E =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 12:00:27.377 006E =API= [CallClient] null: <= DBAG_COPY EduScenarioStudentsDetail0
20240806 12:00:27.410 006E =FUN= [CallFromClient] 1901330445:6934: InputMessage size 513
20240806 12:00:27.410 006E =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 10726
20240806 12:00:27.410 006E =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 12:00:27.540 0071 =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=42)
20240806 12:00:27.541 0071 =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:HEARTBEAT
20240806 12:00:27.541 0071 =FUN= [CallFromClient] null: Parameter FILTER_LIST=0:SQL:zmedstructure.STRUCT_SiteType:
29:Hierarchy:
8:dictionary.DIC_DictionaryEntry:
39:
33::
8:common.COMM_WorkflowState:
20:MessageDelivery:
27::
20:ApplicationFormState:
35::
5:lmsregistration.REG_StudentRegistration:
8:admin.ADM_StreamGrade:
30:
19:essionDef:
25::
19:chool:
20:enarioSelection:
18:Grade:
18:Enrollment:
19:ducationPathDef:
35:
21:ScenarioStreamGrade:
41:
29:OptionalGrp:
29::
30:
18:CourseDefStreamGrade:
27::
24::
20:mmunityMember:
27::
1:CRIPT_CACHE_CLEAR_Filter:
20240806 12:00:27.541 0071 =FUN= [CallFromClient] null: Parameter LAST_NOTIFICATION_TIME=20240806 11:57:48.720
20240806 12:00:27.541 0071 =FUN= [CallFromClient] null: Parameter LAST_NOTIFICATION_ID=1901330437
20240806 12:00:27.541 0071 =FUN= [CallFromClient] null: Parameter CurrentCallId=1019444986
20240806 12:00:27.541 0071 =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 12:00:27.541 0071 =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 12:00:27.541 0071 =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 12:00:27.541 0071 =API= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 3 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: administrator:1901330445
20240806 12:00:27.541 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:27.541 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0002 - Allocated=10, Used=1
20240806 12:00:27.541 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0002
20240806 12:00:27.607 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 12:00:27.607 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0002
20240806 12:00:27.607 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0002
20240806 12:00:27.607 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:27.607 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:27.607 0071 =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 12:00:27.607 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT TOP 5000 zdeksystem.SYS_Notification.Notification_Id, zdeksystem.SYS_Notification.SenderSession_Id, zdeksystem.SYS_Notification.SenderUser_Id, zdeksystem.SYS_Notification.EmissionTime, zdeksystem.SYS_Notification.Subject, zdeksystem.SYS_Notification.Message FROM zdeksystem.SYS_Notification WHERE ((zdeksystem.SYS_Notification.EmissionTime >= '20240806 11:57:48.721') AND (zdeksystem.SYS_Notification.EmissionTime < '20240806 11:58:55.806')) ORDER BY zdeksystem.SYS_Notification.EmissionTime ASC, zdeksystem.SYS_Notification.Notification_Id ASC;
20240806 12:00:27.607 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:27.607 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:27.607 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0008 - Allocated=10, Used=1
20240806 12:00:27.607 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0008 - SELECT TOP 5000 SYS_Notification.Notification_Id, SYS_Notification.SenderSession_Id, SYS_Notification.SenderUser_Id, SYS_Notification.EmissionTime, SYS_Notification.Subject, SYS_Notification.Message FROM SYS_Notification WHERE ((SYS_Notification.EmissionTime >= ?) AND (SYS_Notification.EmissionTime < ?)) ORDER BY SYS_Notification.EmissionTime ASC, SYS_Notification.Notification_Id ASC
20240806 12:00:27.607 0071 =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:57:48.721', '20240806 11:58:55.806'
20240806 12:00:27.607 0071 =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:27.673 0071 =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:27.673 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:27.673 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0008
20240806 12:00:27.673 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnection.endQuery : 6 columns, 9 rows
20240806 12:00:27.673 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0008
20240806 12:00:27.673 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0008
20240806 12:00:27.673 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:27.673 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:27.674 0071 =FUN= [NotificationCache] null: Cache updated, now from 20240806 11:54:38.712 to 20240806 11:58:52.364
20240806 12:00:27.674 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:27.674 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0007 - Allocated=10, Used=1
20240806 12:00:27.674 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getCpuLoadFromDb
20240806 12:00:27.695 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getCpuLoadFromDb
20240806 12:00:27.696 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0007
20240806 12:00:27.696 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0007
20240806 12:00:27.696 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:27.696 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:27.696 0071 =API= [ZDataAccess] ZDataServer: == ServerLoad: 42
20240806 12:00:27.696 0071 =API= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 3 <- zcare.zdataserver.ZDataAccess.getNotifications
20240806 12:00:27.696 0071 =API= [ZDataAccess] ZDataServer: == ServerLoad: 42
20240806 12:00:27.700 0071 =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 12:00:27.700 0071 =FUN= [CallFromClient] 1901330445:6934: InputMessage size 673
20240806 12:00:27.700 0071 =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 606
20240806 12:00:27.700 0071 =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 12:00:27.999 006F =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=42)
20240806 12:00:27.999 006F =API= [CallFromClient] null: => CACHE_UPDATE EduScenarioStudentList0 U
20240806 12:00:27.999 006F =API= [CallFromClient] null: => CACHE_UPDATE Start decoding
20240806 12:00:28.000 006F =API= [CallFromClient] null: => CACHE_UPDATE Decoded meta data
20240806 12:00:28.000 006F =DBG= [DBAG] DbagAsDBCache.notifyChange(): Table: ADM_ScenarioSelection, op U, id 209799052 
20240806 12:00:28.000 006F =DBG= [DBAG] DbagAsDBCache.notifyChange(): Table: ADM_ScenarioSelection, op U, id 2060240451 
20240806 12:00:28.000 006F =API= [CallFromClient] null: => CACHE_UPDATE notifications made
20240806 12:00:28.000 006F =INF= [DBAG] null: DBagCache DBG: Update one query.
20240806 12:00:28.000 006F =INF= [DBAG] null: DBagCache DBG: Swapped info.
20240806 12:00:28.000 006F =INF= [DBAG] null: DBagCache DBG: Removed obsolete rows.
20240806 12:00:28.000 006F =INF= [DBAG] null: DBagCache DBG: Found notifications to check.
20240806 12:00:28.000 006F =INF= [DBAG] null: DBagCache DBG: Decided notifications to consider.
20240806 12:00:28.000 006F =INF= [DBAG] null: DBagCache DBG: Querying IDs.
20240806 12:00:28.000 006F =DBG= [DBAG] DbagAsDBCache.update(): load new data query 
20240806 12:00:28.001 006F =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id, zlmsadmin.ADM_ScenarioSelection.EduScenario_Id, zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id, zlmsadmin.ADM_ScenarioSelection.Enrollment_Id, zlmsadmin.ADM_ScenarioSelection.SelectionStatus, zlmsadmin.ADM_ScenarioSelection.JoiningDate, zlmsadmin.ADM_ScenarioSelection.ExitDate, zlmsadmin.ADM_ScenarioSelection.UserStamp, zlmsadmin.ADM_ScenarioSelection.TimeStamp, zlmsadmin.ADM_ScenarioSelection.NoteHistory_Id,zlmsadmin.ADM_Enrollment.Enrollment_Id, zlmsadmin.ADM_Enrollment.School_Id, zlmsadmin.ADM_Enrollment.Student_Id, zlmsadmin.ADM_Enrollment.Session_Id, zlmsadmin.ADM_Enrollment.StreamGrade_Id, zlmsadmin.ADM_Enrollment.Community_Id, zlmsadmin.ADM_Enrollment.EnrollmentType, zlmsadmin.ADM_Enrollment.EntryType, zlmsadmin.ADM_Enrollment.EntryDate, zlmsadmin.ADM_Enrollment.TransferFromSchool_Id, zlmsadmin.ADM_Enrollment.TransferToSchool_Id, zlmsadmin.ADM_Enrollment.ExitType, zlmsadmin.ADM_Enrollment.ExitReason, zlmsadmin.ADM_Enrollment.ExitDate, zlmsadmin.ADM_Enrollment.Note, zlmsadmin.ADM_Enrollment.IsSpecialNeed, zlmsadmin.ADM_Enrollment.ExternalId, zlmsadmin.ADM_Enrollment.UserStamp, zlmsadmin.ADM_Enrollment.TimeStamp, zlmsadmin.ADM_Enrollment.RegistrationStatus, zlmsadmin.ADM_Enrollment.TransferFromEnrollment_Id, zlmsadmin.ADM_Enrollment.TransferToCommunity_Id, zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment, zlmsadmin.ADM_Enrollment.RecomputePassFail, zlmsadmin.ADM_Enrollment.MandatoryEducation, zlmsadmin.ADM_Enrollment.IsWaitingList, zlmsadmin.ADM_Enrollment.CreateTimeStamp, zlmsadmin.ADM_Enrollment.IsNotOfficialEnrollment, zlmsadmin.ADM_Enrollment.UserNote, zlmsadmin.ADM_Enrollment.DeleteType, zlmsadmin.ADM_Enrollment.IsDeleted, zlmsadmin.ADM_Enrollment.CreationUser_Id,zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationType, zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus, zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade,zlmsadmin.ADM_StreamGrade.StreamGrade_Id, zlmsadmin.ADM_StreamGrade.Name, zlmsadmin.ADM_StreamGrade.Title, zlmsadmin.ADM_StreamGrade.Grade_Id,zlmsadmin.ADM_Grade.Grade_Id, zlmsadmin.ADM_Grade.EducationPathDef_Id, zlmsadmin.ADM_Grade.Name, zlmsadmin.ADM_Grade.Title, zlmsadmin.ADM_Grade.Position, zlmsadmin.ADM_Grade.SchoolLevel, zlmsadmin.ADM_Grade.MinAge, zlmsadmin.ADM_Grade.MinSpAge, zlmsadmin.ADM_Grade.MaxAge, zlmsadmin.ADM_Grade.MaxSpAge, zlmsadmin.ADM_Grade.MinAgeMargin, zlmsadmin.ADM_Grade.MinAgeMarginUnit, zlmsadmin.ADM_Grade.MaxAgeMargin, zlmsadmin.ADM_Grade.MaxAgeMarginUnit, zlmsadmin.ADM_Grade.CapacityGroup, zlmsadmin.ADM_Grade.MinAgeMargin2, zlmsadmin.ADM_Grade.MinAgeMarginUnit2, zlmsadmin.ADM_Grade.MaxAgeMargin2, zlmsadmin.ADM_Grade.MaxAgeMarginUnit2, zlmsadmin.ADM_Grade.ExternalId, zlmsadmin.ADM_Grade.CommunityTitlePrefix, zlmsadmin.ADM_Grade.AgeReferenceDate, zlmsadmin.ADM_Grade.VStartDate, zlmsadmin.ADM_Grade.UserStamp, zlmsadmin.ADM_Grade.TimeStamp,zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id, zlmsadmin.ADM_EducationPathDef.EducationPath_Id, zlmsadmin.ADM_EducationPathDef.StartDate, zlmsadmin.ADM_EducationPathDef.EndDate, zlmsadmin.ADM_EducationPathDef.IsActive, zlmsadmin.ADM_EducationPathDef.EducationType, zlmsadmin.ADM_EducationPathDef.EducationFocus,zlmsadmin.ADM_SessionDef.SessionDef_Id, zlmsadmin.ADM_SessionDef.EducationPathDef_Id, zlmsadmin.ADM_SessionDef.Title, zlmsadmin.ADM_SessionDef.SessionType, zlmsadmin.ADM_SessionDef.Duration, zlmsadmin.ADM_SessionDef.DurationUnit, zlmsadmin.ADM_SessionDef.Parent_Id, zlmsadmin.ADM_SessionDef.Position,zlmsadmin.ADM_Session.Session_Id, zlmsadmin.ADM_Session.AcademicYear_Id, zlmsadmin.ADM_Session.SessionDef_Id, zlmsadmin.ADM_Session.Title, zlmsadmin.ADM_Session.Parent_Id, zlmsadmin.ADM_Session.StartDate, zlmsadmin.ADM_Session.EndDate, zlmsadmin.ADM_Session.Position, zlmsadmin.ADM_Session.UserStamp, zlmsadmin.ADM_Session.TimeStamp,zmedcommon.COMM_ApplicationForm.ApplicationForm_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormNumber, zmedcommon.COMM_ApplicationForm.ApplicationDate, zmedcommon.COMM_ApplicationForm.Applicant_Id, zmedcommon.COMM_ApplicationForm.Workflow_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormType, zmedcommon.COMM_ApplicationForm.Note, zmedcommon.COMM_ApplicationForm.TimeStamp, zmedcommon.COMM_ApplicationForm.UserStamp,zlmsregistration.REG_StudentRegistration.StudentRegistration_Id, zlmsregistration.REG_StudentRegistration.ApplicationForm_Id, zlmsregistration.REG_StudentRegistration.Student_Id, zlmsregistration.REG_StudentRegistration.AcademicYear_Id, zlmsregistration.REG_StudentRegistration.EducationPath_Id, zlmsregistration.REG_StudentRegistration.Enrollment_Id, zlmsregistration.REG_StudentRegistration.EducationType, zlmsregistration.REG_StudentRegistration.EducationFocus, zlmsregistration.REG_StudentRegistration.StreamGrade, zlmsregistration.REG_StudentRegistration.School_Id, zlmsregistration.REG_StudentRegistration.IsTransportRequired, zlmsregistration.REG_StudentRegistration.ExamTime, zlmsregistration.REG_StudentRegistration.ExamScore, zlmsregistration.REG_StudentRegistration.InterviewTime, zlmsregistration.REG_StudentRegistration.DocumentList_Id, zlmsregistration.REG_StudentRegistration.CitizenshipStatus, zlmsregistration.REG_StudentRegistration.ParentWorkPlace, zlmsregistration.REG_StudentRegistration.IsSpecialNeed, zlmsregistration.REG_StudentRegistration.TimeStamp, zlmsregistration.REG_StudentRegistration.UserStamp, zlmsregistration.REG_StudentRegistration.InCatchmentArea, zlmsregistration.REG_StudentRegistration.ProgramCategory_Id,zmedcommon.COMM_ApplicationFormState.ApplicationFormState_Id, zmedcommon.COMM_ApplicationFormState.WorkflowState_Id, zmedcommon.COMM_ApplicationFormState.PrevWorkflowState_Id, zmedcommon.COMM_ApplicationFormState.StateStartDate, zmedcommon.COMM_ApplicationFormState.StateEndDate, zmedcommon.COMM_ApplicationFormState.PerformedByUser_Id, zmedcommon.COMM_ApplicationFormState.AttributeList_Id, zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id, zmedcommon.COMM_ApplicationFormState.IsCurrent, zmedcommon.COMM_ApplicationFormState.Note, zmedcommon.COMM_ApplicationFormState.TimeStamp, zmedcommon.COMM_ApplicationFormState.UserStamp,zmedcommon.COMM_WorkflowState.WorkflowState_Id, zmedcommon.COMM_WorkflowState.Workflow_Id, zmedcommon.COMM_WorkflowState.Name, zmedcommon.COMM_WorkflowState.StateCode, zmedcommon.COMM_WorkflowState.Note FROM zlmsadmin.ADM_ScenarioSelection JOIN zlmsadmin.ADM_Enrollment! ON zlmsadmin.ADM_ScenarioSelection.Enrollment_Id = zlmsadmin.ADM_Enrollment.Enrollment_Id JOIN zlmsadmin.ADM_EduScenario ON zlmsadmin.ADM_ScenarioSelection.EduScenario_Id = zlmsadmin.ADM_EduScenario.EduScenario_Id JOIN zlmsadmin.ADM_EduScenarioStreamGrade ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id JOIN zlmsadmin.ADM_StreamGrade ON (zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade = zlmsadmin.ADM_StreamGrade.Name) JOIN zlmsadmin.ADM_Grade ON zlmsadmin.ADM_StreamGrade.Grade_Id = zlmsadmin.ADM_Grade.Grade_Id JOIN zlmsadmin.ADM_EducationPathDef ON ((zlmsadmin.ADM_EducationPathDef.EducationPath_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus = zlmsadmin.ADM_EducationPathDef.EducationFocus) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationType = zlmsadmin.ADM_EducationPathDef.EducationType)) JOIN zlmsadmin.ADM_SessionDef ON zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id = zlmsadmin.ADM_SessionDef.EducationPathDef_Id JOIN zlmsadmin.ADM_Session ON zlmsadmin.ADM_SessionDef.SessionDef_Id = zlmsadmin.ADM_Session.SessionDef_Id AND (((zlmsadmin.ADM_Session.AcademicYear_Id = zlmsadmin.ADM_EduScenario.AcademicYear_Id) AND (zlmsadmin.ADM_Grade.EducationPathDef_Id = zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id) AND (zlmsadmin.ADM_Session.Parent_Id IS NULL))) LEFT OUTER JOIN zmedcommon.COMM_ApplicationForm ON zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id = zmedcommon.COMM_ApplicationForm.ApplicationForm_Id LEFT OUTER JOIN zlmsregistration.REG_StudentRegistration ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zlmsregistration.REG_StudentRegistration.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationFormState ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_WorkflowState ON zmedcommon.COMM_ApplicationFormState.WorkflowState_Id = zmedcommon.COMM_WorkflowState.WorkflowState_Id WHERE (((((zlmsadmin.ADM_EduScenario.AcademicYear_Id = 2025) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id = 801)) AND (zlmsadmin.ADM_Enrollment.School_Id IN(838))) AND (((zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (zmedcommon.COMM_ApplicationFormState.IsCurrent = 1) AND (zmedcommon.COMM_WorkflowState.StateCode <> 0)) OR (zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NULL))) AND (zlmsadmin.ADM_ScenarioSelection.ExitDate IS NULL) AND (zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment = 1)) AND (zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id IN(209799052, 2060240451));
20240806 12:00:28.001 006F =API= [FunctionCheck] <App. context>: 2 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: administrator:1901330445
20240806 12:00:28.001 006F =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id, zlmsadmin.ADM_ScenarioSelection.EduScenario_Id, zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id, zlmsadmin.ADM_ScenarioSelection.Enrollment_Id, zlmsadmin.ADM_ScenarioSelection.SelectionStatus, zlmsadmin.ADM_ScenarioSelection.JoiningDate, zlmsadmin.ADM_ScenarioSelection.ExitDate, zlmsadmin.ADM_ScenarioSelection.UserStamp, zlmsadmin.ADM_ScenarioSelection.TimeStamp, zlmsadmin.ADM_ScenarioSelection.NoteHistory_Id,zlmsadmin.ADM_Enrollment.Enrollment_Id, zlmsadmin.ADM_Enrollment.School_Id, zlmsadmin.ADM_Enrollment.Student_Id, zlmsadmin.ADM_Enrollment.Session_Id, zlmsadmin.ADM_Enrollment.StreamGrade_Id, zlmsadmin.ADM_Enrollment.Community_Id, zlmsadmin.ADM_Enrollment.EnrollmentType, zlmsadmin.ADM_Enrollment.EntryType, zlmsadmin.ADM_Enrollment.EntryDate, zlmsadmin.ADM_Enrollment.TransferFromSchool_Id, zlmsadmin.ADM_Enrollment.TransferToSchool_Id, zlmsadmin.ADM_Enrollment.ExitType, zlmsadmin.ADM_Enrollment.ExitReason, zlmsadmin.ADM_Enrollment.ExitDate, zlmsadmin.ADM_Enrollment.Note, zlmsadmin.ADM_Enrollment.IsSpecialNeed, zlmsadmin.ADM_Enrollment.ExternalId, zlmsadmin.ADM_Enrollment.UserStamp, zlmsadmin.ADM_Enrollment.TimeStamp, zlmsadmin.ADM_Enrollment.RegistrationStatus, zlmsadmin.ADM_Enrollment.TransferFromEnrollment_Id, zlmsadmin.ADM_Enrollment.TransferToCommunity_Id, zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment, zlmsadmin.ADM_Enrollment.RecomputePassFail, zlmsadmin.ADM_Enrollment.MandatoryEducation, zlmsadmin.ADM_Enrollment.IsWaitingList, zlmsadmin.ADM_Enrollment.CreateTimeStamp, zlmsadmin.ADM_Enrollment.IsNotOfficialEnrollment, zlmsadmin.ADM_Enrollment.UserNote, zlmsadmin.ADM_Enrollment.DeleteType, zlmsadmin.ADM_Enrollment.IsDeleted, zlmsadmin.ADM_Enrollment.CreationUser_Id,zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationType, zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus, zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade,zlmsadmin.ADM_StreamGrade.StreamGrade_Id, zlmsadmin.ADM_StreamGrade.Name, zlmsadmin.ADM_StreamGrade.Title, zlmsadmin.ADM_StreamGrade.Grade_Id,zlmsadmin.ADM_Grade.Grade_Id, zlmsadmin.ADM_Grade.EducationPathDef_Id, zlmsadmin.ADM_Grade.Name, zlmsadmin.ADM_Grade.Title, zlmsadmin.ADM_Grade.Position, zlmsadmin.ADM_Grade.SchoolLevel, zlmsadmin.ADM_Grade.MinAge, zlmsadmin.ADM_Grade.MinSpAge, zlmsadmin.ADM_Grade.MaxAge, zlmsadmin.ADM_Grade.MaxSpAge, zlmsadmin.ADM_Grade.MinAgeMargin, zlmsadmin.ADM_Grade.MinAgeMarginUnit, zlmsadmin.ADM_Grade.MaxAgeMargin, zlmsadmin.ADM_Grade.MaxAgeMarginUnit, zlmsadmin.ADM_Grade.CapacityGroup, zlmsadmin.ADM_Grade.MinAgeMargin2, zlmsadmin.ADM_Grade.MinAgeMarginUnit2, zlmsadmin.ADM_Grade.MaxAgeMargin2, zlmsadmin.ADM_Grade.MaxAgeMarginUnit2, zlmsadmin.ADM_Grade.ExternalId, zlmsadmin.ADM_Grade.CommunityTitlePrefix, zlmsadmin.ADM_Grade.AgeReferenceDate, zlmsadmin.ADM_Grade.VStartDate, zlmsadmin.ADM_Grade.UserStamp, zlmsadmin.ADM_Grade.TimeStamp,zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id, zlmsadmin.ADM_EducationPathDef.EducationPath_Id, zlmsadmin.ADM_EducationPathDef.StartDate, zlmsadmin.ADM_EducationPathDef.EndDate, zlmsadmin.ADM_EducationPathDef.IsActive, zlmsadmin.ADM_EducationPathDef.EducationType, zlmsadmin.ADM_EducationPathDef.EducationFocus,zlmsadmin.ADM_SessionDef.SessionDef_Id, zlmsadmin.ADM_SessionDef.EducationPathDef_Id, zlmsadmin.ADM_SessionDef.Title, zlmsadmin.ADM_SessionDef.SessionType, zlmsadmin.ADM_SessionDef.Duration, zlmsadmin.ADM_SessionDef.DurationUnit, zlmsadmin.ADM_SessionDef.Parent_Id, zlmsadmin.ADM_SessionDef.Position,zlmsadmin.ADM_Session.Session_Id, zlmsadmin.ADM_Session.AcademicYear_Id, zlmsadmin.ADM_Session.SessionDef_Id, zlmsadmin.ADM_Session.Title, zlmsadmin.ADM_Session.Parent_Id, zlmsadmin.ADM_Session.StartDate, zlmsadmin.ADM_Session.EndDate, zlmsadmin.ADM_Session.Position, zlmsadmin.ADM_Session.UserStamp, zlmsadmin.ADM_Session.TimeStamp,zmedcommon.COMM_ApplicationForm.ApplicationForm_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormNumber, zmedcommon.COMM_ApplicationForm.ApplicationDate, zmedcommon.COMM_ApplicationForm.Applicant_Id, zmedcommon.COMM_ApplicationForm.Workflow_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormType, zmedcommon.COMM_ApplicationForm.Note, zmedcommon.COMM_ApplicationForm.TimeStamp, zmedcommon.COMM_ApplicationForm.UserStamp,zlmsregistration.REG_StudentRegistration.StudentRegistration_Id, zlmsregistration.REG_StudentRegistration.ApplicationForm_Id, zlmsregistration.REG_StudentRegistration.Student_Id, zlmsregistration.REG_StudentRegistration.AcademicYear_Id, zlmsregistration.REG_StudentRegistration.EducationPath_Id, zlmsregistration.REG_StudentRegistration.Enrollment_Id, zlmsregistration.REG_StudentRegistration.EducationType, zlmsregistration.REG_StudentRegistration.EducationFocus, zlmsregistration.REG_StudentRegistration.StreamGrade, zlmsregistration.REG_StudentRegistration.School_Id, zlmsregistration.REG_StudentRegistration.IsTransportRequired, zlmsregistration.REG_StudentRegistration.ExamTime, zlmsregistration.REG_StudentRegistration.ExamScore, zlmsregistration.REG_StudentRegistration.InterviewTime, zlmsregistration.REG_StudentRegistration.DocumentList_Id, zlmsregistration.REG_StudentRegistration.CitizenshipStatus, zlmsregistration.REG_StudentRegistration.ParentWorkPlace, zlmsregistration.REG_StudentRegistration.IsSpecialNeed, zlmsregistration.REG_StudentRegistration.TimeStamp, zlmsregistration.REG_StudentRegistration.UserStamp, zlmsregistration.REG_StudentRegistration.InCatchmentArea, zlmsregistration.REG_StudentRegistration.ProgramCategory_Id,zmedcommon.COMM_ApplicationFormState.ApplicationFormState_Id, zmedcommon.COMM_ApplicationFormState.WorkflowState_Id, zmedcommon.COMM_ApplicationFormState.PrevWorkflowState_Id, zmedcommon.COMM_ApplicationFormState.StateStartDate, zmedcommon.COMM_ApplicationFormState.StateEndDate, zmedcommon.COMM_ApplicationFormState.PerformedByUser_Id, zmedcommon.COMM_ApplicationFormState.AttributeList_Id, zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id, zmedcommon.COMM_ApplicationFormState.IsCurrent, zmedcommon.COMM_ApplicationFormState.Note, zmedcommon.COMM_ApplicationFormState.TimeStamp, zmedcommon.COMM_ApplicationFormState.UserStamp,zmedcommon.COMM_WorkflowState.WorkflowState_Id, zmedcommon.COMM_WorkflowState.Workflow_Id, zmedcommon.COMM_WorkflowState.Name, zmedcommon.COMM_WorkflowState.StateCode, zmedcommon.COMM_WorkflowState.Note FROM zlmsadmin.ADM_ScenarioSelection JOIN zlmsadmin.ADM_Enrollment! ON zlmsadmin.ADM_ScenarioSelection.Enrollment_Id = zlmsadmin.ADM_Enrollment.Enrollment_Id JOIN zlmsadmin.ADM_EduScenario ON zlmsadmin.ADM_ScenarioSelection.EduScenario_Id = zlmsadmin.ADM_EduScenario.EduScenario_Id JOIN zlmsadmin.ADM_EduScenarioStreamGrade ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id JOIN zlmsadmin.ADM_StreamGrade ON (zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade = zlmsadmin.ADM_StreamGrade.Name) JOIN zlmsadmin.ADM_Grade ON zlmsadmin.ADM_StreamGrade.Grade_Id = zlmsadmin.ADM_Grade.Grade_Id JOIN zlmsadmin.ADM_EducationPathDef ON ((zlmsadmin.ADM_EducationPathDef.EducationPath_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus = zlmsadmin.ADM_EducationPathDef.EducationFocus) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationType = zlmsadmin.ADM_EducationPathDef.EducationType)) JOIN zlmsadmin.ADM_SessionDef ON zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id = zlmsadmin.ADM_SessionDef.EducationPathDef_Id JOIN zlmsadmin.ADM_Session ON zlmsadmin.ADM_SessionDef.SessionDef_Id = zlmsadmin.ADM_Session.SessionDef_Id AND (((zlmsadmin.ADM_Session.AcademicYear_Id = zlmsadmin.ADM_EduScenario.AcademicYear_Id) AND (zlmsadmin.ADM_Grade.EducationPathDef_Id = zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id) AND (zlmsadmin.ADM_Session.Parent_Id IS NULL))) LEFT OUTER JOIN zmedcommon.COMM_ApplicationForm ON zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id = zmedcommon.COMM_ApplicationForm.ApplicationForm_Id LEFT OUTER JOIN zlmsregistration.REG_StudentRegistration ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zlmsregistration.REG_StudentRegistration.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationFormState ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_WorkflowState ON zmedcommon.COMM_ApplicationFormState.WorkflowState_Id = zmedcommon.COMM_WorkflowState.WorkflowState_Id WHERE (((((zlmsadmin.ADM_EduScenario.AcademicYear_Id = 2025) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id = 801)) AND (zlmsadmin.ADM_Enrollment.School_Id IN(838))) AND (((zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (zmedcommon.COMM_ApplicationFormState.IsCurrent = 1) AND (zmedcommon.COMM_WorkflowState.StateCode <> 0)) OR (zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NULL))) AND (zlmsadmin.ADM_ScenarioSelection.ExitDate IS NULL) AND (zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment = 1)) AND (zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id IN(209799052, 2060240451));
20240806 12:00:28.010 006F =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:28.011 006F =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:28.011 006F =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0003 - Allocated=10, Used=1
20240806 12:00:28.011 006F =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0003 - SELECT ADM_ScenarioSelection.ScenarioSelection_Id, ADM_ScenarioSelection.EduScenario_Id, ADM_ScenarioSelection.ApplicationForm_Id, ADM_ScenarioSelection.Enrollment_Id, ADM_ScenarioSelection.SelectionStatus, ADM_ScenarioSelection.JoiningDate, ADM_ScenarioSelection.ExitDate, ADM_ScenarioSelection.UserStamp, ADM_ScenarioSelection.TimeStamp, ADM_ScenarioSelection.NoteHistory_Id, ADM_Enrollment.Enrollment_Id, ADM_Enrollment.School_Id, ADM_Enrollment.Student_Id, ADM_Enrollment.Session_Id, ADM_Enrollment.StreamGrade_Id, ADM_Enrollment.Community_Id, ADM_Enrollment.EnrollmentType, ADM_Enrollment.EntryType, ADM_Enrollment.EntryDate, ADM_Enrollment.TransferFromSchool_Id, ADM_Enrollment.TransferToSchool_Id, ADM_Enrollment.ExitType, ADM_Enrollment.ExitReason, ADM_Enrollment.ExitDate, ADM_Enrollment.Note, ADM_Enrollment.IsSpecialNeed, ADM_Enrollment.ExternalId, ADM_Enrollment.UserStamp, ADM_Enrollment.TimeStamp, ADM_Enrollment.RegistrationStatus, ADM_Enrollment.TransferFromEnrollment_Id, ADM_Enrollment.TransferToCommunity_Id, ADM_Enrollment.IsYearActiveEnrollment, ADM_Enrollment.RecomputePassFail, ADM_Enrollment.MandatoryEducation, ADM_Enrollment.IsWaitingList, ADM_Enrollment.CreateTimeStamp, ADM_Enrollment.IsNotOfficialEnrollment, ADM_Enrollment.UserNote, ADM_Enrollment.DeleteType, ADM_Enrollment.IsDeleted, ADM_Enrollment.CreationUser_Id, ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, ADM_EduScenarioStreamGrade.EduScenario_Id, ADM_EduScenarioStreamGrade.EducationType, ADM_EduScenarioStreamGrade.EducationPath_Id, ADM_EduScenarioStreamGrade.EducationFocus, ADM_EduScenarioStreamGrade.StreamGrade, ADM_StreamGrade.StreamGrade_Id, ADM_StreamGrade.Name, ADM_StreamGrade.Title, ADM_StreamGrade.Grade_Id, ADM_Grade.Grade_Id, ADM_Grade.EducationPathDef_Id, ADM_Grade.Name, ADM_Grade.Title, ADM_Grade.Position, ADM_Grade.SchoolLevel, ADM_Grade.MinAge, ADM_Grade.MinSpAge, ADM_Grade.MaxAge, ADM_Grade.MaxSpAge, ADM_Grade.MinAgeMargin, ADM_Grade.MinAgeMarginUnit, ADM_Grade.MaxAgeMargin, ADM_Grade.MaxAgeMarginUnit, ADM_Grade.CapacityGroup, ADM_Grade.MinAgeMargin2, ADM_Grade.MinAgeMarginUnit2, ADM_Grade.MaxAgeMargin2, ADM_Grade.MaxAgeMarginUnit2, ADM_Grade.ExternalId, ADM_Grade.CommunityTitlePrefix, ADM_Grade.AgeReferenceDate, ADM_Grade.VStartDate, ADM_Grade.UserStamp, ADM_Grade.TimeStamp, ADM_EducationPathDef.EducationPathDef_Id, ADM_EducationPathDef.EducationPath_Id, ADM_EducationPathDef.StartDate, ADM_EducationPathDef.EndDate, ADM_EducationPathDef.IsActive, ADM_EducationPathDef.EducationType, ADM_EducationPathDef.EducationFocus, ADM_SessionDef.SessionDef_Id, ADM_SessionDef.EducationPathDef_Id, ADM_SessionDef.Title, ADM_SessionDef.SessionType, ADM_SessionDef.Duration, ADM_SessionDef.DurationUnit, ADM_SessionDef.Parent_Id, ADM_SessionDef.Position, ADM_Session.Session_Id, ADM_Session.AcademicYear_Id, ADM_Session.SessionDef_Id, ADM_Session.Title, ADM_Session.Parent_Id, ADM_Session.StartDate, ADM_Session.EndDate, ADM_Session.Position, ADM_Session.UserStamp, ADM_Session.TimeStamp, COMM_ApplicationForm.ApplicationForm_Id, COMM_ApplicationForm.ApplicationFormNumber, COMM_ApplicationForm.ApplicationDate, COMM_ApplicationForm.Applicant_Id, COMM_ApplicationForm.Workflow_Id, COMM_ApplicationForm.ApplicationFormType, COMM_ApplicationForm.Note, COMM_ApplicationForm.TimeStamp, COMM_ApplicationForm.UserStamp, REG_StudentRegistration.StudentRegistration_Id, REG_StudentRegistration.ApplicationForm_Id, REG_StudentRegistration.Student_Id, REG_StudentRegistration.AcademicYear_Id, REG_StudentRegistration.EducationPath_Id, REG_StudentRegistration.Enrollment_Id, REG_StudentRegistration.EducationType, REG_StudentRegistration.EducationFocus, REG_StudentRegistration.StreamGrade, REG_StudentRegistration.School_Id, REG_StudentRegistration.IsTransportRequired, REG_StudentRegistration.ExamTime, REG_StudentRegistration.ExamScore, REG_StudentRegistration.InterviewTime, REG_StudentRegistration.DocumentList_Id, REG_StudentRegistration.CitizenshipStatus, REG_StudentRegistration.ParentWorkPlace, REG_StudentRegistration.IsSpecialNeed, REG_StudentRegistration.TimeStamp, REG_StudentRegistration.UserStamp, REG_StudentRegistration.InCatchmentArea, REG_StudentRegistration.ProgramCategory_Id, COMM_ApplicationFormState.ApplicationFormState_Id, COMM_ApplicationFormState.WorkflowState_Id, COMM_ApplicationFormState.PrevWorkflowState_Id, COMM_ApplicationFormState.StateStartDate, COMM_ApplicationFormState.StateEndDate, COMM_ApplicationFormState.PerformedByUser_Id, COMM_ApplicationFormState.AttributeList_Id, COMM_ApplicationFormState.ApplicationForm_Id, COMM_ApplicationFormState.IsCurrent, COMM_ApplicationFormState.Note, COMM_ApplicationFormState.TimeStamp, COMM_ApplicationFormState.UserStamp, COMM_WorkflowState.WorkflowState_Id, COMM_WorkflowState.Workflow_Id, COMM_WorkflowState.Name, COMM_WorkflowState.StateCode, COMM_WorkflowState.Note FROM ADM_ScenarioSelection JOIN ADM_Enrollment ON ((ADM_Enrollment.IsDeleted = 0)) AND ((ADM_ScenarioSelection.Enrollment_Id = ADM_Enrollment.Enrollment_Id)) JOIN ADM_EduScenario ON (ADM_ScenarioSelection.EduScenario_Id = ADM_EduScenario.EduScenario_Id) JOIN ADM_EduScenarioStreamGrade ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioStreamGrade.EduScenario_Id) JOIN ADM_StreamGrade ON (ADM_EduScenarioStreamGrade.StreamGrade = ADM_StreamGrade.Name) JOIN ADM_Grade ON (ADM_StreamGrade.Grade_Id = ADM_Grade.Grade_Id) JOIN ADM_EducationPathDef ON (((ADM_EducationPathDef.EducationPath_Id = ADM_EduScenarioStreamGrade.EducationPath_Id) AND (ADM_EduScenarioStreamGrade.EducationFocus = ADM_EducationPathDef.EducationFocus)) AND (ADM_EduScenarioStreamGrade.EducationType = ADM_EducationPathDef.EducationType)) JOIN ADM_SessionDef ON (ADM_EducationPathDef.EducationPathDef_Id = ADM_SessionDef.EducationPathDef_Id) JOIN ADM_Session ON ((ADM_SessionDef.SessionDef_Id = ADM_Session.SessionDef_Id) AND (((ADM_Session.AcademicYear_Id = ADM_EduScenario.AcademicYear_Id) AND (ADM_Grade.EducationPathDef_Id = ADM_EducationPathDef.EducationPathDef_Id)) AND (ADM_Session.Parent_Id IS NULL))) LEFT OUTER JOIN COMM_ApplicationForm ON (ADM_ScenarioSelection.ApplicationForm_Id = COMM_ApplicationForm.ApplicationForm_Id) LEFT OUTER JOIN REG_StudentRegistration ON (COMM_ApplicationForm.ApplicationForm_Id = REG_StudentRegistration.ApplicationForm_Id) LEFT OUTER JOIN COMM_ApplicationFormState ON (COMM_ApplicationForm.ApplicationForm_Id = COMM_ApplicationFormState.ApplicationForm_Id) LEFT OUTER JOIN COMM_WorkflowState ON (COMM_ApplicationFormState.WorkflowState_Id = COMM_WorkflowState.WorkflowState_Id) WHERE (((((((ADM_EduScenario.AcademicYear_Id = ?) AND (ADM_EduScenarioStreamGrade.EducationPath_Id = ?)) AND (ADM_Enrollment.School_Id IN(?))) AND ((((COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (COMM_ApplicationFormState.IsCurrent = ?)) AND (COMM_WorkflowState.StateCode <> ?)) OR (COMM_ApplicationForm.ApplicationForm_Id IS NULL))) AND (ADM_ScenarioSelection.ExitDate IS NULL)) AND (ADM_Enrollment.IsYearActiveEnrollment = ?)) AND (ADM_ScenarioSelection.ScenarioSelection_Id IN(?, ?)))
20240806 12:00:28.011 006F =FUN= [ZQL.PhysicalConnection] Parameters: 2025, 801, 838, 1, 0, 1, 209799052, 2060240451
20240806 12:00:28.011 006F =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:28.079 006F =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:28.079 006F =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:28.079 006F =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0003
20240806 12:00:28.079 006F =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.endQuery : 158 columns, 2 rows
20240806 12:00:28.079 006F =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0003
20240806 12:00:28.080 006F =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0003
20240806 12:00:28.080 006F =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:28.080 006F =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:28.080 006F =API= [FunctionCheck] <App. context>: 2 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 12:00:28.080 006F =API= [DATAPROXY] sqlSelect:Result: 0: C, 158 cols, 2 rows
20240806 12:00:28.080 006F =DBG= [DBAG] DBagAsBCache.loadquery: loaded 11 entities
20240806 12:00:28.080 006F =INF= [DBAG] null: DBagCache DBG: All dones.
20240806 12:00:28.080 006F =INF= [DBAG] null: DBagCache DBG: Sending notification.
20240806 12:00:28.080 006F =DBG= [DBAG] DbagAsDBCache.update(): modification -> send CACHE_UPDATE_NOTIF
20240806 12:00:28.080 006F =INF= [DBAG] null: DBagCache DBG: Sending notification.
20240806 12:00:28.080 006F =INF= [DBAG] null: DBagCache DBG: Sent notification.
20240806 12:00:28.080 006F =API= [CallFromClient] null: => CACHE_UPDATE All done
20240806 12:00:28.080 006F =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:NO_OP
20240806 12:00:28.080 006F =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 12:00:28.080 006F =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 12:00:28.080 006F =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 12:00:28.080 006F =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 12:00:28.080 006F =API= [CallClient] null: <= CACHE_UPDATE EduScenarioStudentList0
20240806 12:00:28.081 006F =FUN= [CallFromClient] 1901330445:6934: InputMessage size 3090
20240806 12:00:28.081 006F =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 3232
20240806 12:00:28.081 006F =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 12:00:28.090 006E =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=42)
20240806 12:00:28.090 006E =API= [CallFromClient] null: => CACHE_UPDATE MESSAGE_LIST0 U
20240806 12:00:28.090 006E =API= [CallFromClient] null: => CACHE_UPDATE Start decoding
20240806 12:00:28.090 006E =API= [CallFromClient] null: => CACHE_UPDATE Decoded meta data
20240806 12:00:28.090 006E =DBG= [DBAG] DbagAsDBCache.notifyChange(): Table: COMM_Message, op I, id 1901330437 
20240806 12:00:28.090 006E =DBG= [DBAG] DbagAsDBCache.notifyChange(): Table: COMM_Message, op I, id 1901330439 
20240806 12:00:28.090 006E =API= [CallFromClient] null: => CACHE_UPDATE notifications made
20240806 12:00:28.090 006E =INF= [DBAG] null: DBagCache DBG: Update one query.
20240806 12:00:28.091 006E =INF= [DBAG] null: DBagCache DBG: Swapped info.
20240806 12:00:28.091 006E =INF= [DBAG] null: DBagCache DBG: Removed obsolete rows.
20240806 12:00:28.091 006E =INF= [DBAG] null: DBagCache DBG: Found notifications to check.
20240806 12:00:28.091 006E =INF= [DBAG] null: DBagCache DBG: checking filter for: COMM_Message
20240806 12:00:28.091 006E =API= [DATAPROXY] sqlSelect:Query: 0: SELECT zmedcommon.COMM_MessageDelivery.Message_Id, zmedcommon.COMM_MessageDelivery.DestinationUser_Id FROM zmedcommon.COMM_MessageDelivery WHERE (zmedcommon.COMM_MessageDelivery.Message_Id IN(1901330437, 1901330439));
20240806 12:00:28.091 006E =API= [FunctionCheck] <App. context>: 2 -> zcare.zdataserver.ZDataAccess.sqlSelect : Ticket: administrator:1901330445
20240806 12:00:28.091 006E =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zmedcommon.COMM_MessageDelivery.Message_Id, zmedcommon.COMM_MessageDelivery.DestinationUser_Id FROM zmedcommon.COMM_MessageDelivery WHERE (zmedcommon.COMM_MessageDelivery.Message_Id IN(1901330437, 1901330439));
20240806 12:00:28.091 006E =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:28.091 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:28.091 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0010 - Allocated=10, Used=1
20240806 12:00:28.091 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0010 - SELECT COMM_MessageDelivery.Message_Id, COMM_MessageDelivery.DestinationUser_Id FROM COMM_MessageDelivery WHERE (COMM_MessageDelivery.Message_Id IN(?, ?))
20240806 12:00:28.091 006E =FUN= [ZQL.PhysicalConnection] Parameters: 1901330437, 1901330439
20240806 12:00:28.091 006E =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:28.137 006E =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:28.137 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:28.137 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0010
20240806 12:00:28.138 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.endQuery : 2 columns, 6 rows
20240806 12:00:28.138 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0010
20240806 12:00:28.138 006E =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0010
20240806 12:00:28.138 006E =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:28.138 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:28.138 006E =API= [FunctionCheck] <App. context>: 2 <- zcare.zdataserver.ZDataAccess.sqlSelect
20240806 12:00:28.138 006E =API= [DATAPROXY] sqlSelect:Result: 0: C, 2 cols, 6 rows
20240806 12:00:28.138 006E =INF= [DBAG] null: DBagCache DBG: checking filter for: COMM_Message
20240806 12:00:28.138 006E =INF= [DBAG] null: DBagCache DBG: Decided notifications to consider.
20240806 12:00:28.138 006E =INF= [DBAG] null: DBagCache DBG: All dones.
20240806 12:00:28.138 006E =INF= [DBAG] null: DBagCache DBG: Update one query.
20240806 12:00:28.138 006E =INF= [DBAG] null: DBagCache DBG: Swapped info.
20240806 12:00:28.138 006E =INF= [DBAG] null: DBagCache DBG: Removed obsolete rows.
20240806 12:00:28.138 006E =INF= [DBAG] null: DBagCache DBG: Found notifications to check.
20240806 12:00:28.138 006E =INF= [DBAG] null: DBagCache DBG: checking filter for: COMM_Message
20240806 12:00:28.138 006E =INF= [DBAG] null: DBagCache DBG: checking filter for: COMM_Message
20240806 12:00:28.138 006E =INF= [DBAG] null: DBagCache DBG: Decided notifications to consider.
20240806 12:00:28.138 006E =INF= [DBAG] null: DBagCache DBG: All dones.
20240806 12:00:28.138 006E =API= [CallFromClient] null: => CACHE_UPDATE All done
20240806 12:00:28.138 006E =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:NO_OP
20240806 12:00:28.138 006E =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 12:00:28.138 006E =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 12:00:28.138 006E =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 12:00:28.138 006E =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 12:00:28.138 006E =API= [CallClient] null: <= CACHE_UPDATE MESSAGE_LIST0
20240806 12:00:28.138 006E =FUN= [CallFromClient] 1901330445:6934: InputMessage size 1685
20240806 12:00:28.138 006E =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 49
20240806 12:00:28.138 006E =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 12:00:34.048 009B =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdataserver.SystemSession.heartbeat
20240806 12:00:34.049 009B =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.dbag.DBag.load
20240806 12:00:34.049 009B =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zdeksystem.SYS_Session.Session_Id, zdeksystem.SYS_Session.User_Id, zdeksystem.SYS_Session.UserName, zdeksystem.SYS_Session.Token, zdeksystem.SYS_Session.LastCallTime, zdeksystem.SYS_Session.ManagingServerName, zdeksystem.SYS_Session.ManagingServerPort, zdeksystem.SYS_Session.LastProcessedNotification_Id, zdeksystem.SYS_Session.LastProcessedNotificationTime, zdeksystem.SYS_Session.DataServerClientIP, zdeksystem.SYS_Session.DataServerClientDetails, zdeksystem.SYS_Session.OriginatorClientIP, zdeksystem.SYS_Session.OriginatorClientDetails, zdeksystem.SYS_Session.PermanentSession_Id, zdeksystem.SYS_Session.Locale, zdeksystem.SYS_Session.ValidationToken,zdeksystem.SYS_PermanentSession.PermanentSession_Id, zdeksystem.SYS_PermanentSession.Name, zdeksystem.SYS_PermanentSession.LastAcknowledegedNotif_Id, zdeksystem.SYS_PermanentSession.LastAcknowledgedNotifTime FROM zdeksystem.SYS_Session LEFT OUTER JOIN zdeksystem.SYS_PermanentSession ON zdeksystem.SYS_Session.PermanentSession_Id = zdeksystem.SYS_PermanentSession.PermanentSession_Id WHERE (zdeksystem.SYS_Session.Session_Id = 1901330433);
20240806 12:00:34.049 009B =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:34.049 009B =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:34.049 009B =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0011 - Allocated=10, Used=1
20240806 12:00:34.049 009B =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0011 - SELECT SYS_Session.Session_Id, SYS_Session.User_Id, SYS_Session.UserName, SYS_Session.Token, SYS_Session.LastCallTime, SYS_Session.ManagingServerName, SYS_Session.ManagingServerPort, SYS_Session.LastProcessedNotification_Id, SYS_Session.LastProcessedNotificationTime, SYS_Session.DataServerClientIP, SYS_Session.DataServerClientDetails, SYS_Session.OriginatorClientIP, SYS_Session.OriginatorClientDetails, SYS_Session.PermanentSession_Id, SYS_Session.Locale, SYS_Session.ValidationToken, SYS_PermanentSession.PermanentSession_Id, SYS_PermanentSession.Name, SYS_PermanentSession.LastAcknowledegedNotif_Id, SYS_PermanentSession.LastAcknowledgedNotifTime FROM SYS_Session LEFT OUTER JOIN SYS_PermanentSession ON (SYS_Session.PermanentSession_Id = SYS_PermanentSession.PermanentSession_Id) WHERE (SYS_Session.Session_Id = ?)
20240806 12:00:34.049 009B =FUN= [ZQL.PhysicalConnection] Parameters: 1901330433
20240806 12:00:34.049 009B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:34.123 009B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:34.123 009B =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:34.124 009B =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0011
20240806 12:00:34.124 009B =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.endQuery : 20 columns, 1 rows
20240806 12:00:34.124 009B =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0011
20240806 12:00:34.124 009B =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0011
20240806 12:00:34.124 009B =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:34.124 009B =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:34.124 009B =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.dbag.DBag.load
20240806 12:00:34.124 009B =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:34.124 009B =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0014 - Allocated=10, Used=1
20240806 12:00:34.124 009B =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0014
20240806 12:00:34.149 009B =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 12:00:34.149 009B =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0014
20240806 12:00:34.149 009B =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0014
20240806 12:00:34.149 009B =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:34.149 009B =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:34.149 009B =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 12:00:34.149 009B =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT TOP 5000 zdeksystem.SYS_Notification.Notification_Id, zdeksystem.SYS_Notification.SenderSession_Id, zdeksystem.SYS_Notification.SenderUser_Id, zdeksystem.SYS_Notification.EmissionTime, zdeksystem.SYS_Notification.Subject, zdeksystem.SYS_Notification.Message FROM zdeksystem.SYS_Notification WHERE ((zdeksystem.SYS_Notification.EmissionTime >= '20240806 11:58:52.364') AND (zdeksystem.SYS_Notification.EmissionTime < '20240806 11:59:02.339')) ORDER BY zdeksystem.SYS_Notification.EmissionTime ASC, zdeksystem.SYS_Notification.Notification_Id ASC;
20240806 12:00:34.149 009B =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:34.150 009B =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:34.150 009B =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0012 - Allocated=10, Used=1
20240806 12:00:34.150 009B =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0012 - SELECT TOP 5000 SYS_Notification.Notification_Id, SYS_Notification.SenderSession_Id, SYS_Notification.SenderUser_Id, SYS_Notification.EmissionTime, SYS_Notification.Subject, SYS_Notification.Message FROM SYS_Notification WHERE ((SYS_Notification.EmissionTime >= ?) AND (SYS_Notification.EmissionTime < ?)) ORDER BY SYS_Notification.EmissionTime ASC, SYS_Notification.Notification_Id ASC
20240806 12:00:34.150 009B =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:58:52.364', '20240806 11:59:02.339'
20240806 12:00:34.150 009B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:34.245 009B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:34.245 009B =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:34.245 009B =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0012
20240806 12:00:34.245 009B =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnection.endQuery : 6 columns, 0 rows
20240806 12:00:34.245 009B =FUN= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0012
20240806 12:00:34.245 009B =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0012
20240806 12:00:34.245 009B =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:34.245 009B =FUN= [FunctionCheck] <App. context>: 2 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:34.245 009B =FUN= [NotificationCache] null: Cache updated, now from 20240806 11:54:38.712 to 20240806 11:58:52.364
20240806 12:00:34.247 009B =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdataserver.SystemSession.heartbeat
20240806 12:00:34.649 006B =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=42)
20240806 12:00:34.650 006B =API= [CallFromClient] null: => DBAG_COPY DIALOG_MANAGER_DATA
20240806 12:00:34.650 006B =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:CONTEXT_CHANGES
20240806 12:00:34.650 006B =FUN= [CallFromClient] null: Parameter FROM_CTX=S_Assign Students to Scenarios
20240806 12:00:34.650 006B =FUN= [CallFromClient] null: Parameter DATA_SET=EduScenariosAssigmentBanner0
20240806 12:00:34.650 006B =FUN= [CallFromClient] null: Parameter HANDLER_NAME=EDU_SCENARIO_ASSIGN_BANNER
20240806 12:00:34.650 006B =FUN= [CallFromClient] null: Parameter P1=-2194|3|1|EDU_SCENARIO_ID|622198869
20240806 12:00:34.650 006B =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 12:00:34.650 006B =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 12:00:34.650 006B =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 12:00:34.650 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 -> zcare.zdek.dbag.DBag.load
20240806 12:00:34.650 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationType, zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus, zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade FROM zlmsadmin.ADM_EduScenario JOIN zlmsadmin.ADM_EduScenarioStreamGrade ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id WHERE (zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198869);
20240806 12:00:34.650 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:34.651 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:34.651 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0013 - Allocated=10, Used=1
20240806 12:00:34.651 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0013 - SELECT ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, ADM_EduScenarioStreamGrade.EduScenario_Id, ADM_EduScenarioStreamGrade.EducationType, ADM_EduScenarioStreamGrade.EducationPath_Id, ADM_EduScenarioStreamGrade.EducationFocus, ADM_EduScenarioStreamGrade.StreamGrade FROM ADM_EduScenario JOIN ADM_EduScenarioStreamGrade ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioStreamGrade.EduScenario_Id) WHERE (ADM_EduScenario.EduScenario_Id = ?)
20240806 12:00:34.651 006B =FUN= [ZQL.PhysicalConnection] Parameters: 622198869
20240806 12:00:34.651 006B =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:34.754 006B =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:34.754 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:34.754 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0013
20240806 12:00:34.754 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnection.endQuery : 14 columns, 1 rows
20240806 12:00:34.754 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0013
20240806 12:00:34.754 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0013
20240806 12:00:34.754 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:34.754 006B =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:34.754 006B =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 <- zcare.zdek.dbag.DBag.load
20240806 12:00:34.754 006B =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 12:00:34.754 006B =API= [CallClient] null: <= DBAG_COPY EduScenariosAssigmentBanner0
20240806 12:00:34.754 006B =FUN= [CallFromClient] 1901330445:6934: InputMessage size 446
20240806 12:00:34.754 006B =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 352
20240806 12:00:34.754 006B =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 12:00:34.774 0071 =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=42)
20240806 12:00:34.774 0071 =API= [CallFromClient] null: => DBAG_COPY DIALOG_MANAGER_DATA
20240806 12:00:34.774 0071 =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:CONTEXT_CHANGES
20240806 12:00:34.774 0071 =FUN= [CallFromClient] null: Parameter FROM_CTX=D_EduScenarioStudentList0
20240806 12:00:34.774 0071 =FUN= [CallFromClient] null: Parameter DATA_SET=EduScenariosAssigmentBanner0
20240806 12:00:34.774 0071 =FUN= [CallFromClient] null: Parameter HANDLER_NAME=EDU_SCENARIO_ASSIGN_BANNER
20240806 12:00:34.774 0071 =FUN= [CallFromClient] null: Parameter P1=-2194|3|1|EDU_SCENARIO_ID|622198869
20240806 12:00:34.774 0071 =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 12:00:34.775 0071 =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 12:00:34.775 0071 =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 12:00:34.775 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 -> zcare.zdek.dbag.DBag.load
20240806 12:00:34.775 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationType, zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus, zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade FROM zlmsadmin.ADM_EduScenario JOIN zlmsadmin.ADM_EduScenarioStreamGrade ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id WHERE (zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198869);
20240806 12:00:34.775 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:34.775 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:34.775 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0009 - Allocated=10, Used=1
20240806 12:00:34.775 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0009 - SELECT ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, ADM_EduScenarioStreamGrade.EduScenario_Id, ADM_EduScenarioStreamGrade.EducationType, ADM_EduScenarioStreamGrade.EducationPath_Id, ADM_EduScenarioStreamGrade.EducationFocus, ADM_EduScenarioStreamGrade.StreamGrade FROM ADM_EduScenario JOIN ADM_EduScenarioStreamGrade ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioStreamGrade.EduScenario_Id) WHERE (ADM_EduScenario.EduScenario_Id = ?)
20240806 12:00:34.775 0071 =FUN= [ZQL.PhysicalConnection] Parameters: 622198869
20240806 12:00:34.775 0071 =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:34.945 0071 =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:34.946 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:34.946 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0009
20240806 12:00:34.946 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnection.endQuery : 14 columns, 1 rows
20240806 12:00:34.946 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0009
20240806 12:00:34.946 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0009
20240806 12:00:34.946 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:34.946 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:34.946 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 <- zcare.zdek.dbag.DBag.load
20240806 12:00:34.946 0071 =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 12:00:34.946 0071 =API= [CallClient] null: <= DBAG_COPY EduScenariosAssigmentBanner0
20240806 12:00:34.946 0071 =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:CONTEXT_CHANGES
20240806 12:00:34.946 0071 =FUN= [CallFromClient] null: Parameter FROM_CTX=D_EduScenarioStudentList0
20240806 12:00:34.946 0071 =FUN= [CallFromClient] null: Parameter DATA_SET=EduScenarioStudentsDetail0
20240806 12:00:34.946 0071 =FUN= [CallFromClient] null: Parameter HANDLER_NAME=EDU_SCENARIO_STUDENTS_DETAIL
20240806 12:00:34.946 0071 =FUN= [CallFromClient] null: Parameter P1=-2466|3|1|EDU_SCENARIO_ID|622198869
20240806 12:00:34.946 0071 =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 12:00:34.946 0071 =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 12:00:34.947 0071 =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 12:00:34.947 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 -> zcare.zlms.educationalscenario.enrollment.dataset.ElectiveScenarioStudentListDetailDataSet$Handler.handleContextChange
20240806 12:00:34.955 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.dbag.DBag.load
20240806 12:00:34.955 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id, zlmsadmin.ADM_ScenarioSelection.EduScenario_Id, zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id, zlmsadmin.ADM_ScenarioSelection.Enrollment_Id, zlmsadmin.ADM_ScenarioSelection.SelectionStatus, zlmsadmin.ADM_ScenarioSelection.JoiningDate, zlmsadmin.ADM_ScenarioSelection.ExitDate, zlmsadmin.ADM_ScenarioSelection.UserStamp, zlmsadmin.ADM_ScenarioSelection.TimeStamp, zlmsadmin.ADM_ScenarioSelection.NoteHistory_Id,zlmsadmin.ADM_SelectionDetails.SelectionDetails_Id, zlmsadmin.ADM_SelectionDetails.ScenarioSelection_Id, zlmsadmin.ADM_SelectionDetails.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_SelectionDetails.CourseDefCode, zlmsadmin.ADM_SelectionDetails.NumberOfPeriods, zlmsadmin.ADM_SelectionDetails.UserStamp, zlmsadmin.ADM_SelectionDetails.TimeStamp,zlmsadmin.ADM_Enrollment.Enrollment_Id, zlmsadmin.ADM_Enrollment.School_Id, zlmsadmin.ADM_Enrollment.Student_Id, zlmsadmin.ADM_Enrollment.Session_Id, zlmsadmin.ADM_Enrollment.StreamGrade_Id, zlmsadmin.ADM_Enrollment.Community_Id, zlmsadmin.ADM_Enrollment.EnrollmentType, zlmsadmin.ADM_Enrollment.EntryType, zlmsadmin.ADM_Enrollment.EntryDate, zlmsadmin.ADM_Enrollment.TransferFromSchool_Id, zlmsadmin.ADM_Enrollment.TransferToSchool_Id, zlmsadmin.ADM_Enrollment.ExitType, zlmsadmin.ADM_Enrollment.ExitReason, zlmsadmin.ADM_Enrollment.ExitDate, zlmsadmin.ADM_Enrollment.Note, zlmsadmin.ADM_Enrollment.IsSpecialNeed, zlmsadmin.ADM_Enrollment.ExternalId, zlmsadmin.ADM_Enrollment.UserStamp, zlmsadmin.ADM_Enrollment.TimeStamp, zlmsadmin.ADM_Enrollment.RegistrationStatus, zlmsadmin.ADM_Enrollment.TransferFromEnrollment_Id, zlmsadmin.ADM_Enrollment.TransferToCommunity_Id, zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment, zlmsadmin.ADM_Enrollment.RecomputePassFail, zlmsadmin.ADM_Enrollment.MandatoryEducation, zlmsadmin.ADM_Enrollment.IsWaitingList, zlmsadmin.ADM_Enrollment.CreateTimeStamp, zlmsadmin.ADM_Enrollment.IsNotOfficialEnrollment, zlmsadmin.ADM_Enrollment.UserNote, zlmsadmin.ADM_Enrollment.DeleteType, zlmsadmin.ADM_Enrollment.IsDeleted, zlmsadmin.ADM_Enrollment.CreationUser_Id,zmedcommon.COMM_ApplicationForm.ApplicationForm_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormNumber, zmedcommon.COMM_ApplicationForm.ApplicationDate, zmedcommon.COMM_ApplicationForm.Applicant_Id, zmedcommon.COMM_ApplicationForm.Workflow_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormType, zmedcommon.COMM_ApplicationForm.Note, zmedcommon.COMM_ApplicationForm.TimeStamp, zmedcommon.COMM_ApplicationForm.UserStamp,zlmsregistration.REG_StudentRegistration.StudentRegistration_Id, zlmsregistration.REG_StudentRegistration.ApplicationForm_Id, zlmsregistration.REG_StudentRegistration.Student_Id, zlmsregistration.REG_StudentRegistration.AcademicYear_Id, zlmsregistration.REG_StudentRegistration.EducationPath_Id, zlmsregistration.REG_StudentRegistration.Enrollment_Id, zlmsregistration.REG_StudentRegistration.EducationType, zlmsregistration.REG_StudentRegistration.EducationFocus, zlmsregistration.REG_StudentRegistration.StreamGrade, zlmsregistration.REG_StudentRegistration.School_Id, zlmsregistration.REG_StudentRegistration.IsTransportRequired, zlmsregistration.REG_StudentRegistration.ExamTime, zlmsregistration.REG_StudentRegistration.ExamScore, zlmsregistration.REG_StudentRegistration.InterviewTime, zlmsregistration.REG_StudentRegistration.DocumentList_Id, zlmsregistration.REG_StudentRegistration.CitizenshipStatus, zlmsregistration.REG_StudentRegistration.ParentWorkPlace, zlmsregistration.REG_StudentRegistration.IsSpecialNeed, zlmsregistration.REG_StudentRegistration.TimeStamp, zlmsregistration.REG_StudentRegistration.UserStamp, zlmsregistration.REG_StudentRegistration.InCatchmentArea, zlmsregistration.REG_StudentRegistration.ProgramCategory_Id,zmedcommon.COMM_Workflow.Workflow_Id, zmedcommon.COMM_Workflow.Name, zmedcommon.COMM_Workflow.Code, zmedcommon.COMM_Workflow.Note,zmedcommon.COMM_ApplicationFormState.ApplicationFormState_Id, zmedcommon.COMM_ApplicationFormState.WorkflowState_Id, zmedcommon.COMM_ApplicationFormState.PrevWorkflowState_Id, zmedcommon.COMM_ApplicationFormState.StateStartDate, zmedcommon.COMM_ApplicationFormState.StateEndDate, zmedcommon.COMM_ApplicationFormState.PerformedByUser_Id, zmedcommon.COMM_ApplicationFormState.AttributeList_Id, zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id, zmedcommon.COMM_ApplicationFormState.IsCurrent, zmedcommon.COMM_ApplicationFormState.Note, zmedcommon.COMM_ApplicationFormState.TimeStamp, zmedcommon.COMM_ApplicationFormState.UserStamp,zmedcommon.COMM_WorkflowState.WorkflowState_Id, zmedcommon.COMM_WorkflowState.Workflow_Id, zmedcommon.COMM_WorkflowState.Name, zmedcommon.COMM_WorkflowState.StateCode, zmedcommon.COMM_WorkflowState.Note,zlmsadmin.ADM_Student.Student_Id, zlmsadmin.ADM_Student.StudentNumber, zlmsadmin.ADM_Student.CreationDate, zlmsadmin.ADM_Student.CreationUser_Id, zlmsadmin.ADM_Student.UserStamp, zlmsadmin.ADM_Student.TimeStamp, zlmsadmin.ADM_Student.IsDeleted, zlmsadmin.ADM_Student.AttributeList_Id, zlmsadmin.ADM_Student.CitizenshipStatus,zmedcommon.COMM_Person.Person_Id, zmedcommon.COMM_Person.Civility, zmedcommon.COMM_Person.IDNumber, zmedcommon.COMM_Person.FirstName, zmedcommon.COMM_Person.SecondName, zmedcommon.COMM_Person.ThirdName, zmedcommon.COMM_Person.FourthName, zmedcommon.COMM_Person.FamilyName, zmedcommon.COMM_Person.EnglishFirstName, zmedcommon.COMM_Person.EnglishSecondName, zmedcommon.COMM_Person.EnglishThirdName, zmedcommon.COMM_Person.EnglishFourthName, zmedcommon.COMM_Person.EnglishFamilyName, zmedcommon.COMM_Person.BirthName, zmedcommon.COMM_Person.BirthDate, zmedcommon.COMM_Person.BirthCity, zmedcommon.COMM_Person.EnglishBirthCity, zmedcommon.COMM_Person.BirthCountry, zmedcommon.COMM_Person.Nationality, zmedcommon.COMM_Person.Gender, zmedcommon.COMM_Person.MaritalStatus, zmedcommon.COMM_Person.Photo_Id, zmedcommon.COMM_Person.Religion, zmedcommon.COMM_Person.ReligionSector, zmedcommon.COMM_Person.PhoneList_Id, zmedcommon.COMM_Person.AddressList_Id, zmedcommon.COMM_Person.OtherIdList_Id, zmedcommon.COMM_Person.IsDeleted, zmedcommon.COMM_Person.ExternalId, zmedcommon.COMM_Person.UserStamp, zmedcommon.COMM_Person.TimeStamp, zmedcommon.COMM_Person.User_Id, zmedcommon.COMM_Person.InformationSource, zmedcommon.COMM_Person.LastSyncTime, zmedcommon.COMM_Person.IsTemporary, zmedcommon.COMM_Person.VStartDate,zmedcommon.COMM_PhoneList.PhoneList_Id,zmedcommon.COMM_Phone.Phone_Id, zmedcommon.COMM_Phone.PhoneList_Id, zmedcommon.COMM_Phone.Name, zmedcommon.COMM_Phone.Value, zmedcommon.COMM_Phone.Note, zmedcommon.COMM_Phone.IsPrivate, zmedcommon.COMM_Phone.IsPrimary, zmedcommon.COMM_Phone.ContactType,zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.CourseDefCodes, zlmsadmin.ADM_EduScenarioOptionalGrp.NumberOfPeriods, zlmsadmin.ADM_EduScenarioOptionalGrp.type,zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id, zlmsadmin.ADM_OptionalCourseGroup.Name, zlmsadmin.ADM_OptionalCourseGroup.MinimumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.MaximumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.IsSelectedByStudent,zlmsadmin.ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationType, zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus, zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade,zlmsadmin.ADM_StreamGrade.StreamGrade_Id, zlmsadmin.ADM_StreamGrade.Name, zlmsadmin.ADM_StreamGrade.Title, zlmsadmin.ADM_StreamGrade.Grade_Id,zlmsadmin.ADM_Grade.Grade_Id, zlmsadmin.ADM_Grade.EducationPathDef_Id, zlmsadmin.ADM_Grade.Name, zlmsadmin.ADM_Grade.Title, zlmsadmin.ADM_Grade.Position, zlmsadmin.ADM_Grade.SchoolLevel, zlmsadmin.ADM_Grade.MinAge, zlmsadmin.ADM_Grade.MinSpAge, zlmsadmin.ADM_Grade.MaxAge, zlmsadmin.ADM_Grade.MaxSpAge, zlmsadmin.ADM_Grade.MinAgeMargin, zlmsadmin.ADM_Grade.MinAgeMarginUnit, zlmsadmin.ADM_Grade.MaxAgeMargin, zlmsadmin.ADM_Grade.MaxAgeMarginUnit, zlmsadmin.ADM_Grade.CapacityGroup, zlmsadmin.ADM_Grade.MinAgeMargin2, zlmsadmin.ADM_Grade.MinAgeMarginUnit2, zlmsadmin.ADM_Grade.MaxAgeMargin2, zlmsadmin.ADM_Grade.MaxAgeMarginUnit2, zlmsadmin.ADM_Grade.ExternalId, zlmsadmin.ADM_Grade.CommunityTitlePrefix, zlmsadmin.ADM_Grade.AgeReferenceDate, zlmsadmin.ADM_Grade.VStartDate, zlmsadmin.ADM_Grade.UserStamp, zlmsadmin.ADM_Grade.TimeStamp,zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id, zlmsadmin.ADM_EducationPathDef.EducationPath_Id, zlmsadmin.ADM_EducationPathDef.StartDate, zlmsadmin.ADM_EducationPathDef.EndDate, zlmsadmin.ADM_EducationPathDef.IsActive, zlmsadmin.ADM_EducationPathDef.EducationType, zlmsadmin.ADM_EducationPathDef.EducationFocus,zlmsadmin.ADM_SessionDef.SessionDef_Id, zlmsadmin.ADM_SessionDef.EducationPathDef_Id, zlmsadmin.ADM_SessionDef.Title, zlmsadmin.ADM_SessionDef.SessionType, zlmsadmin.ADM_SessionDef.Duration, zlmsadmin.ADM_SessionDef.DurationUnit, zlmsadmin.ADM_SessionDef.Parent_Id, zlmsadmin.ADM_SessionDef.Position,zlmsadmin.ADM_Session.Session_Id, zlmsadmin.ADM_Session.AcademicYear_Id, zlmsadmin.ADM_Session.SessionDef_Id, zlmsadmin.ADM_Session.Title, zlmsadmin.ADM_Session.Parent_Id, zlmsadmin.ADM_Session.StartDate, zlmsadmin.ADM_Session.EndDate, zlmsadmin.ADM_Session.Position, zlmsadmin.ADM_Session.UserStamp, zlmsadmin.ADM_Session.TimeStamp,zlmsadmin.ADM_CourseDefStreamGrade.CourseDefStreamGrade_Id, zlmsadmin.ADM_CourseDefStreamGrade.CourseDef_Id, zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id, zlmsadmin.ADM_CourseDefStreamGrade.IsOptional, zlmsadmin.ADM_CourseDefStreamGrade.OptionalCourseGroup_Id,zlmsadmin.ADM_CourseDef.CourseDef_Id, zlmsadmin.ADM_CourseDef.EducationPathDef_Id, zlmsadmin.ADM_CourseDef.SessionDef_Id, zlmsadmin.ADM_CourseDef.TeachingSubject, zlmsadmin.ADM_CourseDef.TeachingLanguage, zlmsadmin.ADM_CourseDef.Title, zlmsadmin.ADM_CourseDef.NumberOfPeriods, zlmsadmin.ADM_CourseDef.NumberOfPeriodsPerWeek, zlmsadmin.ADM_CourseDef.PeriodDuration, zlmsadmin.ADM_CourseDef.PeriodDurationUnit, zlmsadmin.ADM_CourseDef.SlotColor, zlmsadmin.ADM_CourseDef.StudentGender, zlmsadmin.ADM_CourseDef.IsAcademic, zlmsadmin.ADM_CourseDef.Code, zlmsadmin.ADM_CourseDef.Position, zlmsadmin.ADM_CourseDef.CourseWeight, zlmsadmin.ADM_CourseDef.PassScore, zlmsadmin.ADM_CourseDef.OtherTitle, zlmsadmin.ADM_CourseDef.isTermBasedCourse, zlmsadmin.ADM_CourseDef.Department, zlmsadmin.ADM_CourseDef.UserStamp, zlmsadmin.ADM_CourseDef.TimeStamp,zlmsadmin.ADM_AcademicYear.AcademicYear_Id, zlmsadmin.ADM_AcademicYear.Title, zlmsadmin.ADM_AcademicYear.IsCurrent, zlmsadmin.ADM_AcademicYear.Status, zlmsadmin.ADM_AcademicYear.POSITION,zmedcommon.COMM_NoteHistory.NoteHistory_Id,zmedcommon.COMM_Note.Note_Id, zmedcommon.COMM_Note.NoteHistory_Id, zmedcommon.COMM_Note.Text, zmedcommon.COMM_Note.User_Id, zmedcommon.COMM_Note.NoteDate, zmedcommon.COMM_Note.Status, zmedcommon.COMM_Note.UserStamp, zmedcommon.COMM_Note.TimeStamp FROM zlmsadmin.ADM_ScenarioSelection JOIN zlmsadmin.ADM_SelectionDetails ON zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id = zlmsadmin.ADM_SelectionDetails.ScenarioSelection_Id JOIN zlmsadmin.ADM_Enrollment! ON zlmsadmin.ADM_ScenarioSelection.Enrollment_Id = zlmsadmin.ADM_Enrollment.Enrollment_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationForm ON zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id = zmedcommon.COMM_ApplicationForm.ApplicationForm_Id LEFT OUTER JOIN zlmsregistration.REG_StudentRegistration ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zlmsregistration.REG_StudentRegistration.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_Workflow ON zmedcommon.COMM_ApplicationForm.Workflow_Id = zmedcommon.COMM_Workflow.Workflow_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationFormState ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_WorkflowState ON zmedcommon.COMM_ApplicationFormState.WorkflowState_Id = zmedcommon.COMM_WorkflowState.WorkflowState_Id JOIN zlmsadmin.ADM_Student! ON zlmsadmin.ADM_Enrollment.Student_Id = zlmsadmin.ADM_Student.Student_Id JOIN zmedcommon.COMM_Person! ON (zlmsadmin.ADM_Student.Student_Id = zmedcommon.COMM_Person.Person_Id) JOIN zmedcommon.COMM_PhoneList ON zmedcommon.COMM_Person.PhoneList_Id = zmedcommon.COMM_PhoneList.PhoneList_Id JOIN zmedcommon.COMM_Phone ON zmedcommon.COMM_PhoneList.PhoneList_Id = zmedcommon.COMM_Phone.PhoneList_Id JOIN zlmsadmin.ADM_EduScenario ON zlmsadmin.ADM_ScenarioSelection.EduScenario_Id = zlmsadmin.ADM_EduScenario.EduScenario_Id JOIN zlmsadmin.ADM_EduScenarioOptionalGrp ON zlmsadmin.ADM_SelectionDetails.EduScenarioOptionalGrp_Id = zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id JOIN zlmsadmin.ADM_OptionalCourseGroup ON zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id JOIN zlmsadmin.ADM_EduScenarioStreamGrade ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id JOIN zlmsadmin.ADM_StreamGrade ON (zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade = zlmsadmin.ADM_StreamGrade.Name) JOIN zlmsadmin.ADM_Grade ON zlmsadmin.ADM_StreamGrade.Grade_Id = zlmsadmin.ADM_Grade.Grade_Id JOIN zlmsadmin.ADM_EducationPathDef ON ((zlmsadmin.ADM_EducationPathDef.EducationPath_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus = zlmsadmin.ADM_EducationPathDef.EducationFocus) AND (zlmsadmin.ADM_EduScenarioStreamGrade.EducationType = zlmsadmin.ADM_EducationPathDef.EducationType)) JOIN zlmsadmin.ADM_SessionDef ON zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id = zlmsadmin.ADM_SessionDef.EducationPathDef_Id JOIN zlmsadmin.ADM_Session ON zlmsadmin.ADM_SessionDef.SessionDef_Id = zlmsadmin.ADM_Session.SessionDef_Id AND (((zlmsadmin.ADM_Session.AcademicYear_Id = zlmsadmin.ADM_EduScenario.AcademicYear_Id) AND (zlmsadmin.ADM_Grade.EducationPathDef_Id = zlmsadmin.ADM_EducationPathDef.EducationPathDef_Id) AND (zlmsadmin.ADM_Session.Parent_Id IS NULL))) JOIN zlmsadmin.ADM_CourseDefStreamGrade ON zlmsadmin.ADM_StreamGrade.StreamGrade_Id = zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id AND (((zlmsadmin.ADM_StreamGrade.StreamGrade_Id = zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id) AND (zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id = zlmsadmin.ADM_CourseDefStreamGrade.OptionalCourseGroup_Id))) JOIN zlmsadmin.ADM_CourseDef ON zlmsadmin.ADM_CourseDefStreamGrade.CourseDef_Id = zlmsadmin.ADM_CourseDef.CourseDef_Id JOIN zlmsadmin.ADM_AcademicYear ON zlmsadmin.ADM_EduScenario.AcademicYear_Id = zlmsadmin.ADM_AcademicYear.AcademicYear_Id LEFT OUTER JOIN zmedcommon.COMM_NoteHistory ON zlmsadmin.ADM_ScenarioSelection.NoteHistory_Id = zmedcommon.COMM_NoteHistory.NoteHistory_Id LEFT OUTER JOIN zmedcommon.COMM_Note ON zmedcommon.COMM_NoteHistory.NoteHistory_Id = zmedcommon.COMM_Note.NoteHistory_Id WHERE ((((zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198869) AND (zlmsadmin.ADM_Enrollment.School_Id IN(838))) AND (zlmsadmin.ADM_ScenarioSelection.ExitDate IS NULL) AND (zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment = 1)) AND (((zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (zmedcommon.COMM_ApplicationFormState.IsCurrent = 1) AND (zmedcommon.COMM_WorkflowState.StateCode <> 0)) OR (zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NULL)));
20240806 12:00:34.962 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:34.962 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:34.962 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0002 - Allocated=10, Used=1
20240806 12:00:34.963 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0002 - SELECT ADM_ScenarioSelection.ScenarioSelection_Id, ADM_ScenarioSelection.EduScenario_Id, ADM_ScenarioSelection.ApplicationForm_Id, ADM_ScenarioSelection.Enrollment_Id, ADM_ScenarioSelection.SelectionStatus, ADM_ScenarioSelection.JoiningDate, ADM_ScenarioSelection.ExitDate, ADM_ScenarioSelection.UserStamp, ADM_ScenarioSelection.TimeStamp, ADM_ScenarioSelection.NoteHistory_Id, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.ScenarioSelection_Id, ADM_SelectionDetails.EduScenarioOptionalGrp_Id, ADM_SelectionDetails.CourseDefCode, ADM_SelectionDetails.NumberOfPeriods, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp, ADM_Enrollment.Enrollment_Id, ADM_Enrollment.School_Id, ADM_Enrollment.Student_Id, ADM_Enrollment.Session_Id, ADM_Enrollment.StreamGrade_Id, ADM_Enrollment.Community_Id, ADM_Enrollment.EnrollmentType, ADM_Enrollment.EntryType, ADM_Enrollment.EntryDate, ADM_Enrollment.TransferFromSchool_Id, ADM_Enrollment.TransferToSchool_Id, ADM_Enrollment.ExitType, ADM_Enrollment.ExitReason, ADM_Enrollment.ExitDate, ADM_Enrollment.Note, ADM_Enrollment.IsSpecialNeed, ADM_Enrollment.ExternalId, ADM_Enrollment.UserStamp, ADM_Enrollment.TimeStamp, ADM_Enrollment.RegistrationStatus, ADM_Enrollment.TransferFromEnrollment_Id, ADM_Enrollment.TransferToCommunity_Id, ADM_Enrollment.IsYearActiveEnrollment, ADM_Enrollment.RecomputePassFail, ADM_Enrollment.MandatoryEducation, ADM_Enrollment.IsWaitingList, ADM_Enrollment.CreateTimeStamp, ADM_Enrollment.IsNotOfficialEnrollment, ADM_Enrollment.UserNote, ADM_Enrollment.DeleteType, ADM_Enrollment.IsDeleted, ADM_Enrollment.CreationUser_Id, COMM_ApplicationForm.ApplicationForm_Id, COMM_ApplicationForm.ApplicationFormNumber, COMM_ApplicationForm.ApplicationDate, COMM_ApplicationForm.Applicant_Id, COMM_ApplicationForm.Workflow_Id, COMM_ApplicationForm.ApplicationFormType, COMM_ApplicationForm.Note, COMM_ApplicationForm.TimeStamp, COMM_ApplicationForm.UserStamp, REG_StudentRegistration.StudentRegistration_Id, REG_StudentRegistration.ApplicationForm_Id, REG_StudentRegistration.Student_Id, REG_StudentRegistration.AcademicYear_Id, REG_StudentRegistration.EducationPath_Id, REG_StudentRegistration.Enrollment_Id, REG_StudentRegistration.EducationType, REG_StudentRegistration.EducationFocus, REG_StudentRegistration.StreamGrade, REG_StudentRegistration.School_Id, REG_StudentRegistration.IsTransportRequired, REG_StudentRegistration.ExamTime, REG_StudentRegistration.ExamScore, REG_StudentRegistration.InterviewTime, REG_StudentRegistration.DocumentList_Id, REG_StudentRegistration.CitizenshipStatus, REG_StudentRegistration.ParentWorkPlace, REG_StudentRegistration.IsSpecialNeed, REG_StudentRegistration.TimeStamp, REG_StudentRegistration.UserStamp, REG_StudentRegistration.InCatchmentArea, REG_StudentRegistration.ProgramCategory_Id, COMM_Workflow.Workflow_Id, COMM_Workflow.Name, COMM_Workflow.Code, COMM_Workflow.Note, COMM_ApplicationFormState.ApplicationFormState_Id, COMM_ApplicationFormState.WorkflowState_Id, COMM_ApplicationFormState.PrevWorkflowState_Id, COMM_ApplicationFormState.StateStartDate, COMM_ApplicationFormState.StateEndDate, COMM_ApplicationFormState.PerformedByUser_Id, COMM_ApplicationFormState.AttributeList_Id, COMM_ApplicationFormState.ApplicationForm_Id, COMM_ApplicationFormState.IsCurrent, COMM_ApplicationFormState.Note, COMM_ApplicationFormState.TimeStamp, COMM_ApplicationFormState.UserStamp, COMM_WorkflowState.WorkflowState_Id, COMM_WorkflowState.Workflow_Id, COMM_WorkflowState.Name, COMM_WorkflowState.StateCode, COMM_WorkflowState.Note, ADM_Student.Student_Id, ADM_Student.StudentNumber, ADM_Student.CreationDate, ADM_Student.CreationUser_Id, ADM_Student.UserStamp, ADM_Student.TimeStamp, ADM_Student.IsDeleted, ADM_Student.AttributeList_Id, ADM_Student.CitizenshipStatus, COMM_Person.Person_Id, COMM_Person.Civility, COMM_Person.IDNumber, COMM_Person.FirstName, COMM_Person.SecondName, COMM_Person.ThirdName, COMM_Person.FourthName, COMM_Person.FamilyName, COMM_Person.EnglishFirstName, COMM_Person.EnglishSecondName, COMM_Person.EnglishThirdName, COMM_Person.EnglishFourthName, COMM_Person.EnglishFamilyName, COMM_Person.BirthName, COMM_Person.BirthDate, COMM_Person.BirthCity, COMM_Person.EnglishBirthCity, COMM_Person.BirthCountry, COMM_Person.Nationality, COMM_Person.Gender, COMM_Person.MaritalStatus, COMM_Person.Photo_Id, COMM_Person.Religion, COMM_Person.ReligionSector, COMM_Person.PhoneList_Id, COMM_Person.AddressList_Id, COMM_Person.OtherIdList_Id, COMM_Person.IsDeleted, COMM_Person.ExternalId, COMM_Person.UserStamp, COMM_Person.TimeStamp, COMM_Person.User_Id, COMM_Person.InformationSource, COMM_Person.LastSyncTime, COMM_Person.IsTemporary, COMM_Person.VStartDate, COMM_PhoneList.PhoneList_Id, COMM_Phone.Phone_Id, COMM_Phone.PhoneList_Id, COMM_Phone.Name, COMM_Phone.Value, COMM_Phone.Note, COMM_Phone.IsPrivate, COMM_Phone.IsPrimary, COMM_Phone.ContactType, ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, ADM_EduScenarioOptionalGrp.EduScenario_Id, ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, ADM_EduScenarioOptionalGrp.CourseDefCodes, ADM_EduScenarioOptionalGrp.NumberOfPeriods, ADM_EduScenarioOptionalGrp.type, ADM_OptionalCourseGroup.OptionalCourseGroup_Id, ADM_OptionalCourseGroup.Name, ADM_OptionalCourseGroup.MinimumSelectedCourse, ADM_OptionalCourseGroup.MaximumSelectedCourse, ADM_OptionalCourseGroup.IsSelectedByStudent, ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, ADM_EduScenarioStreamGrade.EduScenario_Id, ADM_EduScenarioStreamGrade.EducationType, ADM_EduScenarioStreamGrade.EducationPath_Id, ADM_EduScenarioStreamGrade.EducationFocus, ADM_EduScenarioStreamGrade.StreamGrade, ADM_StreamGrade.StreamGrade_Id, ADM_StreamGrade.Name, ADM_StreamGrade.Title, ADM_StreamGrade.Grade_Id, ADM_Grade.Grade_Id, ADM_Grade.EducationPathDef_Id, ADM_Grade.Name, ADM_Grade.Title, ADM_Grade.Position, ADM_Grade.SchoolLevel, ADM_Grade.MinAge, ADM_Grade.MinSpAge, ADM_Grade.MaxAge, ADM_Grade.MaxSpAge, ADM_Grade.MinAgeMargin, ADM_Grade.MinAgeMarginUnit, ADM_Grade.MaxAgeMargin, ADM_Grade.MaxAgeMarginUnit, ADM_Grade.CapacityGroup, ADM_Grade.MinAgeMargin2, ADM_Grade.MinAgeMarginUnit2, ADM_Grade.MaxAgeMargin2, ADM_Grade.MaxAgeMarginUnit2, ADM_Grade.ExternalId, ADM_Grade.CommunityTitlePrefix, ADM_Grade.AgeReferenceDate, ADM_Grade.VStartDate, ADM_Grade.UserStamp, ADM_Grade.TimeStamp, ADM_EducationPathDef.EducationPathDef_Id, ADM_EducationPathDef.EducationPath_Id, ADM_EducationPathDef.StartDate, ADM_EducationPathDef.EndDate, ADM_EducationPathDef.IsActive, ADM_EducationPathDef.EducationType, ADM_EducationPathDef.EducationFocus, ADM_SessionDef.SessionDef_Id, ADM_SessionDef.EducationPathDef_Id, ADM_SessionDef.Title, ADM_SessionDef.SessionType, ADM_SessionDef.Duration, ADM_SessionDef.DurationUnit, ADM_SessionDef.Parent_Id, ADM_SessionDef.Position, ADM_Session.Session_Id, ADM_Session.AcademicYear_Id, ADM_Session.SessionDef_Id, ADM_Session.Title, ADM_Session.Parent_Id, ADM_Session.StartDate, ADM_Session.EndDate, ADM_Session.Position, ADM_Session.UserStamp, ADM_Session.TimeStamp, ADM_CourseDefStreamGrade.CourseDefStreamGrade_Id, ADM_CourseDefStreamGrade.CourseDef_Id, ADM_CourseDefStreamGrade.StreamGrade_Id, ADM_CourseDefStreamGrade.IsOptional, ADM_CourseDefStreamGrade.OptionalCourseGroup_Id, ADM_CourseDef.CourseDef_Id, ADM_CourseDef.EducationPathDef_Id, ADM_CourseDef.SessionDef_Id, ADM_CourseDef.TeachingSubject, ADM_CourseDef.TeachingLanguage, ADM_CourseDef.Title, ADM_CourseDef.NumberOfPeriods, ADM_CourseDef.NumberOfPeriodsPerWeek, ADM_CourseDef.PeriodDuration, ADM_CourseDef.PeriodDurationUnit, ADM_CourseDef.SlotColor, ADM_CourseDef.StudentGender, ADM_CourseDef.IsAcademic, ADM_CourseDef.Code, ADM_CourseDef.Position, ADM_CourseDef.CourseWeight, ADM_CourseDef.PassScore, ADM_CourseDef.OtherTitle, ADM_CourseDef.isTermBasedCourse, ADM_CourseDef.Department, ADM_CourseDef.UserStamp, ADM_CourseDef.TimeStamp, ADM_AcademicYear.AcademicYear_Id, ADM_AcademicYear.Title, ADM_AcademicYear.IsCurrent, ADM_AcademicYear.Status, ADM_AcademicYear.POSITION, COMM_NoteHistory.NoteHistory_Id, COMM_Note.Note_Id, COMM_Note.NoteHistory_Id, COMM_Note.Text, COMM_Note.User_Id, COMM_Note.NoteDate, COMM_Note.Status, COMM_Note.UserStamp, COMM_Note.TimeStamp FROM ADM_ScenarioSelection JOIN ADM_SelectionDetails ON (ADM_ScenarioSelection.ScenarioSelection_Id = ADM_SelectionDetails.ScenarioSelection_Id) JOIN ADM_Enrollment ON ((ADM_Enrollment.IsDeleted = 0)) AND ((ADM_ScenarioSelection.Enrollment_Id = ADM_Enrollment.Enrollment_Id)) LEFT OUTER JOIN COMM_ApplicationForm ON (ADM_ScenarioSelection.ApplicationForm_Id = COMM_ApplicationForm.ApplicationForm_Id) LEFT OUTER JOIN REG_StudentRegistration ON (COMM_ApplicationForm.ApplicationForm_Id = REG_StudentRegistration.ApplicationForm_Id) LEFT OUTER JOIN COMM_Workflow ON (COMM_ApplicationForm.Workflow_Id = COMM_Workflow.Workflow_Id) LEFT OUTER JOIN COMM_ApplicationFormState ON (COMM_ApplicationForm.ApplicationForm_Id = COMM_ApplicationFormState.ApplicationForm_Id) LEFT OUTER JOIN COMM_WorkflowState ON (COMM_ApplicationFormState.WorkflowState_Id = COMM_WorkflowState.WorkflowState_Id) JOIN ADM_Student ON ((ADM_Student.IsDeleted = 0)) AND ((ADM_Enrollment.Student_Id = ADM_Student.Student_Id)) JOIN COMM_Person ON ((COMM_Person.IsDeleted = 0)) AND ((ADM_Student.Student_Id = COMM_Person.Person_Id)) JOIN COMM_PhoneList ON (COMM_Person.PhoneList_Id = COMM_PhoneList.PhoneList_Id) JOIN COMM_Phone ON (COMM_PhoneList.PhoneList_Id = COMM_Phone.PhoneList_Id) JOIN ADM_EduScenario ON (ADM_ScenarioSelection.EduScenario_Id = ADM_EduScenario.EduScenario_Id) JOIN ADM_EduScenarioOptionalGrp ON (ADM_SelectionDetails.EduScenarioOptionalGrp_Id = ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id) JOIN ADM_OptionalCourseGroup ON (ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = ADM_OptionalCourseGroup.OptionalCourseGroup_Id) JOIN ADM_EduScenarioStreamGrade ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioStreamGrade.EduScenario_Id) JOIN ADM_StreamGrade ON (ADM_EduScenarioStreamGrade.StreamGrade = ADM_StreamGrade.Name) JOIN ADM_Grade ON (ADM_StreamGrade.Grade_Id = ADM_Grade.Grade_Id) JOIN ADM_EducationPathDef ON (((ADM_EducationPathDef.EducationPath_Id = ADM_EduScenarioStreamGrade.EducationPath_Id) AND (ADM_EduScenarioStreamGrade.EducationFocus = ADM_EducationPathDef.EducationFocus)) AND (ADM_EduScenarioStreamGrade.EducationType = ADM_EducationPathDef.EducationType)) JOIN ADM_SessionDef ON (ADM_EducationPathDef.EducationPathDef_Id = ADM_SessionDef.EducationPathDef_Id) JOIN ADM_Session ON ((ADM_SessionDef.SessionDef_Id = ADM_Session.SessionDef_Id) AND (((ADM_Session.AcademicYear_Id = ADM_EduScenario.AcademicYear_Id) AND (ADM_Grade.EducationPathDef_Id = ADM_EducationPathDef.EducationPathDef_Id)) AND (ADM_Session.Parent_Id IS NULL))) JOIN ADM_CourseDefStreamGrade ON ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND (ADM_OptionalCourseGroup.OptionalCourseGroup_Id = ADM_CourseDefStreamGrade.OptionalCourseGroup_Id))) JOIN ADM_CourseDef ON (ADM_CourseDefStreamGrade.CourseDef_Id = ADM_CourseDef.CourseDef_Id) JOIN ADM_AcademicYear ON (ADM_EduScenario.AcademicYear_Id = ADM_AcademicYear.AcademicYear_Id) LEFT OUTER JOIN COMM_NoteHistory ON (ADM_ScenarioSelection.NoteHistory_Id = COMM_NoteHistory.NoteHistory_Id) LEFT OUTER JOIN COMM_Note ON (COMM_NoteHistory.NoteHistory_Id = COMM_Note.NoteHistory_Id) WHERE (((((ADM_EduScenario.EduScenario_Id = ?) AND (ADM_Enrollment.School_Id IN(?))) AND (ADM_ScenarioSelection.ExitDate IS NULL)) AND (ADM_Enrollment.IsYearActiveEnrollment = ?)) AND ((((COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (COMM_ApplicationFormState.IsCurrent = ?)) AND (COMM_WorkflowState.StateCode <> ?)) OR (COMM_ApplicationForm.ApplicationForm_Id IS NULL)))
20240806 12:00:34.965 0071 =FUN= [ZQL.PhysicalConnection] Parameters: 622198869, 838, 1, 1, 0
20240806 12:00:34.965 0071 =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:35.133 0071 =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:35.133 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:35.364 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0002
20240806 12:00:35.364 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 275 columns, 1144 rows
20240806 12:00:35.364 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0002
20240806 12:00:35.364 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0002
20240806 12:00:35.365 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:35.365 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:35.365 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.dbag.DBag.load
20240806 12:00:35.365 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 -> zcare.zdek.dbag.DBag.load
20240806 12:00:35.365 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id, zlmsadmin.ADM_ScenarioSelection.EduScenario_Id, zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id, zlmsadmin.ADM_ScenarioSelection.Enrollment_Id, zlmsadmin.ADM_ScenarioSelection.SelectionStatus, zlmsadmin.ADM_ScenarioSelection.JoiningDate, zlmsadmin.ADM_ScenarioSelection.ExitDate, zlmsadmin.ADM_ScenarioSelection.UserStamp, zlmsadmin.ADM_ScenarioSelection.TimeStamp, zlmsadmin.ADM_ScenarioSelection.NoteHistory_Id,zlmsadmin.ADM_Enrollment.Enrollment_Id, zlmsadmin.ADM_Enrollment.School_Id, zlmsadmin.ADM_Enrollment.Student_Id, zlmsadmin.ADM_Enrollment.Session_Id, zlmsadmin.ADM_Enrollment.StreamGrade_Id, zlmsadmin.ADM_Enrollment.Community_Id, zlmsadmin.ADM_Enrollment.EnrollmentType, zlmsadmin.ADM_Enrollment.EntryType, zlmsadmin.ADM_Enrollment.EntryDate, zlmsadmin.ADM_Enrollment.TransferFromSchool_Id, zlmsadmin.ADM_Enrollment.TransferToSchool_Id, zlmsadmin.ADM_Enrollment.ExitType, zlmsadmin.ADM_Enrollment.ExitReason, zlmsadmin.ADM_Enrollment.ExitDate, zlmsadmin.ADM_Enrollment.Note, zlmsadmin.ADM_Enrollment.IsSpecialNeed, zlmsadmin.ADM_Enrollment.ExternalId, zlmsadmin.ADM_Enrollment.UserStamp, zlmsadmin.ADM_Enrollment.TimeStamp, zlmsadmin.ADM_Enrollment.RegistrationStatus, zlmsadmin.ADM_Enrollment.TransferFromEnrollment_Id, zlmsadmin.ADM_Enrollment.TransferToCommunity_Id, zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment, zlmsadmin.ADM_Enrollment.RecomputePassFail, zlmsadmin.ADM_Enrollment.MandatoryEducation, zlmsadmin.ADM_Enrollment.IsWaitingList, zlmsadmin.ADM_Enrollment.CreateTimeStamp, zlmsadmin.ADM_Enrollment.IsNotOfficialEnrollment, zlmsadmin.ADM_Enrollment.UserNote, zlmsadmin.ADM_Enrollment.DeleteType, zlmsadmin.ADM_Enrollment.IsDeleted, zlmsadmin.ADM_Enrollment.CreationUser_Id,zlmsadmin.ADM_Student.Student_Id, zlmsadmin.ADM_Student.StudentNumber, zlmsadmin.ADM_Student.CreationDate, zlmsadmin.ADM_Student.CreationUser_Id, zlmsadmin.ADM_Student.UserStamp, zlmsadmin.ADM_Student.TimeStamp, zlmsadmin.ADM_Student.IsDeleted, zlmsadmin.ADM_Student.AttributeList_Id, zlmsadmin.ADM_Student.CitizenshipStatus,zlmsadmin.ADM_Session.Session_Id, zlmsadmin.ADM_Session.AcademicYear_Id, zlmsadmin.ADM_Session.SessionDef_Id, zlmsadmin.ADM_Session.Title, zlmsadmin.ADM_Session.Parent_Id, zlmsadmin.ADM_Session.StartDate, zlmsadmin.ADM_Session.EndDate, zlmsadmin.ADM_Session.Position, zlmsadmin.ADM_Session.UserStamp, zlmsadmin.ADM_Session.TimeStamp,zlmsadmin.ADM_AcademicYear.AcademicYear_Id, zlmsadmin.ADM_AcademicYear.Title, zlmsadmin.ADM_AcademicYear.IsCurrent, zlmsadmin.ADM_AcademicYear.Status, zlmsadmin.ADM_AcademicYear.POSITION,zmedcommon.COMM_Person.Person_Id, zmedcommon.COMM_Person.Civility, zmedcommon.COMM_Person.IDNumber, zmedcommon.COMM_Person.FirstName, zmedcommon.COMM_Person.SecondName, zmedcommon.COMM_Person.ThirdName, zmedcommon.COMM_Person.FourthName, zmedcommon.COMM_Person.FamilyName, zmedcommon.COMM_Person.EnglishFirstName, zmedcommon.COMM_Person.EnglishSecondName, zmedcommon.COMM_Person.EnglishThirdName, zmedcommon.COMM_Person.EnglishFourthName, zmedcommon.COMM_Person.EnglishFamilyName, zmedcommon.COMM_Person.BirthName, zmedcommon.COMM_Person.BirthDate, zmedcommon.COMM_Person.BirthCity, zmedcommon.COMM_Person.EnglishBirthCity, zmedcommon.COMM_Person.BirthCountry, zmedcommon.COMM_Person.Nationality, zmedcommon.COMM_Person.Gender, zmedcommon.COMM_Person.MaritalStatus, zmedcommon.COMM_Person.Photo_Id, zmedcommon.COMM_Person.Religion, zmedcommon.COMM_Person.ReligionSector, zmedcommon.COMM_Person.PhoneList_Id, zmedcommon.COMM_Person.AddressList_Id, zmedcommon.COMM_Person.OtherIdList_Id, zmedcommon.COMM_Person.IsDeleted, zmedcommon.COMM_Person.ExternalId, zmedcommon.COMM_Person.UserStamp, zmedcommon.COMM_Person.TimeStamp, zmedcommon.COMM_Person.User_Id, zmedcommon.COMM_Person.InformationSource, zmedcommon.COMM_Person.LastSyncTime, zmedcommon.COMM_Person.IsTemporary, zmedcommon.COMM_Person.VStartDate,zmedcommon.COMM_PhoneList.PhoneList_Id,zmedcommon.COMM_Phone.Phone_Id, zmedcommon.COMM_Phone.PhoneList_Id, zmedcommon.COMM_Phone.Name, zmedcommon.COMM_Phone.Value, zmedcommon.COMM_Phone.Note, zmedcommon.COMM_Phone.IsPrivate, zmedcommon.COMM_Phone.IsPrimary, zmedcommon.COMM_Phone.ContactType,zlmsadmin.ADM_EduScenario.EduScenario_Id, zlmsadmin.ADM_EduScenario.Code, zlmsadmin.ADM_EduScenario.Name, zlmsadmin.ADM_EduScenario.Status, zlmsadmin.ADM_EduScenario.AcademicYear_Id, zlmsadmin.ADM_EduScenario.CreationDate, zlmsadmin.ADM_EduScenario.UserStamp, zlmsadmin.ADM_EduScenario.TimeStamp,zlmsadmin.ADM_SelectionDetails.SelectionDetails_Id, zlmsadmin.ADM_SelectionDetails.ScenarioSelection_Id, zlmsadmin.ADM_SelectionDetails.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_SelectionDetails.CourseDefCode, zlmsadmin.ADM_SelectionDetails.NumberOfPeriods, zlmsadmin.ADM_SelectionDetails.UserStamp, zlmsadmin.ADM_SelectionDetails.TimeStamp,zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, zlmsadmin.ADM_EduScenarioOptionalGrp.CourseDefCodes, zlmsadmin.ADM_EduScenarioOptionalGrp.NumberOfPeriods, zlmsadmin.ADM_EduScenarioOptionalGrp.type,zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id, zlmsadmin.ADM_OptionalCourseGroup.Name, zlmsadmin.ADM_OptionalCourseGroup.MinimumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.MaximumSelectedCourse, zlmsadmin.ADM_OptionalCourseGroup.IsSelectedByStudent,zlmsadmin.ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationType, zlmsadmin.ADM_EduScenarioStreamGrade.EducationPath_Id, zlmsadmin.ADM_EduScenarioStreamGrade.EducationFocus, zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade,zlmsadmin.ADM_StreamGrade.StreamGrade_Id, zlmsadmin.ADM_StreamGrade.Name, zlmsadmin.ADM_StreamGrade.Title, zlmsadmin.ADM_StreamGrade.Grade_Id,zlmsadmin.ADM_Grade.Grade_Id, zlmsadmin.ADM_Grade.EducationPathDef_Id, zlmsadmin.ADM_Grade.Name, zlmsadmin.ADM_Grade.Title, zlmsadmin.ADM_Grade.Position, zlmsadmin.ADM_Grade.SchoolLevel, zlmsadmin.ADM_Grade.MinAge, zlmsadmin.ADM_Grade.MinSpAge, zlmsadmin.ADM_Grade.MaxAge, zlmsadmin.ADM_Grade.MaxSpAge, zlmsadmin.ADM_Grade.MinAgeMargin, zlmsadmin.ADM_Grade.MinAgeMarginUnit, zlmsadmin.ADM_Grade.MaxAgeMargin, zlmsadmin.ADM_Grade.MaxAgeMarginUnit, zlmsadmin.ADM_Grade.CapacityGroup, zlmsadmin.ADM_Grade.MinAgeMargin2, zlmsadmin.ADM_Grade.MinAgeMarginUnit2, zlmsadmin.ADM_Grade.MaxAgeMargin2, zlmsadmin.ADM_Grade.MaxAgeMarginUnit2, zlmsadmin.ADM_Grade.ExternalId, zlmsadmin.ADM_Grade.CommunityTitlePrefix, zlmsadmin.ADM_Grade.AgeReferenceDate, zlmsadmin.ADM_Grade.VStartDate, zlmsadmin.ADM_Grade.UserStamp, zlmsadmin.ADM_Grade.TimeStamp,zlmsadmin.ADM_CourseDefStreamGrade.CourseDefStreamGrade_Id, zlmsadmin.ADM_CourseDefStreamGrade.CourseDef_Id, zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id, zlmsadmin.ADM_CourseDefStreamGrade.IsOptional, zlmsadmin.ADM_CourseDefStreamGrade.OptionalCourseGroup_Id,zlmsadmin.ADM_CourseDef.CourseDef_Id, zlmsadmin.ADM_CourseDef.EducationPathDef_Id, zlmsadmin.ADM_CourseDef.SessionDef_Id, zlmsadmin.ADM_CourseDef.TeachingSubject, zlmsadmin.ADM_CourseDef.TeachingLanguage, zlmsadmin.ADM_CourseDef.Title, zlmsadmin.ADM_CourseDef.NumberOfPeriods, zlmsadmin.ADM_CourseDef.NumberOfPeriodsPerWeek, zlmsadmin.ADM_CourseDef.PeriodDuration, zlmsadmin.ADM_CourseDef.PeriodDurationUnit, zlmsadmin.ADM_CourseDef.SlotColor, zlmsadmin.ADM_CourseDef.StudentGender, zlmsadmin.ADM_CourseDef.IsAcademic, zlmsadmin.ADM_CourseDef.Code, zlmsadmin.ADM_CourseDef.Position, zlmsadmin.ADM_CourseDef.CourseWeight, zlmsadmin.ADM_CourseDef.PassScore, zlmsadmin.ADM_CourseDef.OtherTitle, zlmsadmin.ADM_CourseDef.isTermBasedCourse, zlmsadmin.ADM_CourseDef.Department, zlmsadmin.ADM_CourseDef.UserStamp, zlmsadmin.ADM_CourseDef.TimeStamp,zmedcommon.COMM_ApplicationForm.ApplicationForm_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormNumber, zmedcommon.COMM_ApplicationForm.ApplicationDate, zmedcommon.COMM_ApplicationForm.Applicant_Id, zmedcommon.COMM_ApplicationForm.Workflow_Id, zmedcommon.COMM_ApplicationForm.ApplicationFormType, zmedcommon.COMM_ApplicationForm.Note, zmedcommon.COMM_ApplicationForm.TimeStamp, zmedcommon.COMM_ApplicationForm.UserStamp,zlmsregistration.REG_StudentRegistration.StudentRegistration_Id, zlmsregistration.REG_StudentRegistration.ApplicationForm_Id, zlmsregistration.REG_StudentRegistration.Student_Id, zlmsregistration.REG_StudentRegistration.AcademicYear_Id, zlmsregistration.REG_StudentRegistration.EducationPath_Id, zlmsregistration.REG_StudentRegistration.Enrollment_Id, zlmsregistration.REG_StudentRegistration.EducationType, zlmsregistration.REG_StudentRegistration.EducationFocus, zlmsregistration.REG_StudentRegistration.StreamGrade, zlmsregistration.REG_StudentRegistration.School_Id, zlmsregistration.REG_StudentRegistration.IsTransportRequired, zlmsregistration.REG_StudentRegistration.ExamTime, zlmsregistration.REG_StudentRegistration.ExamScore, zlmsregistration.REG_StudentRegistration.InterviewTime, zlmsregistration.REG_StudentRegistration.DocumentList_Id, zlmsregistration.REG_StudentRegistration.CitizenshipStatus, zlmsregistration.REG_StudentRegistration.ParentWorkPlace, zlmsregistration.REG_StudentRegistration.IsSpecialNeed, zlmsregistration.REG_StudentRegistration.TimeStamp, zlmsregistration.REG_StudentRegistration.UserStamp, zlmsregistration.REG_StudentRegistration.InCatchmentArea, zlmsregistration.REG_StudentRegistration.ProgramCategory_Id,zmedcommon.COMM_Workflow.Workflow_Id, zmedcommon.COMM_Workflow.Name, zmedcommon.COMM_Workflow.Code, zmedcommon.COMM_Workflow.Note,zmedcommon.COMM_ApplicationFormState.ApplicationFormState_Id, zmedcommon.COMM_ApplicationFormState.WorkflowState_Id, zmedcommon.COMM_ApplicationFormState.PrevWorkflowState_Id, zmedcommon.COMM_ApplicationFormState.StateStartDate, zmedcommon.COMM_ApplicationFormState.StateEndDate, zmedcommon.COMM_ApplicationFormState.PerformedByUser_Id, zmedcommon.COMM_ApplicationFormState.AttributeList_Id, zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id, zmedcommon.COMM_ApplicationFormState.IsCurrent, zmedcommon.COMM_ApplicationFormState.Note, zmedcommon.COMM_ApplicationFormState.TimeStamp, zmedcommon.COMM_ApplicationFormState.UserStamp,zmedcommon.COMM_WorkflowState.WorkflowState_Id, zmedcommon.COMM_WorkflowState.Workflow_Id, zmedcommon.COMM_WorkflowState.Name, zmedcommon.COMM_WorkflowState.StateCode, zmedcommon.COMM_WorkflowState.Note FROM zlmsadmin.ADM_ScenarioSelection JOIN zlmsadmin.ADM_Enrollment! ON zlmsadmin.ADM_ScenarioSelection.Enrollment_Id = zlmsadmin.ADM_Enrollment.Enrollment_Id JOIN zlmsadmin.ADM_Student! ON zlmsadmin.ADM_Enrollment.Student_Id = zlmsadmin.ADM_Student.Student_Id JOIN zlmsadmin.ADM_Session ON zlmsadmin.ADM_Enrollment.Session_Id = zlmsadmin.ADM_Session.Session_Id JOIN zlmsadmin.ADM_AcademicYear ON zlmsadmin.ADM_Session.AcademicYear_Id = zlmsadmin.ADM_AcademicYear.AcademicYear_Id JOIN zmedcommon.COMM_Person! ON (zlmsadmin.ADM_Student.Student_Id = zmedcommon.COMM_Person.Person_Id) JOIN zmedcommon.COMM_PhoneList ON zmedcommon.COMM_Person.PhoneList_Id = zmedcommon.COMM_PhoneList.PhoneList_Id JOIN zmedcommon.COMM_Phone ON zmedcommon.COMM_PhoneList.PhoneList_Id = zmedcommon.COMM_Phone.PhoneList_Id JOIN zlmsadmin.ADM_EduScenario ON zlmsadmin.ADM_ScenarioSelection.EduScenario_Id = zlmsadmin.ADM_EduScenario.EduScenario_Id LEFT OUTER JOIN zlmsadmin.ADM_SelectionDetails ON zlmsadmin.ADM_ScenarioSelection.ScenarioSelection_Id = zlmsadmin.ADM_SelectionDetails.ScenarioSelection_Id JOIN zlmsadmin.ADM_EduScenarioOptionalGrp ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioOptionalGrp.EduScenario_Id JOIN zlmsadmin.ADM_OptionalCourseGroup ON zlmsadmin.ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id JOIN zlmsadmin.ADM_EduScenarioStreamGrade ON zlmsadmin.ADM_EduScenario.EduScenario_Id = zlmsadmin.ADM_EduScenarioStreamGrade.EduScenario_Id JOIN zlmsadmin.ADM_StreamGrade ON (zlmsadmin.ADM_EduScenarioStreamGrade.StreamGrade = zlmsadmin.ADM_StreamGrade.Name) JOIN zlmsadmin.ADM_Grade ON zlmsadmin.ADM_StreamGrade.Grade_Id = zlmsadmin.ADM_Grade.Grade_Id JOIN zlmsadmin.ADM_CourseDefStreamGrade ON zlmsadmin.ADM_StreamGrade.StreamGrade_Id = zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id AND (((zlmsadmin.ADM_StreamGrade.StreamGrade_Id = zlmsadmin.ADM_CourseDefStreamGrade.StreamGrade_Id) AND (zlmsadmin.ADM_OptionalCourseGroup.OptionalCourseGroup_Id = zlmsadmin.ADM_CourseDefStreamGrade.OptionalCourseGroup_Id))) JOIN zlmsadmin.ADM_CourseDef ON zlmsadmin.ADM_CourseDefStreamGrade.CourseDef_Id = zlmsadmin.ADM_CourseDef.CourseDef_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationForm ON zlmsadmin.ADM_ScenarioSelection.ApplicationForm_Id = zmedcommon.COMM_ApplicationForm.ApplicationForm_Id LEFT OUTER JOIN zlmsregistration.REG_StudentRegistration ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zlmsregistration.REG_StudentRegistration.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_Workflow ON zmedcommon.COMM_ApplicationForm.Workflow_Id = zmedcommon.COMM_Workflow.Workflow_Id LEFT OUTER JOIN zmedcommon.COMM_ApplicationFormState ON zmedcommon.COMM_ApplicationForm.ApplicationForm_Id = zmedcommon.COMM_ApplicationFormState.ApplicationForm_Id LEFT OUTER JOIN zmedcommon.COMM_WorkflowState ON zmedcommon.COMM_ApplicationFormState.WorkflowState_Id = zmedcommon.COMM_WorkflowState.WorkflowState_Id WHERE ((((zlmsadmin.ADM_EduScenario.EduScenario_Id = 622198869) AND (zlmsadmin.ADM_Enrollment.School_Id IN(838))) AND (zlmsadmin.ADM_ScenarioSelection.ExitDate IS NULL) AND (zlmsadmin.ADM_Enrollment.IsYearActiveEnrollment = 1)) AND (((zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (zmedcommon.COMM_ApplicationFormState.IsCurrent = 1) AND (zmedcommon.COMM_WorkflowState.StateCode <> 0)) OR (zmedcommon.COMM_ApplicationForm.ApplicationForm_Id IS NULL)) AND (zlmsadmin.ADM_SelectionDetails.SelectionDetails_Id IS NULL));
20240806 12:00:35.399 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:35.400 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:35.400 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0008 - Allocated=10, Used=1
20240806 12:00:35.400 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0008 - SELECT ADM_ScenarioSelection.ScenarioSelection_Id, ADM_ScenarioSelection.EduScenario_Id, ADM_ScenarioSelection.ApplicationForm_Id, ADM_ScenarioSelection.Enrollment_Id, ADM_ScenarioSelection.SelectionStatus, ADM_ScenarioSelection.JoiningDate, ADM_ScenarioSelection.ExitDate, ADM_ScenarioSelection.UserStamp, ADM_ScenarioSelection.TimeStamp, ADM_ScenarioSelection.NoteHistory_Id, ADM_Enrollment.Enrollment_Id, ADM_Enrollment.School_Id, ADM_Enrollment.Student_Id, ADM_Enrollment.Session_Id, ADM_Enrollment.StreamGrade_Id, ADM_Enrollment.Community_Id, ADM_Enrollment.EnrollmentType, ADM_Enrollment.EntryType, ADM_Enrollment.EntryDate, ADM_Enrollment.TransferFromSchool_Id, ADM_Enrollment.TransferToSchool_Id, ADM_Enrollment.ExitType, ADM_Enrollment.ExitReason, ADM_Enrollment.ExitDate, ADM_Enrollment.Note, ADM_Enrollment.IsSpecialNeed, ADM_Enrollment.ExternalId, ADM_Enrollment.UserStamp, ADM_Enrollment.TimeStamp, ADM_Enrollment.RegistrationStatus, ADM_Enrollment.TransferFromEnrollment_Id, ADM_Enrollment.TransferToCommunity_Id, ADM_Enrollment.IsYearActiveEnrollment, ADM_Enrollment.RecomputePassFail, ADM_Enrollment.MandatoryEducation, ADM_Enrollment.IsWaitingList, ADM_Enrollment.CreateTimeStamp, ADM_Enrollment.IsNotOfficialEnrollment, ADM_Enrollment.UserNote, ADM_Enrollment.DeleteType, ADM_Enrollment.IsDeleted, ADM_Enrollment.CreationUser_Id, ADM_Student.Student_Id, ADM_Student.StudentNumber, ADM_Student.CreationDate, ADM_Student.CreationUser_Id, ADM_Student.UserStamp, ADM_Student.TimeStamp, ADM_Student.IsDeleted, ADM_Student.AttributeList_Id, ADM_Student.CitizenshipStatus, ADM_Session.Session_Id, ADM_Session.AcademicYear_Id, ADM_Session.SessionDef_Id, ADM_Session.Title, ADM_Session.Parent_Id, ADM_Session.StartDate, ADM_Session.EndDate, ADM_Session.Position, ADM_Session.UserStamp, ADM_Session.TimeStamp, ADM_AcademicYear.AcademicYear_Id, ADM_AcademicYear.Title, ADM_AcademicYear.IsCurrent, ADM_AcademicYear.Status, ADM_AcademicYear.POSITION, COMM_Person.Person_Id, COMM_Person.Civility, COMM_Person.IDNumber, COMM_Person.FirstName, COMM_Person.SecondName, COMM_Person.ThirdName, COMM_Person.FourthName, COMM_Person.FamilyName, COMM_Person.EnglishFirstName, COMM_Person.EnglishSecondName, COMM_Person.EnglishThirdName, COMM_Person.EnglishFourthName, COMM_Person.EnglishFamilyName, COMM_Person.BirthName, COMM_Person.BirthDate, COMM_Person.BirthCity, COMM_Person.EnglishBirthCity, COMM_Person.BirthCountry, COMM_Person.Nationality, COMM_Person.Gender, COMM_Person.MaritalStatus, COMM_Person.Photo_Id, COMM_Person.Religion, COMM_Person.ReligionSector, COMM_Person.PhoneList_Id, COMM_Person.AddressList_Id, COMM_Person.OtherIdList_Id, COMM_Person.IsDeleted, COMM_Person.ExternalId, COMM_Person.UserStamp, COMM_Person.TimeStamp, COMM_Person.User_Id, COMM_Person.InformationSource, COMM_Person.LastSyncTime, COMM_Person.IsTemporary, COMM_Person.VStartDate, COMM_PhoneList.PhoneList_Id, COMM_Phone.Phone_Id, COMM_Phone.PhoneList_Id, COMM_Phone.Name, COMM_Phone.Value, COMM_Phone.Note, COMM_Phone.IsPrivate, COMM_Phone.IsPrimary, COMM_Phone.ContactType, ADM_EduScenario.EduScenario_Id, ADM_EduScenario.Code, ADM_EduScenario.Name, ADM_EduScenario.Status, ADM_EduScenario.AcademicYear_Id, ADM_EduScenario.CreationDate, ADM_EduScenario.UserStamp, ADM_EduScenario.TimeStamp, ADM_SelectionDetails.SelectionDetails_Id, ADM_SelectionDetails.ScenarioSelection_Id, ADM_SelectionDetails.EduScenarioOptionalGrp_Id, ADM_SelectionDetails.CourseDefCode, ADM_SelectionDetails.NumberOfPeriods, ADM_SelectionDetails.UserStamp, ADM_SelectionDetails.TimeStamp, ADM_EduScenarioOptionalGrp.EduScenarioOptionalGrp_Id, ADM_EduScenarioOptionalGrp.EduScenario_Id, ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id, ADM_EduScenarioOptionalGrp.CourseDefCodes, ADM_EduScenarioOptionalGrp.NumberOfPeriods, ADM_EduScenarioOptionalGrp.type, ADM_OptionalCourseGroup.OptionalCourseGroup_Id, ADM_OptionalCourseGroup.Name, ADM_OptionalCourseGroup.MinimumSelectedCourse, ADM_OptionalCourseGroup.MaximumSelectedCourse, ADM_OptionalCourseGroup.IsSelectedByStudent, ADM_EduScenarioStreamGrade.EduScenarioStreamGrade_Id, ADM_EduScenarioStreamGrade.EduScenario_Id, ADM_EduScenarioStreamGrade.EducationType, ADM_EduScenarioStreamGrade.EducationPath_Id, ADM_EduScenarioStreamGrade.EducationFocus, ADM_EduScenarioStreamGrade.StreamGrade, ADM_StreamGrade.StreamGrade_Id, ADM_StreamGrade.Name, ADM_StreamGrade.Title, ADM_StreamGrade.Grade_Id, ADM_Grade.Grade_Id, ADM_Grade.EducationPathDef_Id, ADM_Grade.Name, ADM_Grade.Title, ADM_Grade.Position, ADM_Grade.SchoolLevel, ADM_Grade.MinAge, ADM_Grade.MinSpAge, ADM_Grade.MaxAge, ADM_Grade.MaxSpAge, ADM_Grade.MinAgeMargin, ADM_Grade.MinAgeMarginUnit, ADM_Grade.MaxAgeMargin, ADM_Grade.MaxAgeMarginUnit, ADM_Grade.CapacityGroup, ADM_Grade.MinAgeMargin2, ADM_Grade.MinAgeMarginUnit2, ADM_Grade.MaxAgeMargin2, ADM_Grade.MaxAgeMarginUnit2, ADM_Grade.ExternalId, ADM_Grade.CommunityTitlePrefix, ADM_Grade.AgeReferenceDate, ADM_Grade.VStartDate, ADM_Grade.UserStamp, ADM_Grade.TimeStamp, ADM_CourseDefStreamGrade.CourseDefStreamGrade_Id, ADM_CourseDefStreamGrade.CourseDef_Id, ADM_CourseDefStreamGrade.StreamGrade_Id, ADM_CourseDefStreamGrade.IsOptional, ADM_CourseDefStreamGrade.OptionalCourseGroup_Id, ADM_CourseDef.CourseDef_Id, ADM_CourseDef.EducationPathDef_Id, ADM_CourseDef.SessionDef_Id, ADM_CourseDef.TeachingSubject, ADM_CourseDef.TeachingLanguage, ADM_CourseDef.Title, ADM_CourseDef.NumberOfPeriods, ADM_CourseDef.NumberOfPeriodsPerWeek, ADM_CourseDef.PeriodDuration, ADM_CourseDef.PeriodDurationUnit, ADM_CourseDef.SlotColor, ADM_CourseDef.StudentGender, ADM_CourseDef.IsAcademic, ADM_CourseDef.Code, ADM_CourseDef.Position, ADM_CourseDef.CourseWeight, ADM_CourseDef.PassScore, ADM_CourseDef.OtherTitle, ADM_CourseDef.isTermBasedCourse, ADM_CourseDef.Department, ADM_CourseDef.UserStamp, ADM_CourseDef.TimeStamp, COMM_ApplicationForm.ApplicationForm_Id, COMM_ApplicationForm.ApplicationFormNumber, COMM_ApplicationForm.ApplicationDate, COMM_ApplicationForm.Applicant_Id, COMM_ApplicationForm.Workflow_Id, COMM_ApplicationForm.ApplicationFormType, COMM_ApplicationForm.Note, COMM_ApplicationForm.TimeStamp, COMM_ApplicationForm.UserStamp, REG_StudentRegistration.StudentRegistration_Id, REG_StudentRegistration.ApplicationForm_Id, REG_StudentRegistration.Student_Id, REG_StudentRegistration.AcademicYear_Id, REG_StudentRegistration.EducationPath_Id, REG_StudentRegistration.Enrollment_Id, REG_StudentRegistration.EducationType, REG_StudentRegistration.EducationFocus, REG_StudentRegistration.StreamGrade, REG_StudentRegistration.School_Id, REG_StudentRegistration.IsTransportRequired, REG_StudentRegistration.ExamTime, REG_StudentRegistration.ExamScore, REG_StudentRegistration.InterviewTime, REG_StudentRegistration.DocumentList_Id, REG_StudentRegistration.CitizenshipStatus, REG_StudentRegistration.ParentWorkPlace, REG_StudentRegistration.IsSpecialNeed, REG_StudentRegistration.TimeStamp, REG_StudentRegistration.UserStamp, REG_StudentRegistration.InCatchmentArea, REG_StudentRegistration.ProgramCategory_Id, COMM_Workflow.Workflow_Id, COMM_Workflow.Name, COMM_Workflow.Code, COMM_Workflow.Note, COMM_ApplicationFormState.ApplicationFormState_Id, COMM_ApplicationFormState.WorkflowState_Id, COMM_ApplicationFormState.PrevWorkflowState_Id, COMM_ApplicationFormState.StateStartDate, COMM_ApplicationFormState.StateEndDate, COMM_ApplicationFormState.PerformedByUser_Id, COMM_ApplicationFormState.AttributeList_Id, COMM_ApplicationFormState.ApplicationForm_Id, COMM_ApplicationFormState.IsCurrent, COMM_ApplicationFormState.Note, COMM_ApplicationFormState.TimeStamp, COMM_ApplicationFormState.UserStamp, COMM_WorkflowState.WorkflowState_Id, COMM_WorkflowState.Workflow_Id, COMM_WorkflowState.Name, COMM_WorkflowState.StateCode, COMM_WorkflowState.Note FROM ADM_ScenarioSelection JOIN ADM_Enrollment ON ((ADM_Enrollment.IsDeleted = 0)) AND ((ADM_ScenarioSelection.Enrollment_Id = ADM_Enrollment.Enrollment_Id)) JOIN ADM_Student ON ((ADM_Student.IsDeleted = 0)) AND ((ADM_Enrollment.Student_Id = ADM_Student.Student_Id)) JOIN ADM_Session ON (ADM_Enrollment.Session_Id = ADM_Session.Session_Id) JOIN ADM_AcademicYear ON (ADM_Session.AcademicYear_Id = ADM_AcademicYear.AcademicYear_Id) JOIN COMM_Person ON ((COMM_Person.IsDeleted = 0)) AND ((ADM_Student.Student_Id = COMM_Person.Person_Id)) JOIN COMM_PhoneList ON (COMM_Person.PhoneList_Id = COMM_PhoneList.PhoneList_Id) JOIN COMM_Phone ON (COMM_PhoneList.PhoneList_Id = COMM_Phone.PhoneList_Id) JOIN ADM_EduScenario ON (ADM_ScenarioSelection.EduScenario_Id = ADM_EduScenario.EduScenario_Id) LEFT OUTER JOIN ADM_SelectionDetails ON (ADM_ScenarioSelection.ScenarioSelection_Id = ADM_SelectionDetails.ScenarioSelection_Id) JOIN ADM_EduScenarioOptionalGrp ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioOptionalGrp.EduScenario_Id) JOIN ADM_OptionalCourseGroup ON (ADM_EduScenarioOptionalGrp.OptionalCourseGroup_Id = ADM_OptionalCourseGroup.OptionalCourseGroup_Id) JOIN ADM_EduScenarioStreamGrade ON (ADM_EduScenario.EduScenario_Id = ADM_EduScenarioStreamGrade.EduScenario_Id) JOIN ADM_StreamGrade ON (ADM_EduScenarioStreamGrade.StreamGrade = ADM_StreamGrade.Name) JOIN ADM_Grade ON (ADM_StreamGrade.Grade_Id = ADM_Grade.Grade_Id) JOIN ADM_CourseDefStreamGrade ON ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND ((ADM_StreamGrade.StreamGrade_Id = ADM_CourseDefStreamGrade.StreamGrade_Id) AND (ADM_OptionalCourseGroup.OptionalCourseGroup_Id = ADM_CourseDefStreamGrade.OptionalCourseGroup_Id))) JOIN ADM_CourseDef ON (ADM_CourseDefStreamGrade.CourseDef_Id = ADM_CourseDef.CourseDef_Id) LEFT OUTER JOIN COMM_ApplicationForm ON (ADM_ScenarioSelection.ApplicationForm_Id = COMM_ApplicationForm.ApplicationForm_Id) LEFT OUTER JOIN REG_StudentRegistration ON (COMM_ApplicationForm.ApplicationForm_Id = REG_StudentRegistration.ApplicationForm_Id) LEFT OUTER JOIN COMM_Workflow ON (COMM_ApplicationForm.Workflow_Id = COMM_Workflow.Workflow_Id) LEFT OUTER JOIN COMM_ApplicationFormState ON (COMM_ApplicationForm.ApplicationForm_Id = COMM_ApplicationFormState.ApplicationForm_Id) LEFT OUTER JOIN COMM_WorkflowState ON (COMM_ApplicationFormState.WorkflowState_Id = COMM_WorkflowState.WorkflowState_Id) WHERE ((((((ADM_EduScenario.EduScenario_Id = ?) AND (ADM_Enrollment.School_Id IN(?))) AND (ADM_ScenarioSelection.ExitDate IS NULL)) AND (ADM_Enrollment.IsYearActiveEnrollment = ?)) AND ((((COMM_ApplicationForm.ApplicationForm_Id IS NOT NULL) AND (COMM_ApplicationFormState.IsCurrent = ?)) AND (COMM_WorkflowState.StateCode <> ?)) OR (COMM_ApplicationForm.ApplicationForm_Id IS NULL))) AND (ADM_SelectionDetails.SelectionDetails_Id IS NULL))
20240806 12:00:35.451 0071 =FUN= [ZQL.PhysicalConnection] Parameters: 622198869, 838, 1, 1, 0
20240806 12:00:35.451 0071 =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:36.768 0071 =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:36.768 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:36.887 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0008
20240806 12:00:36.887 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnection.endQuery : 251 columns, 252 rows
20240806 12:00:36.887 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0008
20240806 12:00:36.888 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0008
20240806 12:00:36.888 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 6 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:36.888 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 5 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:36.888 0071 =WRN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: zcare.zdek.dbag.DBag.load took too much time: 1523 ms
20240806 12:00:36.888 0071 =DBG= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 4 <- zcare.zdek.dbag.DBag.load
20240806 12:00:36.888 0071 =WRN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: zcare.zlms.educationalscenario.enrollment.dataset.ElectiveScenarioStudentListDetailDataSet$Handler.handleContextChange took too much time: 1941 ms
20240806 12:00:36.888 0071 =FUN= [FunctionCheck] 1901330445:6934 [1]-CONTEXT_CHANGES: 3 <- zcare.zlms.educationalscenario.enrollment.dataset.ElectiveScenarioStudentListDetailDataSet$Handler.handleContextChange
20240806 12:00:36.889 0071 =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 12:00:36.889 0071 =API= [CallClient] null: <= DBAG_COPY EduScenarioStudentsDetail0
20240806 12:00:36.891 0071 =FUN= [CallFromClient] 1901330445:6934: InputMessage size 910
20240806 12:00:36.891 0071 =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 12234
20240806 12:00:36.891 0071 =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 12:00:37.005 006F =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=42)
20240806 12:00:37.005 006F =API= [FunctionCheck] <App. context>: 2 -> zcare.appserver.CallFromClient$Environment.onClientCall : 1901330445: DIALOG_MANAGER:HEARTBEAT
20240806 12:00:37.005 006F =FUN= [CallFromClient] null: Parameter FILTER_LIST=0:SQL:zmedstructure.STRUCT_SiteType:
29:Hierarchy:
8:dictionary.DIC_DictionaryEntry:
39:
33::
8:common.COMM_WorkflowState:
20:MessageDelivery:
27::
20:ApplicationFormState:
35::
5:lmsregistration.REG_StudentRegistration:
8:admin.ADM_StreamGrade:
30:
19:essionDef:
25::
19:chool:
20:enarioSelection:
18:Grade:
18:Enrollment:
19:ducationPathDef:
35:
21:ScenarioStreamGrade:
41:
29:OptionalGrp:
29::
30:
18:CourseDefStreamGrade:
27::
24::
20:mmunityMember:
27::
1:CRIPT_CACHE_CLEAR_Filter:
20240806 12:00:37.005 006F =FUN= [CallFromClient] null: Parameter LAST_NOTIFICATION_TIME=20240806 11:58:52.363
20240806 12:00:37.005 006F =FUN= [CallFromClient] null: Parameter LAST_NOTIFICATION_ID=1901330443
20240806 12:00:37.005 006F =FUN= [CallFromClient] null: Parameter CurrentCallId=2051780945
20240806 12:00:37.005 006F =FUN= [CallFromClient] null: Parameter CurrentSiteId=1
20240806 12:00:37.005 006F =FUN= [CallFromClient] null: Parameter CurrentFinancialSiteId=0
20240806 12:00:37.005 006F =FUN= [CallFromClient] null: Parameter CurrentUnitId=0
20240806 12:00:37.005 006F =API= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 3 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: administrator:1901330445
20240806 12:00:37.005 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:37.005 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0007 - Allocated=10, Used=1
20240806 12:00:37.006 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0007
20240806 12:00:37.124 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 12:00:37.124 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0007
20240806 12:00:37.124 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0007
20240806 12:00:37.124 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:37.124 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:37.124 006F =INF= [DatabaseSession] null: => GetNotificationsFromCache
20240806 12:00:37.124 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT TOP 5000 zdeksystem.SYS_Notification.Notification_Id, zdeksystem.SYS_Notification.SenderSession_Id, zdeksystem.SYS_Notification.SenderUser_Id, zdeksystem.SYS_Notification.EmissionTime, zdeksystem.SYS_Notification.Subject, zdeksystem.SYS_Notification.Message FROM zdeksystem.SYS_Notification WHERE ((zdeksystem.SYS_Notification.EmissionTime >= '20240806 11:58:52.364') AND (zdeksystem.SYS_Notification.EmissionTime < '20240806 11:59:05.283')) ORDER BY zdeksystem.SYS_Notification.EmissionTime ASC, zdeksystem.SYS_Notification.Notification_Id ASC;
20240806 12:00:37.124 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:37.124 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:37.142 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0003 - Allocated=10, Used=1
20240806 12:00:37.143 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0003 - SELECT TOP 5000 SYS_Notification.Notification_Id, SYS_Notification.SenderSession_Id, SYS_Notification.SenderUser_Id, SYS_Notification.EmissionTime, SYS_Notification.Subject, SYS_Notification.Message FROM SYS_Notification WHERE ((SYS_Notification.EmissionTime >= ?) AND (SYS_Notification.EmissionTime < ?)) ORDER BY SYS_Notification.EmissionTime ASC, SYS_Notification.Notification_Id ASC
20240806 12:00:37.143 006F =FUN= [ZQL.PhysicalConnection] Parameters: '20240806 11:58:52.364', '20240806 11:59:05.283'
20240806 12:00:37.143 006F =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:37.273 006F =DBG= [ZQL.PhysicalConnection] query: getMetaData
20240806 12:00:37.273 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:37.274 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnection.endQuery : PDB0003
20240806 12:00:37.274 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnection.endQuery : 6 columns, 0 rows
20240806 12:00:37.274 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0003
20240806 12:00:37.274 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0003
20240806 12:00:37.274 006F =DBG= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 5 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:37.274 006F =FUN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 4 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=10, Used=0
20240806 12:00:37.274 006F =FUN= [NotificationCache] null: Cache updated, now from 20240806 11:54:38.712 to 20240806 11:58:52.364
20240806 12:00:37.274 006F =API= [ZDataAccess] ZDataServer: == ServerLoad: 42
20240806 12:00:37.274 006F =WRN= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: zcare.zdataserver.ZDataAccess.getNotifications took too much time: 269 ms
20240806 12:00:37.274 006F =API= [FunctionCheck] 1901330445:6934 [1]-HEARTBEAT: 3 <- zcare.zdataserver.ZDataAccess.getNotifications
20240806 12:00:37.274 006F =API= [ZDataAccess] ZDataServer: == ServerLoad: 42
20240806 12:00:37.274 006F =API= [FunctionCheck] <App. context>: 2 <- zcare.appserver.CallFromClient$Environment.onClientCall
20240806 12:00:37.274 006F =FUN= [CallFromClient] 1901330445:6934: InputMessage size 673
20240806 12:00:37.274 006F =FUN= [CallFromClient] 1901330445:6934: OutputMessage size 139
20240806 12:00:37.274 006F =API= [FunctionCheck] <App. context>: 1 <- zcare.appserver.CallFromClient$Environment.handleClientCall
20240806 12:00:54.262 008C =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdataserver.SystemSession.heartbeat
20240806 12:00:54.262 008C =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.dbag.DBag.load
20240806 12:00:54.262 008C =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.ZqlParser.parseScript : SELECT zdeksystem.SYS_Session.Session_Id, zdeksystem.SYS_Session.User_Id, zdeksystem.SYS_Session.UserName, zdeksystem.SYS_Session.Token, zdeksystem.SYS_Session.LastCallTime, zdeksystem.SYS_Session.ManagingServerName, zdeksystem.SYS_Session.ManagingServerPort, zdeksystem.SYS_Session.LastProcessedNotification_Id, zdeksystem.SYS_Session.LastProcessedNotificationTime, zdeksystem.SYS_Session.DataServerClientIP, zdeksystem.SYS_Session.DataServerClientDetails, zdeksystem.SYS_Session.OriginatorClientIP, zdeksystem.SYS_Session.OriginatorClientDetails, zdeksystem.SYS_Session.PermanentSession_Id, zdeksystem.SYS_Session.Locale, zdeksystem.SYS_Session.ValidationToken,zdeksystem.SYS_PermanentSession.PermanentSession_Id, zdeksystem.SYS_PermanentSession.Name, zdeksystem.SYS_PermanentSession.LastAcknowledegedNotif_Id, zdeksystem.SYS_PermanentSession.LastAcknowledgedNotifTime FROM zdeksystem.SYS_Session LEFT OUTER JOIN zdeksystem.SYS_PermanentSession ON zdeksystem.SYS_Session.PermanentSession_Id = zdeksystem.SYS_PermanentSession.PermanentSession_Id WHERE (zdeksystem.SYS_Session.Session_Id = 1901330433);
20240806 12:00:54.262 008C =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.ZqlParser.parseScript
20240806 12:00:54.262 008C =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:00:54.262 008C =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0010 - Allocated=10, Used=1
20240806 12:00:54.262 008C =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.queryWithParameters : PDB0010 - SELECT SYS_Session.Session_Id, SYS_Session.User_Id, SYS_Session.UserName, SYS_Session.Token, SYS_Session.LastCallTime, SYS_Session.ManagingServerName, SYS_Session.ManagingServerPort, SYS_Session.LastProcessedNotification_Id, SYS_Session.LastProcessedNotificationTime, SYS_Session.DataServerClientIP, SYS_Session.DataServerClientDetails, SYS_Session.OriginatorClientIP, SYS_Session.OriginatorClientDetails, SYS_Session.PermanentSession_Id, SYS_Session.Locale, SYS_Session.ValidationToken, SYS_PermanentSession.PermanentSession_Id, SYS_PermanentSession.Name, SYS_PermanentSession.LastAcknowledegedNotif_Id, SYS_PermanentSession.LastAcknowledgedNotifTime FROM SYS_Session LEFT OUTER JOIN SYS_PermanentSession ON (SYS_Session.PermanentSession_Id = SYS_PermanentSession.PermanentSession_Id) WHERE (SYS_Session.Session_Id = ?)
20240806 12:00:54.262 008C =FUN= [ZQL.PhysicalConnection] Parameters: 1901330433
20240806 12:00:54.262 008C =DBG= [ZQL.PhysicalConnection] query: call executeQuery
20240806 12:00:54.270 008C =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.queryWithParameters
20240806 12:00:54.270 008C =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0010
20240806 12:00:54.270 008C =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0010
20240806 12:00:54.270 008C =ERR= [ZQL.PhysicalConnection] : Cannot release busy connection: 72D9321B
20240806 12:00:54.271 008C =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:00:54.271 008C =ERR= [FunctionCheck] <App. context>:         zcare.zdek.zql.PhysicalConnectionPool.releaseConnection: Connection is not in a state to be released
20240806 12:00:54.271 008C =FUN= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.forceClose
20240806 12:00:54.271 008C =ERR= [ZQL.PhysicalConnection] null: forceCloseConnection: Failed to close statement: The connection is closed.
20240806 12:00:54.272 008C =FUN= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.forceClose
20240806 12:00:54.272 008C =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=9, Used=0
20240806 12:00:54.272 008C =DBG= [FunctionCheck] <App. context>: 2 <- zcare.zdek.dbag.DBag.load
20240806 12:00:54.272 008C =ERR= [FunctionCheck] <App. context>:         zcare.zdataserver.SystemSession.heartbeat: An unmanaged error <class com.microsoft.sqlserver.jdbc.SQLServerException> occurred.
We recommend that you quit the application and restart.

If this problem persists, please contact customer support with below reference. 


Connection reset by peer: socket write error:java.net.SocketException: Connection reset by peer: socket write error

==== Call Stack ====
com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:3206)
com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:2080)
com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:4323)
com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:4225)
com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3269)
com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:7780)
com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatement(SQLServerPreparedStatement.java:600)
com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PrepStmtExecCmd.doExecute(SQLServerPreparedStatement.java:524)
com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:7418)
com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:3272)
com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(SQLServerStatement.java:247)
com.microsoft.sqlserver.jdbc.SQLServerStatement.executeStatement(SQLServerStatement.java:222)
com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.executeQuery(SQLServerPreparedStatement.java:446)
zcare.zdek.zql.PhysicalConnection.completeQuery(PhysicalConnection.java:1534)
zcare.zdek.zql.PhysicalConnection.queryWithParameters(PhysicalConnection.java:1473)
zcare.zdek.zql.LogicalConnection$MySelector.nextSelect(LogicalConnection.java:438)
zcare.zdek.zql.LogicalConnection$MySelector.<init>(LogicalConnection.java:275)
zcare.zdek.zql.LogicalConnection.select(LogicalConnection.java:2131)
zcare.zdek.zql.LogicalConnection.select(LogicalConnection.java:2115)
zcare.zdek.dbag.DBag.load(DBag.java:1755)
zcare.zdek.dbag.DBag.load(DBag.java:1716)
zcare.zdek.dbag.DBag.load(DBag.java:1650)
zcare.zdataserver.Session$Manager.getSession2(Session.java:1759)
zcare.zdataserver.Session$Manager.getSession(Session.java:1675)
zcare.zdataserver.SystemSession.heartbeat(SystemSession.java:162)
zcare.zdataserver.SystemSession.lambda$0(SystemSession.java:63)
java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
java.util.concurrent.FutureTask.runAndReset(Unknown Source)
java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
zcare.zdek.system.ZScheduler.executeFirstTaskInQueue(ZScheduler.java:198)
zcare.zdek.system.ZScheduler.access$2(ZScheduler.java:189)
zcare.zdek.system.ZScheduler$1$1.run(ZScheduler.java:134)
java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
java.lang.Thread.run(Unknown Source)

20240806 12:00:54.272 008C =FUN= [FunctionCheck] <App. context>: 1 <- zcare.zdataserver.SystemSession.heartbeat
20240806 12:00:55.453 0097 =INF= [DBAG] null: DBagCache DBG: Update one query.
20240806 12:00:55.454 0097 =INF= [DBAG] null: DBagCache DBG: Swapped info.
20240806 12:00:55.454 0097 =INF= [DBAG] null: DBagCache DBG: Removed obsolete rows.
20240806 12:00:55.454 0097 =INF= [DBAG] null: DBagCache DBG: Found notifications to check.
20240806 12:00:55.454 0097 =INF= [DBAG] null: DBagCache DBG: Decided notifications to consider.
20240806 12:00:55.454 0097 =INF= [DBAG] null: DBagCache DBG: All dones.
20240806 12:00:55.653 00A1 =INF= [DBAG] null: DBagCache DBG: Update one query.
20240806 12:00:55.654 00A1 =INF= [DBAG] null: DBagCache DBG: Swapped info.
20240806 12:00:55.654 00A1 =INF= [DBAG] null: DBagCache DBG: Removed obsolete rows.
20240806 12:00:55.654 00A1 =INF= [DBAG] null: DBagCache DBG: Found notifications to check.
20240806 12:00:55.654 00A1 =INF= [DBAG] null: DBagCache DBG: Decided notifications to consider.
20240806 12:00:55.654 00A1 =INF= [DBAG] null: DBagCache DBG: All dones.
20240806 12:00:55.654 00A1 =INF= [DBAG] null: DBagCache DBG: Update one query.
20240806 12:00:55.654 00A1 =INF= [DBAG] null: DBagCache DBG: Swapped info.
20240806 12:00:55.654 00A1 =INF= [DBAG] null: DBagCache DBG: Removed obsolete rows.
20240806 12:00:55.654 00A1 =INF= [DBAG] null: DBagCache DBG: Found notifications to check.
20240806 12:00:55.654 00A1 =INF= [DBAG] null: DBagCache DBG: Decided notifications to consider.
20240806 12:00:55.655 00A1 =INF= [DBAG] null: DBagCache DBG: All dones.
20240806 12:01:05.411 006E =API= [FunctionCheck] <App. context>: 1 -> zcare.appserver.CallFromClient$Environment.handleClientCall : 1901330445:6934;1;default (load=42)
20240806 12:01:05.412 006E =API= [FunctionCheck] <App. context>: 2 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: system:1901330435
20240806 12:01:05.412 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:01:05.412 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0011 - Allocated=9, Used=1
20240806 12:01:05.412 009E =API= [ZQL.PhysicalConnectionPool] PhysicalConnectionPool.fillPool: TargetMin = 10, TargetMax = 10
20240806 12:01:05.413 009E =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.addNewConnectionToPool : pool size: 9
20240806 12:01:05.413 006E =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0011
20240806 12:01:05.413 009E =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.createNewConnection
20240806 12:01:05.413 009E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.open : PDB0015 - jdbc:sqlserver://almanhal-uat-sql-managed-instance.80994a7a809c.database.windows.net;useUnicode=true;characterEncoding=UTF-8;
20240806 12:01:05.418 006E =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 12:01:05.418 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0011
20240806 12:01:05.418 006E =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0011
20240806 12:01:05.418 006E =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:01:05.418 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=9, Used=0
20240806 12:01:05.421 006E =WRN= [FunctionCheck] <App. context>: 2 <- zcare.zdataserver.ZDataAccess.getNotifications : Throw An unmanaged error <class com.microsoft.sqlserver.jdbc.SQLServerException> occurred.
We recommend that you quit the application and restart.

If this problem persists, please contact customer support with below reference. 


Connection reset by peer: socket write error:java.net.SocketException: Connection reset by peer: socket write error

==== Call Stack ====
com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:3206)
com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:2080)
com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:4323)
com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:4225)
com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3269)
com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:7780)
com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatement(SQLServerPreparedStatement.java:600)
com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PrepStmtExecCmd.doExecute(SQLServerPreparedStatement.java:524)
com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:7418)
com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:3272)
com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(SQLServerStatement.java:247)
com.microsoft.sqlserver.jdbc.SQLServerStatement.executeStatement(SQLServerStatement.java:222)
com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.executeUpdate(SQLServerPreparedStatement.java:473)
zcare.zdek.zql.PhysicalConnection.executeDirect(PhysicalConnection.java:1087)
zcare.zdek.zql.PhysicalConnection.getDatabaseTime(PhysicalConnection.java:2410)
zcare.zdataserver.ZDataAccess.adjustReferenceTime(ZDataAccess.java:286)
zcare.zdataserver.Session.getNotifications(Session.java:2829)
zcare.zdataserver.ZDataAccess$11.run(ZDataAccess.java:522)
zcare.zdataserver.ZDataAccess$11.run(ZDataAccess.java:1)
zcare.zdek.FunctionLogger.run(FunctionLogger.java:160)
zcare.zdataserver.ZDataAccess.function(ZDataAccess.java:2393)
zcare.zdataserver.ZDataAccess.getNotifications(ZDataAccess.java:519)
zcare.dataserver_proxy.Session$RMIZDataServer.getNotifications(Session.java:418)
zcare.dataserver_proxy.Session.performHeartbeat(Session.java:1194)
zcare.appserver.SessionUtil$2.run(SessionUtil.java:459)
zcare.appserver.ServletTimer.performTask(ServletTimer.java:208)
zcare.appserver.ServletTimer.access$6(ServletTimer.java:206)
zcare.appserver.ServletTimer$Manager.checkTimers(ServletTimer.java:175)
zcare.appserver.CallFromClient$Environment.handleClientCall(CallFromClient.java:257)
zcare.appserver.addons.ClientCallHandler.handle(ClientCallHandler.java:114)
zcare.zweb.server.ApplicationServiceImpl.handleCalls(ApplicationServiceImpl.java:306)
sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
java.lang.reflect.Method.invoke(Unknown Source)
com.google.gwt.user.server.rpc.RPC.invokeAndEncodeResponse(RPC.java:587)
com.google.gwt.user.server.rpc.RemoteServiceServlet.processCall(RemoteServiceServlet.java:333)
com.google.gwt.user.server.rpc.RemoteServiceServlet.processCall(RemoteServiceServlet.java:303)
com.google.gwt.user.server.rpc.RemoteServiceServlet.processPost(RemoteServiceServlet.java:373)
com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet.doPost(AbstractRemoteServiceServlet.java:62)
javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:812)
org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
zcare.zweb.server.GWTCacheControlFilter.doFilter(GWTCacheControlFilter.java:75)
org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
org.eclipse.jetty.server.handler.RequestLogHandler.handle(RequestLogHandler.java:95)
org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
org.eclipse.jetty.server.Server.handle(Server.java:499)
org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:311)
org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:544)
org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
java.lang.Thread.run(Unknown Source)

20240806 12:01:05.428 006E =WRN= [SessionUtil] <App. context>: Exception occurred: An unmanaged error <class java.lang.AssertionError> occurred.
We recommend that you quit the application and restart.

If this problem persists, please contact customer support with below reference. 


get notifications form server failed
java.lang.AssertionError: get notifications form server failed
	at zcare.dataserver_proxy.Session.performHeartbeat(Session.java:1196)
	at zcare.appserver.SessionUtil$2.run(SessionUtil.java:459)
	at zcare.appserver.ServletTimer.performTask(ServletTimer.java:208)
	at zcare.appserver.ServletTimer.access$6(ServletTimer.java:206)
	at zcare.appserver.ServletTimer$Manager.checkTimers(ServletTimer.java:175)
	at zcare.appserver.CallFromClient$Environment.handleClientCall(CallFromClient.java:257)
	at zcare.appserver.addons.ClientCallHandler.handle(ClientCallHandler.java:114)
	at zcare.zweb.server.ApplicationServiceImpl.handleCalls(ApplicationServiceImpl.java:306)
	at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.google.gwt.user.server.rpc.RPC.invokeAndEncodeResponse(RPC.java:587)
	at com.google.gwt.user.server.rpc.RemoteServiceServlet.processCall(RemoteServiceServlet.java:333)
	at com.google.gwt.user.server.rpc.RemoteServiceServlet.processCall(RemoteServiceServlet.java:303)
	at com.google.gwt.user.server.rpc.RemoteServiceServlet.processPost(RemoteServiceServlet.java:373)
	at com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet.doPost(AbstractRemoteServiceServlet.java:62)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:812)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at zcare.zweb.server.GWTCacheControlFilter.doFilter(GWTCacheControlFilter.java:75)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.handler.RequestLogHandler.handle(RequestLogHandler.java:95)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:311)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:544)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Unknown Source)

20240806 12:01:05.428 006E =WRN= [SessionUtil] SessionUtil::performHeartbeat: error while performing heartbeat for System session 1901330435, this session will be cleaned from cache and stop its heartbeat
20240806 12:01:05.428 006E =API= [FunctionCheck] <App. context>: 2 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: system:1901330437
20240806 12:01:05.428 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:01:05.428 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0014 - Allocated=9, Used=1
20240806 12:01:05.429 006E =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0014
20240806 12:01:05.429 009B =API= [ZQL.PhysicalConnectionPool] PhysicalConnectionPool.fillPool: TargetMin = 10, TargetMax = 10
20240806 12:01:05.430 009B =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.addNewConnectionToPool : pool size: 9
20240806 12:01:05.430 009B =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.createNewConnection
20240806 12:01:05.430 009B =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.open : PDB0016 - jdbc:sqlserver://almanhal-uat-sql-managed-instance.80994a7a809c.database.windows.net;useUnicode=true;characterEncoding=UTF-8;
20240806 12:01:05.432 006E =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 12:01:05.432 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0014
20240806 12:01:05.432 006E =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0014
20240806 12:01:05.432 006E =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:01:05.432 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=9, Used=0
20240806 12:01:05.433 006E =WRN= [FunctionCheck] <App. context>: 2 <- zcare.zdataserver.ZDataAccess.getNotifications : Throw An unmanaged error <class com.microsoft.sqlserver.jdbc.SQLServerException> occurred.
We recommend that you quit the application and restart.

If this problem persists, please contact customer support with below reference. 


Connection reset by peer: socket write error:java.net.SocketException: Connection reset by peer: socket write error

==== Call Stack ====
com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:3206)
com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:2080)
com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:4323)
com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:4225)
com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3269)
com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:7780)
com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatement(SQLServerPreparedStatement.java:600)
com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PrepStmtExecCmd.doExecute(SQLServerPreparedStatement.java:524)
com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:7418)
com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:3272)
com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(SQLServerStatement.java:247)
com.microsoft.sqlserver.jdbc.SQLServerStatement.executeStatement(SQLServerStatement.java:222)
com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.executeUpdate(SQLServerPreparedStatement.java:473)
zcare.zdek.zql.PhysicalConnection.executeDirect(PhysicalConnection.java:1087)
zcare.zdek.zql.PhysicalConnection.getDatabaseTime(PhysicalConnection.java:2410)
zcare.zdataserver.ZDataAccess.adjustReferenceTime(ZDataAccess.java:286)
zcare.zdataserver.Session.getNotifications(Session.java:2829)
zcare.zdataserver.ZDataAccess$11.run(ZDataAccess.java:522)
zcare.zdataserver.ZDataAccess$11.run(ZDataAccess.java:1)
zcare.zdek.FunctionLogger.run(FunctionLogger.java:160)
zcare.zdataserver.ZDataAccess.function(ZDataAccess.java:2393)
zcare.zdataserver.ZDataAccess.getNotifications(ZDataAccess.java:519)
zcare.dataserver_proxy.Session$RMIZDataServer.getNotifications(Session.java:418)
zcare.dataserver_proxy.Session.performHeartbeat(Session.java:1194)
zcare.appserver.SessionUtil$2.run(SessionUtil.java:459)
zcare.appserver.ServletTimer.performTask(ServletTimer.java:208)
zcare.appserver.ServletTimer.access$6(ServletTimer.java:206)
zcare.appserver.ServletTimer$Manager.checkTimers(ServletTimer.java:175)
zcare.appserver.CallFromClient$Environment.handleClientCall(CallFromClient.java:257)
zcare.appserver.addons.ClientCallHandler.handle(ClientCallHandler.java:114)
zcare.zweb.server.ApplicationServiceImpl.handleCalls(ApplicationServiceImpl.java:306)
sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
java.lang.reflect.Method.invoke(Unknown Source)
com.google.gwt.user.server.rpc.RPC.invokeAndEncodeResponse(RPC.java:587)
com.google.gwt.user.server.rpc.RemoteServiceServlet.processCall(RemoteServiceServlet.java:333)
com.google.gwt.user.server.rpc.RemoteServiceServlet.processCall(RemoteServiceServlet.java:303)
com.google.gwt.user.server.rpc.RemoteServiceServlet.processPost(RemoteServiceServlet.java:373)
com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet.doPost(AbstractRemoteServiceServlet.java:62)
javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:812)
org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
zcare.zweb.server.GWTCacheControlFilter.doFilter(GWTCacheControlFilter.java:75)
org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
org.eclipse.jetty.server.handler.RequestLogHandler.handle(RequestLogHandler.java:95)
org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
org.eclipse.jetty.server.Server.handle(Server.java:499)
org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:311)
org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:544)
org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
java.lang.Thread.run(Unknown Source)

20240806 12:01:05.434 006E =WRN= [SessionUtil] <App. context>: Exception occurred: An unmanaged error <class java.lang.AssertionError> occurred.
We recommend that you quit the application and restart.

If this problem persists, please contact customer support with below reference. 


get notifications form server failed
java.lang.AssertionError: get notifications form server failed
	at zcare.dataserver_proxy.Session.performHeartbeat(Session.java:1196)
	at zcare.appserver.SessionUtil$2.run(SessionUtil.java:459)
	at zcare.appserver.ServletTimer.performTask(ServletTimer.java:208)
	at zcare.appserver.ServletTimer.access$6(ServletTimer.java:206)
	at zcare.appserver.ServletTimer$Manager.checkTimers(ServletTimer.java:175)
	at zcare.appserver.CallFromClient$Environment.handleClientCall(CallFromClient.java:257)
	at zcare.appserver.addons.ClientCallHandler.handle(ClientCallHandler.java:114)
	at zcare.zweb.server.ApplicationServiceImpl.handleCalls(ApplicationServiceImpl.java:306)
	at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.google.gwt.user.server.rpc.RPC.invokeAndEncodeResponse(RPC.java:587)
	at com.google.gwt.user.server.rpc.RemoteServiceServlet.processCall(RemoteServiceServlet.java:333)
	at com.google.gwt.user.server.rpc.RemoteServiceServlet.processCall(RemoteServiceServlet.java:303)
	at com.google.gwt.user.server.rpc.RemoteServiceServlet.processPost(RemoteServiceServlet.java:373)
	at com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet.doPost(AbstractRemoteServiceServlet.java:62)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:812)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at zcare.zweb.server.GWTCacheControlFilter.doFilter(GWTCacheControlFilter.java:75)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.handler.RequestLogHandler.handle(RequestLogHandler.java:95)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:311)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:544)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Unknown Source)

20240806 12:01:05.434 006E =WRN= [SessionUtil] SessionUtil::performHeartbeat: error while performing heartbeat for System session 1901330437, this session will be cleaned from cache and stop its heartbeat
20240806 12:01:05.434 006E =API= [FunctionCheck] <App. context>: 2 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: system:1901330439
20240806 12:01:05.434 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:01:05.434 0098 =API= [ZQL.PhysicalConnectionPool] PhysicalConnectionPool.fillPool: TargetMin = 10, TargetMax = 10
20240806 12:01:05.434 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0012 - Allocated=9, Used=1
20240806 12:01:05.434 006E =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0012
20240806 12:01:05.434 0098 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.addNewConnectionToPool : pool size: 9
20240806 12:01:05.434 0098 =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.createNewConnection
20240806 12:01:05.435 0098 =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.open : PDB0017 - jdbc:sqlserver://almanhal-uat-sql-managed-instance.80994a7a809c.database.windows.net;useUnicode=true;characterEncoding=UTF-8;
20240806 12:01:05.438 006E =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 12:01:05.438 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0012
20240806 12:01:05.438 006E =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0012
20240806 12:01:05.438 006E =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:01:05.438 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=9, Used=0
20240806 12:01:05.438 006E =WRN= [FunctionCheck] <App. context>: 2 <- zcare.zdataserver.ZDataAccess.getNotifications : Throw An unmanaged error <class com.microsoft.sqlserver.jdbc.SQLServerException> occurred.
We recommend that you quit the application and restart.

If this problem persists, please contact customer support with below reference. 


Connection reset by peer: socket write error:java.net.SocketException: Connection reset by peer: socket write error

==== Call Stack ====
com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:3206)
com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:2080)
com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:4323)
com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:4225)
com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3269)
com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:7780)
com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatement(SQLServerPreparedStatement.java:600)
com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PrepStmtExecCmd.doExecute(SQLServerPreparedStatement.java:524)
com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:7418)
com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:3272)
com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(SQLServerStatement.java:247)
com.microsoft.sqlserver.jdbc.SQLServerStatement.executeStatement(SQLServerStatement.java:222)
com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.executeUpdate(SQLServerPreparedStatement.java:473)
zcare.zdek.zql.PhysicalConnection.executeDirect(PhysicalConnection.java:1087)
zcare.zdek.zql.PhysicalConnection.getDatabaseTime(PhysicalConnection.java:2410)
zcare.zdataserver.ZDataAccess.adjustReferenceTime(ZDataAccess.java:286)
zcare.zdataserver.Session.getNotifications(Session.java:2829)
zcare.zdataserver.ZDataAccess$11.run(ZDataAccess.java:522)
zcare.zdataserver.ZDataAccess$11.run(ZDataAccess.java:1)
zcare.zdek.FunctionLogger.run(FunctionLogger.java:160)
zcare.zdataserver.ZDataAccess.function(ZDataAccess.java:2393)
zcare.zdataserver.ZDataAccess.getNotifications(ZDataAccess.java:519)
zcare.dataserver_proxy.Session$RMIZDataServer.getNotifications(Session.java:418)
zcare.dataserver_proxy.Session.performHeartbeat(Session.java:1194)
zcare.appserver.SessionUtil$2.run(SessionUtil.java:459)
zcare.appserver.ServletTimer.performTask(ServletTimer.java:208)
zcare.appserver.ServletTimer.access$6(ServletTimer.java:206)
zcare.appserver.ServletTimer$Manager.checkTimers(ServletTimer.java:175)
zcare.appserver.CallFromClient$Environment.handleClientCall(CallFromClient.java:257)
zcare.appserver.addons.ClientCallHandler.handle(ClientCallHandler.java:114)
zcare.zweb.server.ApplicationServiceImpl.handleCalls(ApplicationServiceImpl.java:306)
sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
java.lang.reflect.Method.invoke(Unknown Source)
com.google.gwt.user.server.rpc.RPC.invokeAndEncodeResponse(RPC.java:587)
com.google.gwt.user.server.rpc.RemoteServiceServlet.processCall(RemoteServiceServlet.java:333)
com.google.gwt.user.server.rpc.RemoteServiceServlet.processCall(RemoteServiceServlet.java:303)
com.google.gwt.user.server.rpc.RemoteServiceServlet.processPost(RemoteServiceServlet.java:373)
com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet.doPost(AbstractRemoteServiceServlet.java:62)
javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:812)
org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
zcare.zweb.server.GWTCacheControlFilter.doFilter(GWTCacheControlFilter.java:75)
org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
org.eclipse.jetty.server.handler.RequestLogHandler.handle(RequestLogHandler.java:95)
org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
org.eclipse.jetty.server.Server.handle(Server.java:499)
org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:311)
org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:544)
org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
java.lang.Thread.run(Unknown Source)

20240806 12:01:05.439 006E =WRN= [SessionUtil] <App. context>: Exception occurred: An unmanaged error <class java.lang.AssertionError> occurred.
We recommend that you quit the application and restart.

If this problem persists, please contact customer support with below reference. 


get notifications form server failed
java.lang.AssertionError: get notifications form server failed
	at zcare.dataserver_proxy.Session.performHeartbeat(Session.java:1196)
	at zcare.appserver.SessionUtil$2.run(SessionUtil.java:459)
	at zcare.appserver.ServletTimer.performTask(ServletTimer.java:208)
	at zcare.appserver.ServletTimer.access$6(ServletTimer.java:206)
	at zcare.appserver.ServletTimer$Manager.checkTimers(ServletTimer.java:175)
	at zcare.appserver.CallFromClient$Environment.handleClientCall(CallFromClient.java:257)
	at zcare.appserver.addons.ClientCallHandler.handle(ClientCallHandler.java:114)
	at zcare.zweb.server.ApplicationServiceImpl.handleCalls(ApplicationServiceImpl.java:306)
	at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.google.gwt.user.server.rpc.RPC.invokeAndEncodeResponse(RPC.java:587)
	at com.google.gwt.user.server.rpc.RemoteServiceServlet.processCall(RemoteServiceServlet.java:333)
	at com.google.gwt.user.server.rpc.RemoteServiceServlet.processCall(RemoteServiceServlet.java:303)
	at com.google.gwt.user.server.rpc.RemoteServiceServlet.processPost(RemoteServiceServlet.java:373)
	at com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet.doPost(AbstractRemoteServiceServlet.java:62)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:812)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at zcare.zweb.server.GWTCacheControlFilter.doFilter(GWTCacheControlFilter.java:75)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.handler.RequestLogHandler.handle(RequestLogHandler.java:95)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:311)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:544)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Unknown Source)

20240806 12:01:05.439 006E =WRN= [SessionUtil] SessionUtil::performHeartbeat: error while performing heartbeat for System session 1901330439, this session will be cleaned from cache and stop its heartbeat
20240806 12:01:05.440 006E =API= [FunctionCheck] <App. context>: 2 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: system:1901330441
20240806 12:01:05.440 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:01:05.440 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0013 - Allocated=9, Used=1
20240806 12:01:05.440 006E =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0013
20240806 12:01:05.441 009A =API= [ZQL.PhysicalConnectionPool] PhysicalConnectionPool.fillPool: TargetMin = 10, TargetMax = 10
20240806 12:01:05.441 009A =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.addNewConnectionToPool : pool size: 9
20240806 12:01:05.441 009A =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.createNewConnection
20240806 12:01:05.441 009A =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.open : PDB0018 - jdbc:sqlserver://almanhal-uat-sql-managed-instance.80994a7a809c.database.windows.net;useUnicode=true;characterEncoding=UTF-8;
20240806 12:01:05.444 006E =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 12:01:05.444 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0013
20240806 12:01:05.444 006E =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0013
20240806 12:01:05.444 006E =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:01:05.444 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=9, Used=0
20240806 12:01:05.444 006E =WRN= [FunctionCheck] <App. context>: 2 <- zcare.zdataserver.ZDataAccess.getNotifications : Throw An unmanaged error <class com.microsoft.sqlserver.jdbc.SQLServerException> occurred.
We recommend that you quit the application and restart.

If this problem persists, please contact customer support with below reference. 


Connection reset by peer: socket write error:java.net.SocketException: Connection reset by peer: socket write error

==== Call Stack ====
com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:3206)
com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:2080)
com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:4323)
com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:4225)
com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3269)
com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:7780)
com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatement(SQLServerPreparedStatement.java:600)
com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PrepStmtExecCmd.doExecute(SQLServerPreparedStatement.java:524)
com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:7418)
com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:3272)
com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(SQLServerStatement.java:247)
com.microsoft.sqlserver.jdbc.SQLServerStatement.executeStatement(SQLServerStatement.java:222)
com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.executeUpdate(SQLServerPreparedStatement.java:473)
zcare.zdek.zql.PhysicalConnection.executeDirect(PhysicalConnection.java:1087)
zcare.zdek.zql.PhysicalConnection.getDatabaseTime(PhysicalConnection.java:2410)
zcare.zdataserver.ZDataAccess.adjustReferenceTime(ZDataAccess.java:286)
zcare.zdataserver.Session.getNotifications(Session.java:2829)
zcare.zdataserver.ZDataAccess$11.run(ZDataAccess.java:522)
zcare.zdataserver.ZDataAccess$11.run(ZDataAccess.java:1)
zcare.zdek.FunctionLogger.run(FunctionLogger.java:160)
zcare.zdataserver.ZDataAccess.function(ZDataAccess.java:2393)
zcare.zdataserver.ZDataAccess.getNotifications(ZDataAccess.java:519)
zcare.dataserver_proxy.Session$RMIZDataServer.getNotifications(Session.java:418)
zcare.dataserver_proxy.Session.performHeartbeat(Session.java:1194)
zcare.appserver.SessionUtil$2.run(SessionUtil.java:459)
zcare.appserver.ServletTimer.performTask(ServletTimer.java:208)
zcare.appserver.ServletTimer.access$6(ServletTimer.java:206)
zcare.appserver.ServletTimer$Manager.checkTimers(ServletTimer.java:175)
zcare.appserver.CallFromClient$Environment.handleClientCall(CallFromClient.java:257)
zcare.appserver.addons.ClientCallHandler.handle(ClientCallHandler.java:114)
zcare.zweb.server.ApplicationServiceImpl.handleCalls(ApplicationServiceImpl.java:306)
sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
java.lang.reflect.Method.invoke(Unknown Source)
com.google.gwt.user.server.rpc.RPC.invokeAndEncodeResponse(RPC.java:587)
com.google.gwt.user.server.rpc.RemoteServiceServlet.processCall(RemoteServiceServlet.java:333)
com.google.gwt.user.server.rpc.RemoteServiceServlet.processCall(RemoteServiceServlet.java:303)
com.google.gwt.user.server.rpc.RemoteServiceServlet.processPost(RemoteServiceServlet.java:373)
com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet.doPost(AbstractRemoteServiceServlet.java:62)
javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:812)
org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
zcare.zweb.server.GWTCacheControlFilter.doFilter(GWTCacheControlFilter.java:75)
org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
org.eclipse.jetty.server.handler.RequestLogHandler.handle(RequestLogHandler.java:95)
org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
org.eclipse.jetty.server.Server.handle(Server.java:499)
org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:311)
org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:544)
org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
java.lang.Thread.run(Unknown Source)

20240806 12:01:05.445 006E =WRN= [SessionUtil] <App. context>: Exception occurred: An unmanaged error <class java.lang.AssertionError> occurred.
We recommend that you quit the application and restart.

If this problem persists, please contact customer support with below reference. 


get notifications form server failed
java.lang.AssertionError: get notifications form server failed
	at zcare.dataserver_proxy.Session.performHeartbeat(Session.java:1196)
	at zcare.appserver.SessionUtil$2.run(SessionUtil.java:459)
	at zcare.appserver.ServletTimer.performTask(ServletTimer.java:208)
	at zcare.appserver.ServletTimer.access$6(ServletTimer.java:206)
	at zcare.appserver.ServletTimer$Manager.checkTimers(ServletTimer.java:175)
	at zcare.appserver.CallFromClient$Environment.handleClientCall(CallFromClient.java:257)
	at zcare.appserver.addons.ClientCallHandler.handle(ClientCallHandler.java:114)
	at zcare.zweb.server.ApplicationServiceImpl.handleCalls(ApplicationServiceImpl.java:306)
	at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.google.gwt.user.server.rpc.RPC.invokeAndEncodeResponse(RPC.java:587)
	at com.google.gwt.user.server.rpc.RemoteServiceServlet.processCall(RemoteServiceServlet.java:333)
	at com.google.gwt.user.server.rpc.RemoteServiceServlet.processCall(RemoteServiceServlet.java:303)
	at com.google.gwt.user.server.rpc.RemoteServiceServlet.processPost(RemoteServiceServlet.java:373)
	at com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet.doPost(AbstractRemoteServiceServlet.java:62)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:812)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at zcare.zweb.server.GWTCacheControlFilter.doFilter(GWTCacheControlFilter.java:75)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.handler.RequestLogHandler.handle(RequestLogHandler.java:95)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:311)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:544)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Unknown Source)

20240806 12:01:05.445 006E =WRN= [SessionUtil] SessionUtil::performHeartbeat: error while performing heartbeat for System session 1901330441, this session will be cleaned from cache and stop its heartbeat
20240806 12:01:05.445 006E =API= [FunctionCheck] <App. context>: 2 -> zcare.zdataserver.ZDataAccess.getNotifications : Ticket: system:1901330443
20240806 12:01:05.445 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection
20240806 12:01:05.445 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.getUncheckedConnection : PDB0009 - Allocated=9, Used=1
20240806 12:01:05.445 0095 =API= [ZQL.PhysicalConnectionPool] PhysicalConnectionPool.fillPool: TargetMin = 10, TargetMax = 10
20240806 12:01:05.445 006E =DBG= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.getDatabaseTime : PDB0009
20240806 12:01:05.445 0095 =FUN= [FunctionCheck] <App. context>: 1 -> zcare.zdek.zql.PhysicalConnectionPool.addNewConnectionToPool : pool size: 9
20240806 12:01:05.446 0095 =DBG= [FunctionCheck] <App. context>: 2 -> zcare.zdek.zql.PhysicalConnectionPool.createNewConnection
20240806 12:01:05.446 0095 =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnection.open : PDB0019 - jdbc:sqlserver://almanhal-uat-sql-managed-instance.80994a7a809c.database.windows.net;useUnicode=true;characterEncoding=UTF-8;
20240806 12:01:05.448 006E =DBG= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnection.getDatabaseTime
20240806 12:01:05.448 006E =FUN= [FunctionCheck] <App. context>: 3 -> zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : PDB0009
20240806 12:01:05.448 006E =DBG= [FunctionCheck] <App. context>: 4 -> zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased : PDB0009
20240806 12:01:05.448 006E =DBG= [FunctionCheck] <App. context>: 4 <- zcare.zdek.zql.PhysicalConnection.connectionCanBeReleased
20240806 12:01:05.449 006E =FUN= [FunctionCheck] <App. context>: 3 <- zcare.zdek.zql.PhysicalConnectionPool.releaseConnection : Allocated=9, Used=0
20240806 12:01:05.449 006E =WRN= [FunctionCheck] <App. context>: 2 <- zcare.zdataserver.ZDataAccess.getNotifications : Throw An unmanaged error <class com.microsoft.sqlserver.jdbc.SQLServerException> occurred.
We recommend that you quit the application and restart.

If this problem persists, please contact customer support with below reference. 


Connection reset by peer: socket write error:java.net.SocketException: Connection reset by peer: socket write error

==== Call Stack ====
com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:3206)
com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:2080)
com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:4323)
com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:4225)
com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:3269)
com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:7780)
com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatement(SQLServerPreparedStatement.java:600)
com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PrepStmtExecCmd.doExecute(SQLServerPreparedStatement.java:524)
com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:7418)
com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:3272)
com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(SQLServerStatement.java:247)
com.microsoft.sqlserver.jdbc.SQLServerStatement.executeStatement(SQLServerStatement.java:222)
com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.executeUpdate(SQLServerPreparedStatement.java:473)
zcare.zdek.zql.PhysicalConnection.executeDirect(PhysicalConnection.java:1087)
zcare.zdek.zql.PhysicalConnection.getDatabaseTime(PhysicalConnection.java:2410)
zcare.zdataserver.ZDataAccess.adjustReferenceTime(ZDataAccess.java:286)
zcare.zdataserver.Session.getNotifications(Session.java:2829)
zcare.zdataserver.ZDataAccess$11.run(ZDataAccess.java:522)
zcare.zdataserver.ZDataAccess$11.run(ZDataAccess.java:1)
zcare.zdek.FunctionLogger.run(FunctionLogger.java:160)
zcare.zdataserver.ZDataAccess.function(ZDataAccess.java:2393)
zcare.zdataserver.ZDataAccess.getNotifications(ZDataAccess.java:519)
zcare.dataserver_proxy.Session$RMIZDataServer.getNotifications(Session.java:418)
zcare.dataserver_proxy.Session.performHeartbeat(Session.java:1194)
zcare.appserver.SessionUtil$2.run(SessionUtil.java:459)
zcare.appserver.ServletTimer.performTask(ServletTimer.java:208)
zcare.appserver.ServletTimer.access$6(ServletTimer.java:206)
zcare.appserver.ServletTimer$Manager.checkTimers(ServletTimer.java:175)
zcare.appserver.CallFromClient$Environment.handleClientCall(CallFromClient.java:257)
zcare.appserver.addons.ClientCallHandler.handle(ClientCallHandler.java:114)
zcare.zweb.server.ApplicationServiceImpl.handleCalls(ApplicationServiceImpl.java:306)
sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
java.lang.reflect.Method.invoke(Unknown Source)
com.google.gwt.user.server.rpc.RPC.invokeAndEncodeResponse(RPC.java:587)
com.google.gwt.user.server.rpc.RemoteServiceServlet.processCall(RemoteServiceServlet.java:333)
com.google.gwt.user.server.rpc.RemoteServiceServlet.processCall(RemoteServiceServlet.java:303)
com.google.gwt.user.server.rpc.RemoteServiceServlet.processPost(RemoteServiceServlet.java:373)
com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet.doPost(AbstractRemoteServiceServlet.java:62)
javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:812)
org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
zcare.zweb.server.GWTCacheControlFilter.doFilter(GWTCacheControlFilter.java:75)
org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
org.eclipse.jetty.server.handler.RequestLogHandler.handle(RequestLogHandler.java:95)
org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
org.eclipse.jetty.server.Server.handle(Server.java:499)
org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:311)
org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:544)
org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
java.lang.Thread.run(Unknown Source)

20240806 12:01:05.450 006E =WRN= [SessionUtil] <App. context>: Exception occurred: An unmanaged error <class java.lang.AssertionError> occurred.
We recommend that you quit the application and restart.

If this problem persists, please contact customer support with below reference. 


get notifications form server failed
java.lang.AssertionError: get notifications form server failed
	at zcare.dataserver_proxy.Session.performHeartbeat(Session.java:1196)
	at zcare.appserver.SessionUtil$2.run(SessionUtil.java:459)
	at zcare.appserver.ServletTimer.performTask(ServletTimer.java:208)
	at zcare.appserver.ServletTimer.access$6(ServletTimer.java:206)
	at zcare.appserver.ServletTimer$Manager.checkTimers(ServletTimer.java:175)
	at zcare.appserver.CallFromClient$Environment.handleClientCall(CallFromClient.java:257)
	at zcare.appserver.addons.ClientCallHandler.handle(ClientCallHandler.java:114)
	at zcare.zweb.server.ApplicationServiceImpl.handleCalls(ApplicationServiceImpl.java:306)
	at sun.reflect.GeneratedMethodAccessor64.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at com.google.gwt.user.server.rpc.RPC.invokeAndEncodeResponse(RPC.java:587)
	at com.google.gwt.user.server.rpc.RemoteServiceServlet.processCall(RemoteServiceServlet.java:333)
	at com.google.gwt.user.server.rpc.RemoteServiceServlet.processCall(RemoteServiceServlet.java:303)
	at com.google.gwt.user.server.rpc.RemoteServiceServlet.processPost(RemoteServiceServlet.java:373)
	at com.google.gwt.user.server.rpc.AbstractRemoteServiceServlet.doPost(AbstractRemoteServiceServlet.java:62)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:812)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)
	at zcare.zweb.server.GWTCacheControlFilter.doFilter(GWTCacheControlFilter.java:75)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:577)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.handler.RequestLogHandler.handle(RequestLogHandler.java:95)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)
	at org.eclipse.jetty.server.Server.handle(Server.java:499)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:311)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)
	at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:544)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)
	at java.lang.Thread.run(Unknown Source)

